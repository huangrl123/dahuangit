Ext.define("Ext.chart.interactions.PanZoom",{extend:"Ext.chart.interactions.Abstract",type:"panzoom",alias:"interaction.panzoom",requires:["Ext.draw.Animator"],config:{axes:{top:{},right:{},bottom:{},left:{}},minZoom:null,maxZoom:null,showOverflowArrows:true,panGesture:"drag",zoomGesture:"pinch",zoomOnPanGesture:false,modeToggleButton:{xtype:"segmentedbutton",width:200,defaults:{ui:"default-toolbar"},items:[{text:"Pan"},{text:"Zoom"}],cls:Ext.baseCSSPrefix+"panzoom-toggle"},hideLabelInGesture:false},stopAnimationBeforeSync:true,applyAxes:function(B,A){return Ext.merge(A||{},B)},applyZoomOnPanGesture:function(A){this.getChart();if(this.isMultiTouch()){return false}return A},updateZoomOnPanGesture:function(B){var A=this.getModeToggleButton();if(!this.isMultiTouch()){A.show();if(B){A.setValue(1)}else{A.setValue(0)}}else{A.hide()}},toggleMode:function(){var A=this;if(!A.isMultiTouch()){A.setZoomOnPanGesture(!A.getZoomOnPanGesture())}},applyModeToggleButton:function(B,A){var D=this,C=Ext.factory(B,"Ext.button.Segmented",A);if(C&&!A){C.addListener("toggle",function(E){D.setZoomOnPanGesture(E.getValue()===1)})}return C},getGestures:function(){var B=this,C={},E=B.getPanGesture(),D=B.getZoomGesture(),A=Ext.supports.Touch;C[D]="onZoomGestureMove";C[D+"start"]="onZoomGestureStart";C[D+"end"]="onZoomGestureEnd";C[E]="onPanGestureMove";C[E+"start"]="onPanGestureStart";C[E+"end"]="onPanGestureEnd";C.doubletap="onDoubleTap";return C},onDoubleTap:function(C){var D=this,A=D.getChart(),G=A.getAxes(),F,B,E;for(B=0,E=G.length;B<E;B++){F=G[B];F.setVisibleRange([0,1])}A.redraw()},onPanGestureStart:function(B){if(!B||!B.touches||B.touches.length<2){var D=this,C=D.getChart().getInnerRect(),A=D.getChart().element.getXY();D.startX=B.getX()-A[0]-C[0];D.startY=B.getY()-A[1]-C[1];D.oldVisibleRanges=null;D.hideLabels();D.getChart().suspendThicknessChanged();D.lockEvents(D.getPanGesture());return false}},onPanGestureMove:function(B){var D=this;if(D.getLocks()[D.getPanGesture()]===D){var C=D.getChart().getInnerRect(),A=D.getChart().element.getXY();if(D.getZoomOnPanGesture()){D.transformAxesBy(D.getZoomableAxes(B),0,0,(B.getX()-A[0]-C[0])/D.startX,D.startY/(B.getY()-A[1]-C[1]))}else{D.transformAxesBy(D.getPannableAxes(B),B.getX()-A[0]-C[0]-D.startX,B.getY()-A[1]-C[1]-D.startY,1,1)}D.sync();return false}},onPanGestureEnd:function(A){var B=this,C=B.getPanGesture();if(B.getLocks()[C]===B){B.getChart().resumeThicknessChanged();B.showLabels();B.sync();B.unlockEvents(C);return false}},onZoomGestureStart:function(A){if(A.touches&&A.touches.length===2){var F=this,D=F.getChart().element.getXY(),B=F.getChart().getInnerRect(),G=D[0]+B[0],H=D[1]+B[1],C=[A.touches[0].point.x-G,A.touches[0].point.y-H,A.touches[1].point.x-G,A.touches[1].point.y-H],E=Math.max(44,Math.abs(C[2]-C[0])),I=Math.max(44,Math.abs(C[3]-C[1]));F.getChart().suspendThicknessChanged();F.lastZoomDistances=[E,I];F.lastPoints=C;F.oldVisibleRanges=null;F.hideLabels();F.lockEvents(F.getZoomGesture());return false}},onZoomGestureMove:function(A){var J=this;if(J.getLocks()[J.getZoomGesture()]===J){var B=J.getChart().getInnerRect(),E=J.getChart().element.getXY(),K=E[0]+B[0],L=E[1]+B[1],H=Math.abs,I=J.lastPoints,D=[A.touches[0].point.x-K,A.touches[0].point.y-L,A.touches[1].point.x-K,A.touches[1].point.y-L],G=Math.max(44,H(D[2]-D[0])),N=Math.max(44,H(D[3]-D[1])),C=this.lastZoomDistances||[G,N],M=G/C[0],F=N/C[1];J.transformAxesBy(J.getZoomableAxes(A),B[2]*(M-1)/2+D[2]-I[2]*M,B[3]*(F-1)/2+D[3]-I[3]*F,M,F);J.sync();return false}},onZoomGestureEnd:function(A){var B=this,C=B.getZoomGesture();if(B.getLocks()[C]===B){B.getChart().resumeThicknessChanged();B.showLabels();B.sync();B.unlockEvents(C);return false}},hideLabels:function(){if(this.getHideLabelInGesture()){this.eachInteractiveAxes(function(A){A.hideLabels()})}},showLabels:function(){if(this.getHideLabelInGesture()){this.eachInteractiveAxes(function(A){A.showLabels()})}},isEventOnAxis:function(A,C){var B=C.getSurface().getRect();return B[0]<=A.getX()&&A.getX()<=B[0]+B[2]&&B[1]<=A.getY()&&A.getY()<=B[1]+B[3]},getPannableAxes:function(A){var H=this,E=H.getAxes(),G=H.getChart().getAxes(),F,D=G.length,C=[],I=false,B;if(A){for(F=0;F<D;F++){if(this.isEventOnAxis(A,G[F])){I=true;break}}}for(F=0;F<D;F++){B=E[G[F].getPosition()];if(B&&B.allowPan!==false&&(!I||this.isEventOnAxis(A,G[F]))){C.push(G[F])}}return C},getZoomableAxes:function(A){var I=this,F=I.getAxes(),H=I.getChart().getAxes(),C=[],G,E=H.length,D,J=false,B;if(A){for(G=0;G<E;G++){if(this.isEventOnAxis(A,H[G])){J=true;break}}}for(G=0;G<E;G++){D=H[G];B=F[D.getPosition()];if(B&&B.allowZoom!==false&&(!J||this.isEventOnAxis(A,D))){C.push(D)}}return C},eachInteractiveAxes:function(C){var D=this,A=D.getAxes(),E=D.getChart().getAxes();for(var B=0;B<E.length;B++){if(A[E[B].getPosition()]){if(false===C.call(this,E[B])){return}}}},transformAxesBy:function(H,D,F,J,G){var B=this.getChart().getInnerRect(),C=this.getAxes(),E,K=this.oldVisibleRanges,A=false;if(!K){this.oldVisibleRanges=K={};this.eachInteractiveAxes(function(L){K[L.getId()]=L.getVisibleRange()})}if(!B){return}for(var I=0;I<H.length;I++){E=C[H[I].getPosition()];A=this.transformAxisBy(H[I],K[H[I].getId()],D,F,J,G,this.minZoom||E.minZoom,this.maxZoom||E.maxZoom)||A}return A},transformAxisBy:function(M,J,D,N,Q,H,S,I){var G=this,E=J[1]-J[0],R=M.getVisibleRange(),B=S||G.getMinZoom()||M.config.minZoom,O=I||G.getMaxZoom()||M.config.maxZoom,L=G.getChart().getInnerRect(),P,F;if(!L){return}var K=M.isSide(),A=K?L[3]:L[2],C=K?-N:D;E/=K?H:Q;if(E<0){E=-E}if(E*B>1){E=1}if(E*O<1){E=1/O}P=J[0];F=J[1];R=R[1]-R[0];if(E===R&&R===1){return}M.setVisibleRange([(J[0]+J[1]-E)*0.5-C/A*E,(J[0]+J[1]+E)*0.5-C/A*E]);return(Math.abs(P-M.getVisibleRange()[0])>1e-10||Math.abs(F-M.getVisibleRange()[1])>1e-10)},destroy:function(){this.setModeToggleButton(null);this.callParent()}});