Ext.define("Ext.util.Sorter",{isSorter:true,config:{property:null,sorterFn:null,root:null,transform:null,direction:"ASC",id:undefined},statics:{createComparator:function(A,B){B=B||0;return function(G,E){var F=A.isCollection?A.items:A,D=F.length,H,C;for(C=0;C<D;++C){H=F[C].sort(G,E);if(H){return H}}return B&&B(G,E)}}},multiplier:1,constructor:function(A){if(A&&!this.isGrouper){if(!A.property===!A.sorterFn){Ext.Error.raise("A Sorter requires either a property or a sorterFn.")}}this.initConfig(A)},getId:function(){var A=this._id;if(!A){A=this.getProperty();if(!A){A=Ext.id(null,"ext-sorter-")}this._id=A}return A},sort:function(B,A){return this.multiplier*this.sortFn(B,A)},sortFn:function(C,A){var H=this,F=H._transform,D=H._root,B=H._property,G,E;if(D){C=C[D];A=A[D]}G=C[B];E=A[B];if(F){G=F(G);E=F(E)}return(G>E)?1:(G<E?-1:0)},applyDirection:function(A){return A?A:"ASC"},updateDirection:function(A){this.multiplier=(A.toUpperCase()==="DESC")?-1:1},updateProperty:function(A){if(A){delete this.sortFn}},updateSorterFn:function(A){this.sortFn=A},toggle:function(){this.setDirection(Ext.String.toggle(this.getDirection(),"ASC","DESC"))},getState:function(){return{root:this.getRoot(),property:this.getProperty(),direction:this.getDirection()}},serialize:function(){return{property:this.getProperty(),direction:this.getDirection()}}});