Ext.define("Ext.chart.series.sprite.CandleStick",{alias:"sprite.candlestickSeries",extend:"Ext.chart.series.sprite.Aggregative",inheritableStatics:{def:{processors:{raiseStyle:function(A,B){return Ext.merge({},B||{},A)},dropStyle:function(A,B){return Ext.merge({},B||{},A)},barWidth:"number",padding:"number",ohlcType:"enums(candlestick,ohlc)"},defaults:{raiseStyle:{strokeStyle:"green",fillStyle:"green"},dropStyle:{strokeStyle:"red",fillStyle:"red"},planar:false,barWidth:15,padding:3,lineJoin:"miter",miterLimit:5,ohlcType:"candlestick"},dirtyTriggers:{raiseStyle:"raiseStyle",dropStyle:"dropStyle"},updaters:{raiseStyle:function(){this.raiseTemplate&&this.raiseTemplate.setAttributes(this.attr.raiseStyle)},dropStyle:function(){this.dropTemplate&&this.dropTemplate.setAttributes(this.attr.dropStyle)}}}},candlestick:function(E,F,A,B,C,H,D){var G=Math.min(F,C),I=Math.max(F,C);E.moveTo(H,B);E.lineTo(H,I);E.moveTo(H+D,I);E.lineTo(H+D,G);E.lineTo(H-D,G);E.lineTo(H-D,I);E.closePath();E.moveTo(H,A);E.lineTo(H,G)},ohlc:function(E,F,G,A,B,C,D){E.moveTo(C,G);E.lineTo(C,A);E.moveTo(C,F);E.lineTo(C-D,F);E.moveTo(C,B);E.lineTo(C+D,B)},constructor:function(){this.callParent(arguments);this.raiseTemplate=new Ext.draw.sprite.Rect({parent:this});this.dropTemplate=new Ext.draw.sprite.Rect({parent:this})},getGapWidth:function(){var C=this.attr,B=C.barWidth,A=C.padding;return B+A},renderAggregates:function(N,b,J,O,G){var D=this,C=this.attr,M=C.dataX,I=C.matrix,T=I.getXX(),B=I.getYY(),L=I.getDX(),V=I.getDY(),W=C.barWidth/T,c,E=C.ohlcType,S=Math.round(W*0.5*T),A=N.open,R=N.close,U=N.maxY,X=N.minY,a=N.startIdx,K,Q,P,H,F,Y,Z=C.lineWidth*O.devicePixelRatio/2;Z-=Math.floor(Z);G.save();c=this.raiseTemplate;c.useAttributes(G);G.beginPath();for(Y=b;Y<J;Y++){if(A[Y]<=R[Y]){K=Math.round(A[Y]*B+V)+Z;Q=Math.round(U[Y]*B+V)+Z;P=Math.round(X[Y]*B+V)+Z;H=Math.round(R[Y]*B+V)+Z;F=Math.round(M[a[Y]]*T+L)+Z;D[E](G,K,Q,P,H,F,S)}}G.fillStroke(c.attr);G.restore();G.save();c=this.dropTemplate;c.useAttributes(G);G.beginPath();for(Y=b;Y<J;Y++){if(A[Y]>R[Y]){K=Math.round(A[Y]*B+V)+Z;Q=Math.round(U[Y]*B+V)+Z;P=Math.round(X[Y]*B+V)+Z;H=Math.round(R[Y]*B+V)+Z;F=Math.round(M[a[Y]]*T+L)+Z;D[E](G,K,Q,P,H,F,S)}}G.fillStroke(c.attr);G.restore()}});