Ext.define("Ext.draw.Container",{extend:"Ext.draw.ContainerBase",alternateClassName:"Ext.draw.Component",xtype:"draw",defaultType:"surface",requires:["Ext.draw.Surface","Ext.draw.engine.Svg","Ext.draw.engine.Canvas","Ext.draw.gradient.GradientDefinition"],engine:"Ext.draw.engine.Canvas",config:{cls:Ext.baseCSSPrefix+"draw-container",resizeHandler:null,background:null,sprites:null,gradients:[]},defaultDownloadServerUrl:"http://svg.sencha.io",supportedFormats:["png","pdf","jpeg","gif"],supportedOptions:{version:Ext.isNumber,data:Ext.isString,format:function(A){return Ext.Array.indexOf(this.supportedFormats,A)>=0},filename:Ext.isString,width:Ext.isNumber,height:Ext.isNumber,scale:Ext.isNumber,pdf:Ext.isObject,jpeg:Ext.isObject},initAnimator:function(){this.frameCallbackId=Ext.draw.Animator.addFrameCallback("renderFrame",this)},applyGradients:function(A){var C=[],B,D,E,F;if(!Ext.isArray(A)){return C}for(B=0,D=A.length;B<D;B++){E=A[B];if(!Ext.isObject(E)){continue}if(typeof E.type!=="string"){E.type="linear"}if(E.angle){E.degrees=E.angle;delete E.angle}if(Ext.isObject(E.stops)){E.stops=(function(G){var H=[],I;for(F in G){I=G[F];I.offset=F/100;H.push(I)}return H})(E.stops)}C.push(E)}Ext.draw.gradient.GradientDefinition.add(C);return C},applySprites:function(B){if(!B){return}B=Ext.Array.from(B);var C=B.length,A,D;for(A=0;A<C;A++){if(B[A].surface instanceof Ext.draw.Surface){D=B[A].surface}else{if(Ext.isString(B[A].surface)){D=this.getSurface(B[A].surface)}else{D=this.getSurface("main")}}D.add(B[A])}},onPlaceWatermark:Ext.emptyFn,onBodyResize:function(){var C=this,A=C.element.getSize(),D=C.getResizeHandler()||C.resizeHandler,B;C.fireEvent("resize",C,A);B=D.call(C,A);if(B!==false){C.renderFrame();C.onPlaceWatermark(A.width,A.height)}},resizeHandler:function(A){this.getItems().each(function(B){B.setRect([0,0,A.width,A.height])})},getSurface:function(D){D=this.getId()+"-"+(D||"main");var B=this,A=B.getItems(),C=A.get(D);if(!C){C=B.add({xclass:B.engine,id:D});C.renderFrame()}return C},renderFrame:function(){var C=this,E=C.getItems(),A,D,B;for(A=0,D=E.length;A<D;A++){B=E.items[A];if(B.isSurface){B.renderFrame()}}},getImage:function(B){var E=this.innerElement.getSize(),A=Array.prototype.slice.call(this.items.items),I,J,D=this.surfaceZIndexes,F,C,G,H;for(C=1;C<A.length;C++){G=A[C];H=D[G.type];F=C-1;while(F>=0&&D[A[F].type]>H){A[F+1]=A[F];F--}A[F+1]=G}I=A[0].flatten(E,A);if(B==="image"){J=new Image();J.src=I.data;I.data=J;return I}if(B==="stream"){I.data=I.data.replace(/^data:image\/[^;]+/,"data:application/octet-stream");return I}return I},download:function(B){var C=this,A=[],F,D,E;B=Ext.apply({version:2,data:C.getImage().data},B);for(D in B){if(B.hasOwnProperty(D)){E=B[D];if(D in C.supportedOptions){if(C.supportedOptions[D].call(C,E)){A.push({tag:"input",type:"hidden",name:D,value:Ext.isObject(E)?Ext.JSON.encode(E):E})}else{Ext.log.error('Invalid value for image download option "'+D+'": '+E)}}else{Ext.log.error('Invalid image download option: "'+D+'"')}}}F=Ext.dom.Helper.markup({tag:"html",children:[{tag:"head"},{tag:"body",children:[{tag:"form",method:"POST",action:B.url||C.defaultDownloadServerUrl,children:A},{tag:"script",type:"text/javascript",children:'document.getElementsByTagName("form")[0].submit();'}]}]});window.open("","ImageDownload_"+Date.now()).document.write(F)},destroy:function(){var A=this.frameCallbackId;if(A){Ext.draw.Animator.removeFrameCallback(A)}this.callParent()}},function(){if(location.search.match("svg")){Ext.draw.Container.prototype.engine="Ext.draw.engine.Svg"}else{if((Ext.os.is.BlackBerry&&Ext.os.version.getMajor()===10)||(Ext.browser.is.AndroidStock4&&(Ext.os.version.getMinor()===1||Ext.os.version.getMinor()===2||Ext.os.version.getMinor()===3))){Ext.draw.Container.prototype.engine="Ext.draw.engine.Svg"}}});