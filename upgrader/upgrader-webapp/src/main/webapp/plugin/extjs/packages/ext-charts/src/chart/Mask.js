Ext.define("Ext.chart.Mask",{mixinId:"mask",requires:["Ext.chart.MaskLayer"],constructor:function(A){var B=this;if(A){Ext.apply(B,A)}if(B.enableMask){B.on("afterrender",function(){var C=new Ext.chart.MaskLayer({renderTo:B.el,hidden:true});C.el.on({"mousemove":function(D){B.onMouseMove(D)},"mouseup":function(D){B.onMouseUp(D)}});C.initDraggable();B.maskType=B.mask;B.mask=C;B.maskSprite=B.surface.add({type:"path",path:["M",0,0],zIndex:1001,opacity:0.6,hidden:true,stroke:"#00f",cursor:"crosshair"})},B,{single:true})}},onMouseUp:function(A){var B=this,D=B.bbox||B.chartBBox,C;B.maskMouseDown=false;B.mouseDown=false;if(B.mouseMoved){B.handleMouseEvent(A);B.mouseMoved=false;C=B.maskSelection;B.fireEvent("select",B,{x:C.x-D.x,y:C.y-D.y,width:C.width,height:C.height})}},onMouseDown:function(A){this.handleMouseEvent(A)},onMouseMove:function(A){this.handleMouseEvent(A)},handleMouseEvent:function(B){var C=this,I=C.maskType,E=C.bbox||C.chartBBox,O=E.x,P=E.y,D=Math,H=D.floor,J=D.abs,F=D.min,N=D.max,Q=H(P+E.height),K=H(O+E.width),M=B.getPageX()-C.el.getX(),L=B.getPageY()-C.el.getY(),G=C.maskMouseDown,A;M=N(M,O);L=N(L,P);M=F(M,K);L=F(L,Q);if(B.type==="mousedown"){C.mouseDown=true;C.mouseMoved=false;C.maskMouseDown={x:M,y:L}}else{C.mouseMoved=C.mouseDown;if(G&&C.mouseDown){if(I=="horizontal"){L=P;G.y=Q}else{if(I=="vertical"){M=O;G.x=K}}K=G.x-M;Q=G.y-L;A=["M",M,L,"l",K,0,0,Q,-K,0,"z"];C.maskSelection={x:(K>0?M:M+K)+C.el.getX(),y:(Q>0?L:L+Q)+C.el.getY(),width:J(K),height:J(Q)};C.mask.updateBox(C.maskSelection);C.mask.show();C.maskSprite.setAttributes({hidden:true},true)}else{if(I=="horizontal"){A=["M",M,P,"L",M,Q]}else{if(I=="vertical"){A=["M",O,L,"L",K,L]}else{A=["M",M,P,"L",M,Q,"M",O,L,"L",K,L]}}C.maskSprite.setAttributes({path:A,"stroke-width":I===true?1:1,hidden:false},true)}}},onMouseLeave:function(A){var B=this;B.mouseMoved=false;B.mouseDown=false;B.maskMouseDown=false;B.mask.hide();B.maskSprite.hide(true)}});