Ext.define("Ext.util.MixedCollection",{extend:"Ext.util.AbstractMixedCollection",mixins:{sortable:"Ext.util.Sortable"},constructor:function(){var A=this;A.initConfig();A.callParent(arguments)},doSort:function(A){this.sortBy(A)},_sort:function(A,B,E){var G=this,D,H,C=String(B).toUpperCase()=="DESC"?-1:1,J=[],F=G.keys,I=G.items,K;E=E||function(M,L){return M-L};for(D=0,H=I.length;D<H;D++){J[J.length]={key:F[D],value:I[D],index:D}}Ext.Array.sort(J,function(M,L){return E(M[A],L[A])*C||(M.index<L.index?-1:1)});for(D=0,H=J.length;D<H;D++){K=J[D];I[D]=K.value;F[D]=K.key;G.indexMap[K.key]=D}G.generation++;G.indexGeneration=G.generation;G.fireEvent("sort",G)},sortBy:function(A){var E=this,G=E.items,H,D=E.keys,F,B=G.length,C;for(C=0;C<B;C++){G[C].$extCollectionIndex=C}Ext.Array.sort(G,function(J,I){return A(J,I)||(J.$extCollectionIndex<I.$extCollectionIndex?-1:1)});for(C=0;C<B;C++){H=G[C];F=E.getKey(H);D[C]=F;E.indexMap[F]=C;delete G.$extCollectionIndex}E.generation++;E.indexGeneration=E.generation;E.fireEvent("sort",E,G,D)},findInsertionIndex:function(E,C){var F=this,H=F.items,A=0,B=H.length-1,G,D;if(!C){C=F.generateComparator()}while(A<=B){G=(A+B)>>1;D=C(E,H[G]);if(D>=0){A=G+1}else{if(D<0){B=G-1}}}return A},reorder:function(H){var A=this,G=A.items,B=0,C=G.length,E=[],F=[],D;A.suspendEvents();for(D in H){E[H[D]]=G[D]}for(B=0;B<C;B++){if(H[B]==undefined){F.push(G[B])}}for(B=0;B<C;B++){if(E[B]==undefined){E[B]=F.shift()}}A.clear();A.addAll(E);A.resumeEvents();A.fireEvent("sort",A)},sortByKey:function(A,B){this._sort("key",A,B||function(E,C){var D=String(E).toUpperCase(),F=String(C).toUpperCase();return D>F?1:(D<F?-1:0)})}});