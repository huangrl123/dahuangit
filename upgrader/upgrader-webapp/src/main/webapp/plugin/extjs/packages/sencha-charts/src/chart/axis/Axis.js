Ext.define("Ext.chart.axis.Axis",{xtype:"axis",mixins:{observable:"Ext.mixin.Observable"},requires:["Ext.chart.axis.sprite.Axis","Ext.chart.axis.segmenter.*","Ext.chart.axis.layout.*"],config:{position:"bottom",fields:[],label:{},grid:false,limits:null,renderer:null,chart:null,style:null,margin:0,titleMargin:4,background:null,minimum:NaN,maximum:NaN,reconcileRange:false,minZoom:1,maxZoom:10000,layout:"continuous",segmenter:"numeric",hidden:false,majorTickSteps:0,minorTickSteps:0,adjustByMajorUnit:true,title:{},increment:0.5,length:0,center:null,radius:null,totalAngle:Math.PI,rotation:null,labelInSpan:null,visibleRange:[0,1],needHighPrecision:false,linkedTo:null,floating:null},observableType:"component",titleOffset:0,animating:0,prevMin:0,prevMax:1,boundSeries:[],sprites:null,range:null,xValues:[],yValues:[],masterAxis:null,labelDefaults:{x:0,y:0,textBaseline:"middle",textAlign:"center",fontSize:12,fontFamily:"Helvetica"},titleDefaults:{fontSize:18,fontFamily:"Helvetica"},applyRotation:function(A){var B=Math.PI*2;return(A%B+Math.PI)%B-Math.PI},updateRotation:function(A){var C=this.getSprites(),B=this.getPosition();if(!this.getHidden()&&B==="angular"&&C[0]){C[0].setAttributes({baseRotation:A})}},applyTitle:function(A,C){var B;if(Ext.isString(A)){A={text:A}}A=Ext.apply({},A,this.titleDefaults);if(!C){C=Ext.create("sprite.text",A);if((B=this.getSurface())){B.add(C)}}else{C.setAttributes(A)}return C},applyFloating:function(A,B){if(A===null){A={value:null,alongAxis:null}}else{if(Ext.isNumber(A)){A={value:A,alongAxis:null}}}if(Ext.isObject(A)){if(B&&B.alongAxis){delete this.getChart().getAxis(B.alongAxis).floatingAxes[this.getId()]}return A}return B},constructor:function(A){var B=this,C;B.sprites=[];B.labels=[];B.floatingAxes={};if(A.position==="angular"){A.style=A.style||{};A.style.estStepSize=1}if("id" in A){C=A.id}else{if("id" in B.config){C=B.config.id}else{C=B.getId()}}B.id=C;B.setId(C);B.mixins.observable.constructor.apply(B,arguments);Ext.ComponentManager.register(B);this.initConfig(A)},getAlignment:function(){switch(this.getPosition()){case"left":case"right":return"vertical";case"top":case"bottom":return"horizontal";case"radial":return"radial";case"angular":return"angular"}},getGridAlignment:function(){switch(this.getPosition()){case"left":case"right":return"horizontal";case"top":case"bottom":return"vertical";case"radial":return"circular";case"angular":return"radial"}},getSurface:function(){var G=this;if(!G.surface){var D=G.getChart();if(!D){return null}var E=G.surface=D.getSurface(G.getId(),"axis"),I=G.gridSurface=D.getSurface("main"),B=G.getSprites()[0],H=G.getGrid(),A=G.getGridAlignment(),F,C;if(H){F=G.gridSpriteEven=new Ext.chart.Markers();F.setTemplate({xclass:"grid."+A});if(Ext.isObject(H)){F.getTemplate().setAttributes(H);if(Ext.isObject(H.even)){F.getTemplate().setAttributes(H.even)}}I.add(F);B.bindMarker(A+"-even",F);F=G.gridSpriteOdd=new Ext.chart.Markers();F.setTemplate({xclass:"grid."+A});if(Ext.isObject(H)){F.getTemplate().setAttributes(H);if(Ext.isObject(H.odd)){F.getTemplate().setAttributes(H.odd)}}I.add(F);B.bindMarker(A+"-odd",F);I.waitFor(E)}if(G.getLimits()){G.limits={surface:D.getSurface("overlay"),lines:new Ext.chart.Markers(),titles:new Ext.draw.sprite.Instancing()};G.limits.lines.setTemplate({xclass:"grid."+A});G.limits.lines.getTemplate().setAttributes({strokeStyle:"black"});G.limits.surface.add(G.limits.lines);B.bindMarker(A+"-limit-lines",G.limits.lines);C=new Ext.draw.sprite.Text();C.setAttributes(G.labelDefaults);G.limits.titles.setTemplate(C);G.limits.surface.add(G.limits.titles);D.on("redraw",G.renderLimits,G)}}return G.surface},renderLimits:function(){this.getSprites()[0].renderLimits()},getCoordFor:function(C,D,A,B){return this.getLayout().getCoordFor(C,D,A,B)},applyPosition:function(A){return A.toLowerCase()},applyLength:function(A,B){return A>0?A:B},applyLabel:function(A,B){if(!B){B=new Ext.draw.sprite.Text({})}A=Ext.apply({},A,this.labelDefaults);B.setAttributes(A);return B},applyLayout:function(B,A){B=Ext.factory(B,null,A,"axisLayout");B.setAxis(this);return B},applySegmenter:function(A,B){A=Ext.factory(A,null,B,"segmenter");A.setAxis(this);return A},updateMinimum:function(){this.range=null},updateMaximum:function(){this.range=null},hideLabels:function(){this.getSprites()[0].setDirty(true);this.setLabel({hidden:true})},showLabels:function(){this.getSprites()[0].setDirty(true);this.setLabel({hidden:false})},renderFrame:function(){this.getSurface().renderFrame()},updateChart:function(C,B){var A=this,D;if(B){B.un("serieschange",A.onSeriesChange,A);A.linkAxis()}if(C){C.on("serieschange",A.onSeriesChange,A);A.surface=null;D=A.getSurface();A.getLabel().setSurface(D);D.add(A.getSprites());D.add(A.getTitle())}},applyBackground:function(B){var A=Ext.ClassManager.getByAlias("sprite.rect");return A.def.normalize(B)},processData:function(){this.getLayout().processData();this.range=null},getDirection:function(){return this.getChart().getDirectionForAxis(this.getPosition())},isSide:function(){var A=this.getPosition();return A==="left"||A==="right"},applyFields:function(A){return Ext.Array.from(A)},applyVisibleRange:function(B,A){if(B[0]>B[1]){var C=B[0];B[0]=B[1];B[0]=C}if(B[1]===B[0]){B[1]+=1/this.getMaxZoom()}if(B[1]>B[0]+1){B[0]=0;B[1]=1}else{if(B[0]<0){B[1]-=B[0];B[0]=0}else{if(B[1]>1){B[0]-=B[1]-1;B[1]=1}}}if(A&&B[0]===A[0]&&B[1]===A[1]){return undefined}return B},updateVisibleRange:function(A){this.fireEvent("transformed",this,A)},onSeriesChange:function(F){var H=this,I=F.getSeries(),G="get"+H.getDirection()+"Axis",C=[],E,B=I.length,A,D;for(E=0;E<B;E++){if(this===I[E][G]()){C.push(I[E])}}H.boundSeries=C;A=H.getLinkedTo();D=A&&F.getAxis(A);if(D){H.linkAxis(D)}else{H.getLayout().processData()}},linkAxis:function(C){var A=this;function B(D,E,F){F.getLayout()[D]("datachange","onDataChange",E);F[D]("rangechange","onRangeChange",E)}if(A.masterAxis){B("un",A,A.masterAxis);A.masterAxis=null}if(C){if(C.type!==this.type){throw"Linked axes must be of the same type."}B("on",A,C);A.onDataChange(C.getLayout().labels);A.onRangeChange(C.range);A.setStyle(Ext.apply({},A.config.style,C.config.style));A.setTitle(Ext.apply({},A.config.title,C.config.title));A.setLabel(Ext.apply({},A.config.label,C.config.label));A.masterAxis=C}},onDataChange:function(A){this.getLayout().labels=A},onRangeChange:function(A){this.range=A},applyRange:function(A){if(!A){return this.dataRange.slice(0)}else{return[A[0]===null?this.dataRange[0]:A[0],A[1]===null?this.dataRange[1]:A[1]]}},getRange:function(){var J=this,L="get"+J.getDirection()+"Range";if(J.range){return J.range}if(!isNaN(J.getMinimum())&&!isNaN(J.getMaximum())){return J.range=[J.getMinimum(),J.getMaximum()]}var C=Infinity,D=-Infinity,G=J.boundSeries,A=J.getLayout(),I=J.getSegmenter(),M=J.getVisibleRange(),O,F,N,K,H,E;for(H=0,E=G.length;H<E;H++){K=G[H];var B=K[L]();if(B){if(B[0]<C){C=B[0]}if(B[1]>D){D=B[1]}}}if(!isFinite(D)){D=J.prevMax}if(!isFinite(C)){C=J.prevMin}if(J.getLabelInSpan()||C===D){D+=J.getIncrement();C-=J.getIncrement()}if(!isNaN(J.getMinimum())){C=J.getMinimum()}else{J.prevMin=C}if(!isNaN(J.getMaximum())){D=J.getMaximum()}else{J.prevMax=D}J.range=[C,D];if(J.getReconcileRange()){J.reconcileRange()}if(J.getAdjustByMajorUnit()&&I.adjustByMajorUnit&&!J.getMajorTickSteps()){F=Ext.Object.chain(J.getSprites()[0].attr);F.min=J.range[0];F.max=J.range[1];F.visibleMin=M[0];F.visibleMax=M[1];O={attr:F,segmenter:I};A.calculateLayout(O);N=O.majorTicks;if(N){I.adjustByMajorUnit(N.step,N.unit.scale,J.range);F.min=J.range[0];F.max=J.range[1];delete O.majorTicks;A.calculateLayout(O);N=O.majorTicks;I.adjustByMajorUnit(N.step,N.unit.scale,J.range)}else{J.range=null;J.getChart().scheduleLayout()}}J.fireEvent("rangechange",J.range);return J.range},reconcileRange:function(){var E=this,A=E.getChart().getAxes(),F=E.getDirection(),B,C,G,D;if(!A){return}for(B=0,C=A.length;B<C;B++){G=A[B];D=G.getRange();if(G===E||G.getDirection()!==F||!D||!G.getReconcileRange()){continue}if(D[0]<E.range[0]){E.range[0]=D[0]}if(D[1]>E.range[1]){E.range[1]=D[1]}}},applyStyle:function(C,A){var B=Ext.ClassManager.getByAlias("sprite."+this.seriesType);if(B&&B.def){C=B.def.normalize(C)}A=Ext.apply(A||{},C);return A},updateCenter:function(D){var A=this.getSprites(),E=A[0],B=D[0],C=D[1];if(E){E.setAttributes({centerX:B,centerY:C})}if(this.gridSpriteEven){this.gridSpriteEven.getTemplate().setAttributes({translationX:B,translationY:C,rotationCenterX:B,rotationCenterY:C})}if(this.gridSpriteOdd){this.gridSpriteOdd.getTemplate().setAttributes({translationX:B,translationY:C,rotationCenterX:B,rotationCenterY:C})}},getSprites:function(){if(!this.getChart()){return}var F=this,G=F.masterAxis?F.masterAxis.range:F.getRange(),E=F.getPosition(),B=F.getChart(),H=B.getAnimation(),A,D,C=F.getLength();if(H===false){H={duration:0}}if(G){D=Ext.applyIf({position:E,axis:F,min:G[0],max:G[1],length:C,grid:F.getGrid(),hidden:F.getHidden(),titleOffset:F.titleOffset,layout:F.getLayout(),segmenter:F.getSegmenter(),totalAngle:F.getTotalAngle(),label:F.getLabel()},F.getStyle());if(!F.sprites.length){A=new Ext.chart.axis.sprite.Axis(D);A.fx.setCustomDuration({baseRotation:0});A.fx.on("animationstart","onAnimationStart",F);A.fx.on("animationend","onAnimationEnd",F);A.setLayout(F.getLayout());A.setSegmenter(F.getSegmenter());A.setLabel(F.getLabel());F.sprites.push(A);F.updateTitleSprite()}else{A=F.sprites[0];A.fx.setConfig(H);A.setAttributes(D)}if(F.getRenderer()){A.setRenderer(F.getRenderer())}}return F.sprites},updateTitleSprite:function(){if(!this.sprites[0]||isNaN(this.getLength())){return}var H=this,A=this.sprites[0].thickness,D=H.getSurface(),C=H.getTitle(),F=H.getPosition(),E=H.getMargin(),B=H.getTitleMargin(),I=H.getLength(),G=D.roundPixel(I/2);if(C){switch(F){case"top":C.setAttributes({x:G,y:E+B/2,textBaseline:"top",textAlign:"center"},true,true);C.applyTransformations();H.titleOffset=C.getBBox().height+B;break;case"bottom":C.setAttributes({x:G,y:A+B/2,textBaseline:"top",textAlign:"center"},true,true);C.applyTransformations();H.titleOffset=C.getBBox().height+B;break;case"left":C.setAttributes({x:E+B/2,y:G,textBaseline:"top",textAlign:"center",rotationCenterX:E+B/2,rotationCenterY:G,rotationRads:-Math.PI/2},true,true);C.applyTransformations();H.titleOffset=C.getBBox().width+B;break;case"right":C.setAttributes({x:A-E+B/2,y:G,textBaseline:"bottom",textAlign:"center",rotationCenterX:A+B/2,rotationCenterY:G,rotationRads:Math.PI/2},true,true);C.applyTransformations();H.titleOffset=C.getBBox().width+B;break}}},onThicknessChanged:function(){this.getChart().onThicknessChanged()},getThickness:function(){if(this.getHidden()){return 0}return(this.sprites[0]&&this.sprites[0].thickness||1)+this.titleOffset+this.getMargin()},onAnimationStart:function(){this.animating++;if(this.animating===1){this.fireEvent("animationstart")}},onAnimationEnd:function(){this.animating--;if(this.animating===0){this.fireEvent("animationend")}},getItemId:function(){return this.getId()},getAncestorIds:function(){return[this.getChart().getId()]},isXType:function(A){return A==="axis"},destroy:function(){var A=this.getChart();if(A){A.un("redraw",this.renderLimits,this)}this.linkAxis();Ext.ComponentManager.unregister(this);this.callParent()}});