Ext.define("Ext.dom.Fly",{extend:"Ext.dom.Element",alternateClassName:"Ext.dom.Element.Fly",isFly:true,constructor:function(A){this.dom=A;this.el=this},attach:function(A){if(!A){return this.detach()}var B=this,C=Ext.cache[A.id];B.dom=A;B.isSynchronized=false;if(C){C.isSynchronized=false}return this},detach:function(){this.dom=this.classList=this.hasClassMap=null},addListener:function(){Ext.Error.raise("Cannot use addListener() on Ext.dom.Fly instances. Please use Ext.get() to retrieve an Ext.dom.Element instance instead.")}||null,removeListener:function(){Ext.Error.raise("Cannot use removeListener() on Ext.dom.Fly instances. Please use Ext.get() to retrieve an Ext.dom.Element instance instead.")}||null},function(A){var B={};A.cache=B;Ext.fly=function(C,G){var F=null,E=Ext.fly,D;G=G||(E.caller&&E.caller.$name)||"_global";C=Ext.getDom(C);if(C){D=C.nodeType;if(Ext.Element.validNodeTypes[D]||(!D&&(C.window===C))){F=Ext.cache[C.id];if(!F||F.dom!==C){F=B[G]||(B[G]=new A());F.dom=C;F.isSynchronized=false}}}return F}});