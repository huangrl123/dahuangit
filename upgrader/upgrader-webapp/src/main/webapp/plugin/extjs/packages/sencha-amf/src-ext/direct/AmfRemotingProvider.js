Ext.define("Ext.direct.AmfRemotingProvider",{alias:"direct.amfremotingprovider",extend:"Ext.direct.Provider",requires:["Ext.util.MixedCollection","Ext.util.DelayedTask","Ext.direct.Transaction","Ext.direct.RemotingMethod","Ext.data.amf.XmlEncoder","Ext.data.amf.XmlDecoder","Ext.data.amf.Encoder","Ext.data.amf.Packet","Ext.data.amf.RemotingMessage","Ext.direct.ExceptionEvent"],binary:false,maxRetries:1,timeout:undefined,constructor:function(A){var B=this;B.callParent(arguments);B.addEvents("beforecall","call");B.namespace=(Ext.isString(B.namespace))?Ext.ns(B.namespace):B.namespace||window;B.transactions=new Ext.util.MixedCollection();B.callBuffer=[]},initAPI:function(){var A=this.actions,H=this.namespace,G,B,C,D,F,E;for(G in A){if(A.hasOwnProperty(G)){B=H[G];if(!B){B=H[G]={}}C=A[G];for(D=0,F=C.length;D<F;++D){E=new Ext.direct.RemotingMethod(C[D]);B[E.name]=this.createHandler(G,E)}}}},createHandler:function(A,D){var C=this,B;if(!D.formHandler){B=function(){C.configureRequest(A,D,Array.prototype.slice.call(arguments,0))}}else{B=function(F,E,G){C.configureFormRequest(A,D,F,E,G)}}B.directCfg={action:A,method:D};return B},isConnected:function(){return !!this.connected},connect:function(){var A=this;if(A.url){A.clientId=Ext.data.amf.XmlEncoder.generateFlexUID();A.initAPI();A.connected=true;A.fireEvent("connect",A);A.DSId=null}else{if(!A.url){Ext.Error.raise("Error initializing RemotingProvider, no url configured.")}}},disconnect:function(){var A=this;if(A.connected){A.connected=false;A.fireEvent("disconnect",A)}},runCallback:function(D,F){var A=!!F.status,C=A?"success":"failure",E,B;if(D&&D.callback){E=D.callback;B=Ext.isDefined(F.result)?F.result:F.data;if(Ext.isFunction(E)){E(B,F,A)}else{Ext.callback(E[C],E.scope,[B,F,A]);Ext.callback(E.callback,E.scope,[B,F,A])}}},onData:function(F,B,J){var G=this,E=0,H,I,D,A,C;if(B){I=G.createEvents(J);for(H=I.length;E<H;++E){D=I[E];A=G.getTransaction(D);G.fireEvent("data",G,D);if(A){G.runCallback(A,D,true);Ext.direct.Manager.removeTransaction(A)}}}else{C=[].concat(F.transaction);for(H=C.length;E<H;++E){A=G.getTransaction(C[E]);if(A&&A.retryCount<G.maxRetries){A.retry()}else{D=new Ext.direct.ExceptionEvent({data:null,transaction:A,code:Ext.direct.Manager.exceptions.TRANSPORT,message:"Unable to connect to the server.",xhr:J});G.fireEvent("data",G,D);if(A){G.runCallback(A,D,false);Ext.direct.Manager.removeTransaction(A)}}}}},getTransaction:function(A){return A&&A.tid?Ext.direct.Manager.getTransaction(A.tid):null},configureRequest:function(H,G,B){var F=this,I=G.getCallData(B),D=I.data,C=I.callback,E=I.scope,A;A=new Ext.direct.Transaction({provider:F,args:B,action:H,method:G.name,data:D,callback:E&&Ext.isFunction(C)?Ext.Function.bind(C,E):C});if(F.fireEvent("beforecall",F,A,G)!==false){Ext.direct.Manager.addTransaction(A);F.queueTransaction(A);F.fireEvent("call",F,A,G)}},getCallData:function(A){if(this.binary){return{targetUri:A.action+"."+A.method,responseUri:"/"+A.id,body:A.data||[]}}else{return new Ext.data.amf.RemotingMessage({body:A.data||[],clientId:this.clientId,destination:A.action,headers:{DSEndpoint:this.endpoint,DSId:this.DSId||"nil"},messageId:Ext.data.amf.XmlEncoder.generateFlexUID(A.id),operation:A.method,timestamp:0,timeToLive:0})}},sendRequest:function(B){var H=this,E={url:H.url,callback:H.onData,scope:H,transaction:B,timeout:H.timeout},J,F=0,I,G,A,C=[],D=[];if(Ext.isArray(B)){if(!H.binary){Ext.Error.raise("Mutltiple messages in the same call are not supported in AMFX")}for(I=B.length;F<I;++F){C.push(H.getCallData(B[F]))}}else{C.push(H.getCallData(B))}if(H.binary){A=new Ext.data.amf.Encoder({format:0});A.writeAmfPacket(D,C);E.binaryData=A.bytes;E.binary=true;E.headers={"Content-Type":"application/x-amf"}}else{A=new Ext.data.amf.XmlEncoder();A.writeAmfxRemotingPacket(C[0]);E.xmlData=A.body}Ext.Ajax.request(E)},queueTransaction:function(B){var A=this,C=false;if(B.form){A.sendFormRequest(B);return}A.callBuffer.push(B);if(C){if(!A.callTask){A.callTask=new Ext.util.DelayedTask(A.combineAndSend,A)}A.callTask.delay(Ext.isNumber(C)?C:10)}else{A.combineAndSend()}},combineAndSend:function(){var A=this.callBuffer,B=A.length;if(B>0){this.sendRequest(B==1?A[0]:A);this.callBuffer=[]}},configureFormRequest:function(A,C,B,E,D){Ext.Error.raise("Form requests are not supported for AmfRemoting")},sendFormRequest:function(A){Ext.Error.raise("Form requests are not supported for AmfRemoting")},createEvents:function(I){var D=null,A=[],H=[],E,F=0,G,B;try{if(this.binary){B=new Ext.data.amf.Packet();D=B.decode(I.responseBytes)}else{B=new Ext.data.amf.XmlDecoder();D=B.readAmfxMessage(I.responseText)}}catch(C){E=new Ext.direct.ExceptionEvent({data:C,xhr:I,code:Ext.direct.Manager.exceptions.PARSE,message:"Error parsing AMF response: \n\n "+D});return[E]}if(this.binary){for(F=0;F<D.messages.length;F++){H.push(this.createEvent(D.messages[F]))}}else{H.push(this.createEvent(D))}return H},createEvent:function(F){var D=F.targetURI.split("/"),C,E,G,B,A=this;if(A.binary){C=D[1];B=2}else{C=Ext.data.amf.XmlDecoder.decodeTidFromFlexUID(F.message.correlationId);B=1}if(D[B]=="onStatus"){G={tid:C,data:(A.binary?F.body:F.message)};E=Ext.create("direct.exception",G)}else{if(D[B]=="onResult"){G={tid:C,data:(A.binary?F.body:F.message.body)};E=Ext.create("direct.rpc",G)}else{Ext.Error.raise("Unknown AMF return status: "+D[B])}}return E}});