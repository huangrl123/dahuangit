Ext.define("Ext.event.ListenerStack",{currentOrder:"current",length:0,constructor:function(){this.listeners={before:[],current:[],after:[]};this.lateBindingMap={};return this},add:function(G,C,D,I,E){var F=this.lateBindingMap,L=this.getAll(I),J=L.length,A=typeof G==="string",K,B,H;if(A&&C&&C.isIdentifiable){H=C.getId();K=F[H];if(K){if(K[G]){return false}else{K[G]=true}}else{F[H]=K={};K[G]=true}}else{if(J>0){while(J--){B=L[J];if(B.fn===G&&B.scope===C){B.options=D;return false}}}}B=this.create(G,C,D,I,E);if(A&&(!C||C==="this"||C==="controller")){B.boundFn=this.bindDynamicScope(E,G,C);B.isLateBinding=false}if(D&&D.prepend){delete D.prepend;L.unshift(B)}else{L.push(B)}this.length++;return true},bindDynamicScope:function(B,C,A){return function(){var D=B.resolveListenerScope(A);if(typeof D[C]!=="function"){Ext.Error.raise("No such method "+C+" on "+D.$className)}return D[C].apply(D,arguments)}},getAt:function(B,A){return this.getAll(A)[B]},getAll:function(A){return this.listeners[A||this.currentOrder]},count:function(A){return this.getAll(A).length},create:function(B,D,C,E,A){C=C||{};return{stack:this,fn:B,firingFn:false,boundFn:false,isLateBinding:typeof B==="string",scope:D,options:C,order:E,observable:A,type:C.type}},remove:function(F,B,H){var I=this.getAll(H),D=I.length,C=false,E=this.lateBindingMap,A,G;if(D>0){while(D--){A=I[D];if(A.fn===F&&A.scope===B){I.splice(D,1);C=true;this.length--;if(B&&B.isIdentifiable&&typeof F==="string"){G=B.getId();if(E[G]&&E[G][F]){delete E[G][F]}}break}}}return C}});