Ext.define("Ext.chart.axis.Time",{extend:"Ext.chart.axis.Numeric",alternateClassName:"Ext.chart.TimeAxis",type:"Time",alias:"axis.time",uses:["Ext.data.Store"],dateFormat:false,fromDate:false,toDate:false,step:[Ext.Date.DAY,1],constrain:false,constructor:function(B){var C=this,A,E,D;C.callParent([B]);A=C.label||{};D=this.dateFormat;if(D){if(A.renderer){E=A.renderer;A.renderer=function(F){F=E(F);return Ext.Date.format(new Date(E(F)),D)}}else{A.renderer=function(F){return Ext.Date.format(new Date(F>>0),D)}}}},processView:function(){var A=this;if(A.fromDate){A.minimum=+A.fromDate}if(A.toDate){A.maximum=+A.toDate}if(A.constrain){A.doConstrain()}},calcEnds:function(){var B=this,C,A=B.step;if(A){C=B.getRange();C=Ext.draw.Draw.snapEndsByDateAndStep(new Date(C.min),new Date(C.max),Ext.isNumber(A)?[Date.MILLI,A]:A);if(B.minimum){C.from=B.minimum}if(B.maximum){C.to=B.maximum}return C}else{return B.callParent(arguments)}}});