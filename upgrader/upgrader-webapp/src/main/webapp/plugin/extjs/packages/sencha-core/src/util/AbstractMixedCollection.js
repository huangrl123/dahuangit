Ext.define("Ext.util.AbstractMixedCollection",{requires:["Ext.util.Filter"],mixins:{observable:"Ext.util.Observable"},isMixedCollection:true,generation:0,indexGeneration:0,constructor:function(C,B){var A=this;if(arguments.length===1&&Ext.isObject(C)){A.initialConfig=C;Ext.apply(A,C)}else{A.allowFunctions=C===true;if(B){A.getKey=B}A.initialConfig={allowFunctions:A.allowFunctions,getKey:A.getKey}}A.items=[];A.map={};A.keys=[];A.indexMap={};A.length=0;A.mixins.observable.constructor.call(A)},allowFunctions:false,add:function(A,B){var D=this.length,C;if(arguments.length===1){C=this.insert(D,A)}else{C=this.insert(D,A,B)}return C},getKey:function(A){return A.id},replace:function(A,B){var D=this,C,E;if(arguments.length==1){B=arguments[0];A=D.getKey(B)}C=D.map[A];if(typeof A=="undefined"||A===null||typeof C=="undefined"){return D.add(A,B)}D.generation++;E=D.indexOfKey(A);D.items[E]=B;D.map[A]=B;if(D.hasListeners.replace){D.fireEvent("replace",A,C,B)}return B},updateKey:function(D,F){var C=this,A=C.map,E=C.indexOfKey(D),G=C.indexMap,B;if(E>-1){B=A[D];delete A[D];delete G[D];A[F]=B;G[F]=E;C.keys[E]=F;C.indexGeneration=++C.generation}},addAll:function(C){var B=this,A;if(arguments.length>1||Ext.isArray(C)){B.insert(B.length,arguments.length>1?arguments:C)}else{for(A in C){if(C.hasOwnProperty(A)){if(B.allowFunctions||typeof C[A]!="function"){B.add(A,C[A])}}}}},each:function(C,F){var D=Ext.Array.push([],this.items),A=0,E=D.length,B;for(;A<E;A++){B=D[A];if(C.call(F||B,B,A,E)===false){break}}},eachKey:function(C,F){var D=this.keys,B=this.items,A=0,E=D.length;for(;A<E;A++){C.call(F||window,D[A],B[A],A,E)}},findBy:function(C,F){var D=this.keys,B=this.items,A=0,E=B.length;for(;A<E;A++){if(C.call(F||window,B[A],D[A])){return B[A]}}return null},find:function(){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn("Ext.util.MixedCollection: find has been deprecated. Use findBy instead.")}return this.findBy.apply(this,arguments)},insert:function(D,A,B){var C;if(Ext.isIterable(A)){C=this.doInsert(D,A,B)}else{if(arguments.length>2){C=this.doInsert(D,[A],[B])}else{C=this.doInsert(D,[A])}C=C[0]}return C},doInsert:function(C,J,E){var K=this,I,G,H,L=J.length,B=L,A=K.hasListeners.add,O,N={},F,M,D;if(E!=null){K.useLinearSearch=true}else{E=J;J=new Array(L);for(H=0;H<L;H++){J[H]=this.getKey(E[H])}}K.suspendEvents();for(H=0;H<L;H++){I=J[H];G=K.indexOfKey(I);if(G!==-1){if(G<C){C--}K.removeAt(G)}if(I!=null){if(N[I]!=null){F=true;B--}N[I]=H}}K.resumeEvents();if(F){M=J;D=E;J=new Array(B);E=new Array(B);H=0;for(I in N){J[H]=M[N[I]];E[H]=D[N[I]];H++}L=B}O=C===K.length&&K.indexGeneration===K.generation;Ext.Array.insert(K.items,C,E);Ext.Array.insert(K.keys,C,J);K.length+=L;K.generation++;if(O){K.indexGeneration=K.generation}for(H=0;H<L;H++,C++){I=J[H];if(I!=null){K.map[I]=E[H];if(O){K.indexMap[I]=C}}if(A){K.fireEvent("add",C,E[H],I)}}return E},remove:function(A){var B=this,C,D;if(!B.useLinearSearch&&(C=B.getKey(A))){D=B.indexOfKey(C)}else{D=Ext.Array.indexOf(B.items,A)}return(D===-1)?false:B.removeAt(D)},removeAll:function(C){var B=this,A;if(C||B.hasListeners.remove){if(C){for(A=C.length-1;A>=0;--A){B.remove(C[A])}}else{while(B.length){B.removeAt(0)}}}else{B.length=B.items.length=B.keys.length=0;B.map={};B.indexMap={};B.generation++;B.indexGeneration=B.generation}},removeAt:function(D){var C=this,B,A;if(D<C.length&&D>=0){C.length--;B=C.items[D];Ext.Array.erase(C.items,D,1);A=C.keys[D];if(typeof A!="undefined"){delete C.map[A]}Ext.Array.erase(C.keys,D,1);if(C.hasListeners.remove){C.fireEvent("remove",B,A)}C.generation++;return B}return false},removeRange:function(B,C){var F=this,E,G,D,A,I,H;if(B<F.length&&B>=0){if(!C){C=1}A=Math.min(B+C,F.length);C=A-B;H=A===F.length;I=H&&F.indexGeneration===F.generation;for(D=B;D<A;D++){G=F.keys[D];if(G!=null){delete F.map[G];if(I){delete F.indexMap[G]}}}E=F.items[D-1];F.length-=C;F.generation++;if(I){F.indexGeneration=F.generation}if(H){F.items.length=F.keys.length=F.length}else{F.items.splice(B,C);F.keys.splice(B,C)}return E}return false},removeAtKey:function(A){var C=this,D=C.keys,B;if(A==null){for(B=D.length-1;B>=0;B--){if(D[B]==null){C.removeAt(B)}}}else{return C.removeAt(C.indexOfKey(A))}},getCount:function(){return this.length},indexOf:function(B){var C=this,A;if(B!=null){if(!C.useLinearSearch&&(A=C.getKey(B))){return this.indexOfKey(A)}return Ext.Array.indexOf(C.items,B)}return -1},indexOfKey:function(A){if(!this.map.hasOwnProperty(A)){return -1}if(this.indexGeneration!==this.generation){this.rebuildIndexMap()}return this.indexMap[A]},rebuildIndexMap:function(){var B=this,E=B.indexMap={},D=B.keys,C=D.length,A;for(A=0;A<C;A++){E[D[A]]=A}B.indexGeneration=B.generation},get:function(A){var D=this,B=D.map[A],C=B!==undefined?B:(typeof A=="number")?D.items[A]:undefined;return typeof C!="function"||D.allowFunctions?C:null},getAt:function(A){return this.items[A]},getByKey:function(A){return this.map[A]},contains:function(B){var C=this,A;if(B!=null){if(!C.useLinearSearch&&(A=C.getKey(B))){return this.map[A]!=null}return Ext.Array.indexOf(this.items,B)!==-1}return false},containsKey:function(A){return this.map.hasOwnProperty(A)},clear:function(){var A=this;if(A.generation){A.length=0;A.items=[];A.keys=[];A.map={};A.indexMap={};A.generation++;A.indexGeneration=A.generation}if(A.hasListeners.clear){A.fireEvent("clear")}},first:function(){return this.items[0]},last:function(){return this.items[this.length-1]},sum:function(D,C,A,B){var F=this.extractValues(D,C),G=F.length,H=0,E;A=A||0;B=(B||B===0)?B:G-1;for(E=A;E<=B;E++){H+=F[E]}return H},collect:function(B,D,A){var G=this.extractValues(B,D),I=G.length,H={},C=[],E,J,F;for(F=0;F<I;F++){E=G[F];J=String(E);if((A||!Ext.isEmpty(E))&&!H[J]){H[J]=true;C.push(E)}}return C},extractValues:function(B,A){var C=this.items;if(A){C=Ext.Array.pluck(C,A)}return Ext.Array.pluck(C,B)},hasRange:function(B,A){return(A<this.length)},getRange:function(A,C){var F=this,E=F.items,H=[],G=E.length,D,B;if(G<1){return H}if(A>C){B=true;D=A;A=C;C=D}if(A<0){A=0}if(C==null||C>=G){C=G-1}H=E.slice(A,C+1);if(B&&H.length){H.reverse()}return H},filter:function(B,C,A,D){var E=[];if(Ext.isString(B)){E.push(new Ext.util.Filter({property:B,value:C,anyMatch:A,caseSensitive:D}))}else{if(Ext.isArray(B)||B instanceof Ext.util.Filter){E=E.concat(B)}}return this.filterBy(Ext.util.Filter.createFilterFn(E))},filterBy:function(D,A){var F=this,G=new F.self(F.initialConfig),E=F.keys,H=F.items,B=H.length,C;G.getKey=F.getKey;for(C=0;C<B;C++){if(D.call(A||F,H[C],E[C])){G.add(E[C],H[C])}}G.useLinearSearch=F.useLinearSearch;return G},findIndex:function(B,C,E,A,D){if(Ext.isEmpty(C,false)){return -1}C=this.createValueMatcher(C,A,D);return this.findIndexBy(function(F){return F&&C.test(F[B])},null,E)},findIndexBy:function(D,B,A){var F=this,E=F.keys,H=F.items,C=A||0,G=H.length;for(;C<G;C++){if(D.call(B||F,H[C],E[C])){return C}}return -1},createValueMatcher:function(C,A,D,B){if(!C.exec){var E=Ext.String.escapeRegex;C=String(C);if(A===true){C=E(C)}else{C="^"+E(C);if(B===true){C+="$"}}C=new RegExp(C,D?"":"i")}return C},clone:function(){var A=this,B=new A.self(A.initialConfig);B.add(A.keys,A.items);B.useLinearSearch=A.useLinearSearch;return B}});