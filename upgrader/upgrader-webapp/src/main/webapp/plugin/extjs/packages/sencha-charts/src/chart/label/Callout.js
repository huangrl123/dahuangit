Ext.define("Ext.chart.label.Callout",{extend:"Ext.draw.modifier.Modifier",prepareAttributes:function(A){if(!A.hasOwnProperty("calloutOriginal")){A.calloutOriginal=Ext.Object.chain(A);A.calloutOriginal.$prototype=A}if(this._previous){this._previous.prepareAttributes(A.calloutOriginal)}},setAttrs:function(D,P){var G=D.callout,F=D.calloutOriginal,M=D.bbox.plain,I=(M.width||0)+D.labelOverflowPadding,B=(M.height||0)+D.labelOverflowPadding,J,H;if("callout" in P){G=P.callout}if("callout" in P||"calloutPlaceX" in P||"calloutPlaceY" in P||"x" in P||"y" in P){var N="rotationRads" in P?F.rotationRads=P.rotationRads:F.rotationRads,K="x" in P?(F.x=P.x):F.x,L="y" in P?(F.y=P.y):F.y,A="calloutPlaceX" in P?P.calloutPlaceX:D.calloutPlaceX,C="calloutPlaceY" in P?P.calloutPlaceY:D.calloutPlaceY,O="calloutVertical" in P?P.calloutVertical:D.calloutVertical,E;N%=Math.PI*2;if(Math.cos(N)<0){N=(N+Math.PI)%(Math.PI*2)}if(N>Math.PI){N-=Math.PI*2}if(O){N=N*(1-G)-Math.PI/2*G;E=I;I=B;B=E}else{N=N*(1-G)}P.rotationRads=N;P.x=K*(1-G)+A*G;P.y=L*(1-G)+C*G;J=A-K;H=C-L;if(Math.abs(H*I)>Math.abs(J*B)){if(H>0){P.calloutEndX=P.x-(B/2)*(J/H)*G;P.calloutEndY=P.y-(B/2)*G}else{P.calloutEndX=P.x+(B/2)*(J/H)*G;P.calloutEndY=P.y+(B/2)*G}}else{if(J>0){P.calloutEndX=P.x-I/2;P.calloutEndY=P.y-(I/2)*(H/J)*G}else{P.calloutEndX=P.x+I/2;P.calloutEndY=P.y+(I/2)*(H/J)*G}}if(P.calloutStartX&&P.calloutStartY){P.calloutHasLine=(J>0&&P.calloutStartX<P.calloutEndX)||(J<=0&&P.calloutStartX>P.calloutEndX)||(H>0&&P.calloutStartY<P.calloutEndY)||(H<=0&&P.calloutStartY>P.calloutEndY)}else{P.calloutHasLine=true}}return P},pushDown:function(B,A){A=Ext.draw.modifier.Modifier.prototype.pushDown.call(this,B.calloutOriginal,A);return this.setAttrs(B,A)},popUp:function(B,A){B=B.$prototype||{};A=this.setAttrs(B,A);if(this._next){return this._next.popUp(B,A)}else{return Ext.apply(B,A)}}});