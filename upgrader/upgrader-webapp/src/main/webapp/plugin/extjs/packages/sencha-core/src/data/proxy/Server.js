Ext.define("Ext.data.proxy.Server",{extend:"Ext.data.proxy.Proxy",alias:"proxy.server",alternateClassName:"Ext.data.ServerProxy",uses:["Ext.data.Request"],isRemote:true,config:{url:"",pageParam:"page",startParam:"start",limitParam:"limit",groupParam:"group",groupDirectionParam:"groupDir",sortParam:"sort",filterParam:"filter",directionParam:"dir",idParam:"id",simpleSortMode:false,simpleGroupMode:false,noCache:true,cacheString:"_dc",timeout:30000,api:{create:undefined,read:undefined,update:undefined,destroy:undefined},extraParams:{}},create:function(){return this.doRequest.apply(this,arguments)},read:function(){return this.doRequest.apply(this,arguments)},update:function(){return this.doRequest.apply(this,arguments)},erase:function(){return this.doRequest.apply(this,arguments)},setExtraParam:function(A,B){this.getExtraParams()[A]=B},buildRequest:function(F){var D=this,B=Ext.apply({},F.getParams()),G=Ext.applyIf(B,D.getExtraParams()||{}),C,E,A;Ext.applyIf(G,D.getParams(F));E=F.getId();A=D.getIdParam();if(E!==undefined&&G[A]===undefined){G[A]=E}C=new Ext.data.Request({params:G,action:F.getAction(),records:F.getRecords(),operation:F,proxy:D});C.setUrl(D.buildUrl(C));F.setRequest(C);return C},processResponse:function(A,D,C,H){var F=this,G,E,B;if(A===true){E=F.getReader();B=E.read(F.extractResponseData(H),{recordCreator:D.getRecordCreator()});D.process(B,C,H);G=!D.wasSuccessful()}else{F.setException(D,H);G=true}if(G){F.fireEvent("exception",F,H,D)}F.afterRequest(C,A)},setException:function(A,B){A.setException({status:B.status,statusText:B.statusText,response:B})},extractResponseData:Ext.identityFn,applyEncoding:function(A){return Ext.encode(A)},encodeSorters:function(B,E){var D=[],A=B.length,C;for(C=0;C<A;C++){D[C]=B[C].serialize()}return this.applyEncoding(E?D[0]:D)},encodeFilters:function(D){var E=[],A=D.length,B,C;for(B=0;B<A;B++){E[B]=D[B].serialize()}return this.applyEncoding(E)},getParams:function(T){if(!T.isReadOperation){return{}}var I=this,O={},F=T.getGrouper(),S=T.getSorters(),J=T.getFilters(),M=T.getPage(),L=T.getStart(),G=T.getLimit(),A=I.getSimpleSortMode(),N=I.getSimpleGroupMode(),K=I.getPageParam(),C=I.getStartParam(),E=I.getLimitParam(),B=I.getGroupParam(),Q=I.getGroupDirectionParam(),P=I.getSortParam(),R=I.getFilterParam(),H=I.getDirectionParam(),U,D;if(K&&M){O[K]=M}if(C&&(L||L===0)){O[C]=L}if(E&&G){O[E]=G}U=B&&F;if(U){if(N){O[B]=F.getProperty();O[Q]=F.getDirection()}else{O[B]=I.encodeSorters([F],true)}}if(P&&S&&S.length>0){if(A){D=0;if(S.length>1&&U){D=1}O[P]=S[D].getProperty();O[H]=S[D].getDirection()}else{O[P]=I.encodeSorters(S)}}if(R&&J&&J.length>0){O[R]=I.encodeFilters(J)}return O},buildUrl:function(B){var C=this,A=C.getUrl(B);if(!A){Ext.Error.raise("You are using a ServerProxy but have not supplied it with a url.")}if(C.getNoCache()){A=Ext.urlAppend(A,Ext.String.format("{0}={1}",C.getCacheString(),Ext.Date.now()))}return A},getUrl:function(B){var A;if(B){A=B.getUrl()||this.getApi()[B.getAction()]}return A?A:this.callParent()},doRequest:function(A){Ext.Error.raise("The doRequest function has not been implemented on your Ext.data.proxy.Server subclass. See src/data/ServerProxy.js for details")},afterRequest:Ext.emptyFn,onDestroy:function(){Ext.destroy(this.getReader(),this.getWriter())}});