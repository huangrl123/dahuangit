Ext.define("Ext.util.GroupCollection",{extend:"Ext.util.Collection",requires:["Ext.util.Group","Ext.util.SorterCollection","Ext.util.FilterCollection"],isGroupCollection:true,config:{itemRoot:null},observerPriority:-100,onCollectionAdd:function(A,B){this.addItemsToGroups(A,B.items)},onCollectionBeforeItemChange:function(B,D){var A=this,C=D.item,E=B.getKey(C);A.onCollectionAdd=A.onCollectionRemove=A.onCollectionUpdateKey=null;A.syncItemGrouping(B,C,E,D.oldKey)},onCollectionBeginUpdate:function(){this.beginUpdate()},onCollectionEndUpdate:function(){this.endUpdate()},onCollectionItemChange:function(A,B){delete this.onCollectionAdd;delete this.onCollectionRemove;delete this.onCollectionUpdateKey},onCollectionRefresh:function(A){this.removeAll();this.addItemsToGroups(A,A.items)},onCollectionRemove:function(E,B){var F=this,H=F.groupItems(E,B.items,false),A,C,D,G,I;for(D=0,G=H.length;D<G;++D){C=(A=H[D]).group;if(C){C.remove(A.items);if(!C.length){(I||(I=[])).push(C)}}}if(I){F.remove(I)}},onCollectionSort:function(C){var E=this,B=C.getSorters(),F=E.items,A=E.length,D,G;for(D=0;D<A;++D){G=F[D];if(G.getSorters()!==B){G.setSorters(B)}}},onCollectionUpdateKey:function(A,B){this.syncItemGrouping(A,B.item,B.newKey,B.oldKey)},addItemsToGroups:function(C,F){var E=this,G=E.groupItems(C,F,true),B,A,D;for(A=0,D=G.length;A<D;++A){B=G[A];B.group.add(B.items)}},groupItems:function(K,N,B){var L=this,E={},J=[],C=K.getGrouper(),P=L.itemGroupKeys,O,H,A,G,D,F,M,I;for(G=0,M=N.length;G<M;++G){A=C.getGroupString(D=N[G]);F=K.getKey(D);if(B){(P||(L.itemGroupKeys=P={}))[F]=A}else{if(P){delete P[F]}}if(!(O=E[A])){if(!(H=L.getByKey(A))&&B){(I||(I=[])).push(H=L.createGroup(K,A))}J.push(E[A]=O={group:H,items:[]})}O.items.push(D)}if(I){L.add(I)}return J},syncItemGrouping:function(I,M,H,A){var J=this,L=J.itemGroupKeys||(J.itemGroupKeys={}),D=I.getGrouper(),B=D.getGroupString(M),F=0,C,G,E,K;if(A){K=L[A];delete L[A]}else{K=L[H]}L[H]=B;if(!(G=J.get(B))){G=J.createGroup(I,B);C=[G]}if(G.get(H)!==M){G.add(M)}else{G.itemChanged(M)}if(B!==K&&(K===0||K)){E=J.get(K);if(E){E.remove(M);if(!E.length){F=[E]}}}if(C){J.splice(0,F,C)}else{if(F){J.splice(0,F)}}},createGroup:function(B,A){var C=new Ext.util.Group({groupKey:A,rootProperty:this.getItemRoot(),sorters:B.getSorters()});return C},getKey:function(A){return A.getGroupKey()},getGroupByRecord:function(C){var E=this.items,D=E.length,B,A;for(A=0;A<D;A++){B=E[A];if(B.indexOf(C)){return B}}return null}});