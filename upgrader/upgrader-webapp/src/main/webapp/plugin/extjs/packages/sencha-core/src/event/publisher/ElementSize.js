Ext.define("Ext.event.publisher.ElementSize",{extend:"Ext.event.publisher.Publisher",requires:["Ext.util.SizeMonitor"],targetType:"element",handledEvents:["resize"],constructor:function(){this.monitors={};this.callSuper(arguments)},subscribe:function(D){var B=D.match(this.idSelectorRegex),A=this.subscribers,F,E,C;if(!B||D==="#ext-window"){return false}F=B[1];if(A.hasOwnProperty(F)){A[F]++;return true}A[F]=1;E=Ext.get(F);this.monitors[F]=C=new Ext.util.SizeMonitor({element:E,callback:this.onElementResize,scope:this,args:[D,E]});this.dispatcher.addListener("element",D,"painted","forceRefresh",C);return true},unsubscribe:function(G,D,A){var B=G.match(this.idSelectorRegex),H=this.subscribers,C=this.monitors,F,E;if(!B){return false}F=B[1];if(!H.hasOwnProperty(F)||(!A&&--H[F]>0)){return true}delete H[F];E=C[F];this.dispatcher.removeListener("element",G,"painted","forceRefresh",E);E.destroy();delete C[F];return true},onElementResize:function(B,A,C){Ext.TaskQueue.requestRead("dispatch",this,[B,"resize",[A,C]])}});