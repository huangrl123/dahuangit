Ext.define("Ext.app.ViewModel",{mixins:["Ext.mixin.Factoryable","Ext.mixin.Identifiable"],requires:["Ext.util.Scheduler","Ext.data.Session","Ext.app.bind.RootStub","Ext.app.bind.LinkStub","Ext.app.bind.Multi","Ext.app.bind.Formula","Ext.app.bind.TemplateBinding","Ext.data.ChainedStore"],alias:"viewmodel.default",isViewModel:true,factoryConfig:{name:"viewModel"},destroyed:false,expressionRe:/^(?:\{[!]?(?:(\d+)|([a-z_][\w\-\.]*))\})$/i,$configStrict:false,config:{data:true,formulas:{$value:null,merge:function(F,E,D,B){var C,A;if(!E){C=F}else{if(!F){C=E}else{C=Ext.apply({},E);for(A in F){if(!B||!C[A]){C[A]=F[A]}}}}return C}},links:null,parent:null,root:true,scheduler:null,schema:"default",session:null,stores:null,view:null},constructor:function(A){this.hadValue={};this.initConfig(A)},destroy:function(){var C=this,A=C._scheduler,B=C.storeInfo,E=C.getParent(),G,F,D;C.destroy=Ext.emptyFn;if(B){for(G in B){F=B[G];D=F.autoDestroy;if(D||(!F.$wasInstance&&D!==false)){F.destroy()}Ext.destroy(F.$binding)}}if(E){E.unregisterChild(C)}C.getRoot().destroy();if(A&&A.$owner===C){A.$owner=null;A.destroy()}C.hadValue=C.children=C.storeInfo=C._session=C._view=C._scheduler=C._root=C._parent=C.formulaFn=C.$formulaData=null},bind:function(E,A,F,D){var B=this,C;F=F||B;if(!D&&E.bindTo!==undefined&&!Ext.isString(E)){D=E;E=D.bindTo}if(!Ext.isString(E)){C=new Ext.app.bind.Multi(E,B,A,F,D)}else{if(B.expressionRe.test(E)){E=E.substring(1,E.length-1);C=B.bindExpression(E,A,F,D)}else{C=new Ext.app.bind.TemplateBinding(E,B,A,F,D)}}return C},getSession:function(){var B=this,A=B._session,C;if(!A&&(C=B.getParent())){B.setSession(A=C.getSession())}return A||null},getStore:function(A){var C=this.storeInfo,B;if(C){B=C[A]}return B||null},linkTo:function(A,D){var E=this,C=E.getStub(A),F,B;if(C.depth-E.getRoot().depth>1){Ext.Error.raise('Links can only be at the top-level: "'+A+'"')}if(D.isModel){D={reference:D.entityName,id:D.id}}F=D.reference;if(F){C.set(E.getRecord(F,D.id))}else{if(!C.isLinkStub){B=new Ext.app.bind.LinkStub(E,C.name);C.graft(B);C=B}C.link(D)}},notify:function(){this.getScheduler().notify()},get:function(A){return this.getStub(A).getValue()},set:function(E,D){var C=this,A,B;C.getData();if(D===undefined&&E&&E.constructor===Object){B=C.getRoot();D=E}else{if(E&&E.indexOf(".")<0){A={};A[E]=D;D=A;B=C.getRoot()}else{B=C.getStub(E)}}B.set(D)},privates:{registerChild:function(A){var B=this.children;if(!B){this.children=B={}}B[A.getId()]=A},unregisterChild:function(A){var B=this.children;if(B){delete B[A.getId()]}},getRecord:function(A,E){var C=this.getSession(),B=A,D;if(C){D=C.getRecord(A,E)}else{if(!B.$isClass){B=this.getSchema().getEntity(B);if(!B){Ext.Error.raise("Invalid model name: "+A)}}D=B.createWithId(E);D.load()}return D},notFn:function(A){return !A},bindExpression:function(C,B,D,G){var F=C.charAt(0),I=(F==="!"),H=I?C.substring(1):C,A=this.getStub(H),E;E=A.bind(B,D,G);if(I){E.transform=this.notFn}return E},applyScheduler:function(A){if(A&&!A.isInstance){A=new Ext.util.Scheduler(A);A.$owner=this}return A},getScheduler:function(){var C=this,A=C._scheduler,D,B;if(!A){if(!(D=C.getParent())){A=new Ext.util.Scheduler({preSort:"kind,-depth"});A.$owner=C}else{A=D.getScheduler()}C.setScheduler(A)}return A},getStub:function(B){var A=this.getRoot();return B?A.getChild(B):A},collect:function(){var B=this.children,A;if(B){for(A in B){B[A].collect()}}this.getRoot().collect()},applyData:function(A,E){var C=this,B,D;C.getSession();if(!E){D=C.getParent();C.linkData=B=D?Ext.Object.chain(D.getData()):{};C.data=C._data=Ext.Object.chain(B)}if(A&&A.constructor===Object){C.getRoot().set(A)}},applyParent:function(A){if(A){A.registerChild(this)}return A},applyStores:function(F){var G=this,E=G.getRoot(),H,I,B,A,C,D;G.storeInfo={};G.listenerScopeFn=function(){return G.getView().getInheritedConfig("defaultListenerScope")};for(H in F){I=F[H];if(I.isStore){I.$wasInstance=true;G.setupStore(I,H);continue}else{if(Ext.isString(I)){I={source:I}}else{I=Ext.apply({},I)}}C=I.listeners;delete I.listeners;B=G.bind(I,G.onStoreBind,G);if(B.isStatic()){B.destroy();G.createStore(H,I,C)}else{B.$storeKey=H;B.$listeners=C;A=E.createStubChild(H);A.setStore(B)}}},onStoreBind:function(F,B,C){var G=this.storeInfo,A=C.$storeKey,E=G[A],D;if(!E){this.createStore(A,F,C.$listeners,C)}else{F=Ext.merge({},F);D=F.proxy;delete F.type;delete F.model;delete F.fields;delete F.proxy;delete F.listeners;if(D){delete D.reader;delete D.writer;E.getProxy().setConfig(D)}E.setConfig(F)}},createStore:function(B,F,A,C){var D=this.getSession(),E;F=Ext.apply({},F);if(F.session){F.session=D}if(F.source){F.type=F.type||"chained"}F.listeners=A;E=Ext.Factory.store(F);E.$binding=C;this.setupStore(E,B)},setupStore:function(B,A){B.resolveListenerScope=this.listenerScopeFn;this.storeInfo[A]=B;this.set(A,B)},applyFormulas:function(D){var C=this,A=C.getRoot(),E,B;C.getData();for(E in D){if(E.indexOf(".")>=0){Ext.Error.raise("Formula names cannot contain dots: "+E)}A.createStubChild(E);B=C.getStub(E);B.setFormula(D[E])}return D},applyLinks:function(B){for(var A in B){this.linkTo(A,B[A])}},applySchema:function(A){return Ext.data.schema.Schema.get(A)},applyRoot:function(){var A=new Ext.app.bind.RootStub(this),B=this.getParent();if(B){A.depth=B.getRoot().depth-1000}return A},getFormulaFn:function(C){var B=this,A=B.formulaFn;if(!A){A=B.formulaFn=function(D){return B.$formulaData[D]}}B.$formulaData=C;return A}}});