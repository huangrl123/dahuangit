Ext.define("Ext.data.operation.Operation",{alternateClassName:"Ext.data.Operation",isOperation:true,config:{synchronous:false,params:undefined,callback:undefined,scope:undefined,resultSet:null,response:null,request:null,records:null,id:undefined,proxy:null,batch:null,recordCreator:null,internalCallback:null,internalScope:null},order:0,foreignKeyDirection:1,started:false,running:false,complete:false,success:undefined,exception:false,error:undefined,constructor:function(A){var B=A&&A.scope;this.initConfig(A);if(A){A.scope=B}if(B){this.setScope(B);this.initialConfig.scope=B}},getAction:function(){return this.action},execute:function(){var A=this;delete A.error;delete A.success;A.complete=A.exception=false;A.setStarted();return A.request=A.doExecute()},doExecute:Ext.emptyFn,abort:function(){var B=this,A=B.request;if(B.running&&A){B.getProxy().abort(A);B.request=null}},process:function(B,E,D,A){var C=this;A=A!==false;C.setResponse(D);C.setResultSet(B);if(B.getSuccess()){C.doProcess(B,E,D);C.setSuccessful(A)}else{if(A){C.setException(B.getMessage())}}},_commitSetOptions:{convert:true,commit:true},doProcess:function(B,E,N){var I=this,D=I._commitSetOptions,J=I.getRecords(),L=J.length,M=J[0].clientIdProperty,K=B.getRecords(),H=K?K.length:0,C,G,A,F;if(H&&M){C=Ext.Array.toValueMap(J,"id");for(F=0;F<H;++F){G=K[F];A=C[G[M]];if(A){delete C[A.id];delete G[M];A.set(G,D)}else{Ext.log.warn("Ignoring server record: "+Ext.encode(G))}}for(F in C){C[F].commit()}}else{for(F=0;F<L;++F){A=J[F];if(H===0||!(G=K[F])){A.commit()}else{A.set(G,D)}}}},setStarted:function(){this.started=this.running=true},setCompleted:function(){this.complete=true;this.running=false;this.triggerCallbacks()},setSuccessful:function(A){this.success=true;if(A){this.setCompleted()}},setException:function(B){var A=this;A.exception=true;A.success=A.running=false;A.error=B;A.setCompleted()},triggerCallbacks:function(){var B=this,A=B.getInternalCallback();if(A){A.call(B.getInternalScope()||B,B);B.setInternalCallback(null);B.setInternalScope(null)}if(A=B.getCallback()){A.call(B.getScope()||B,B.getRecords(),B,B.wasSuccessful());B.setCallback(null);B.setScope(null)}},hasException:function(){return this.exception},getError:function(){return this.error},getRecords:function(){var A;return this._records||((A=this.getResultSet())?A.getRecords():null)},isStarted:function(){return this.started},isRunning:function(){return this.running},isComplete:function(){return this.complete},wasSuccessful:function(){return this.isComplete()&&this.success===true},allowWrite:function(){return true}});