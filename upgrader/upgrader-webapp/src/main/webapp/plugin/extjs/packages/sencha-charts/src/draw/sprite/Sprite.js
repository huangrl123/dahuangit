Ext.define("Ext.draw.sprite.Sprite",{alias:"sprite.sprite",mixins:{observable:"Ext.mixin.Observable"},requires:["Ext.draw.Draw","Ext.draw.gradient.Gradient","Ext.draw.sprite.AttributeDefinition","Ext.draw.modifier.Target","Ext.draw.modifier.Animation","Ext.draw.modifier.Highlight"],isSprite:true,inheritableStatics:{def:{processors:{strokeStyle:"color",fillStyle:"color",strokeOpacity:"limited01",fillOpacity:"limited01",lineWidth:"number",lineCap:"enums(butt,round,square)",lineJoin:"enums(round,bevel,miter)",lineDash:"data",lineDashOffset:"number",miterLimit:"number",shadowColor:"color",shadowOffsetX:"number",shadowOffsetY:"number",shadowBlur:"number",globalAlpha:"limited01",globalCompositeOperation:"enums(source-over,destination-over,source-in,destination-in,source-out,destination-out,source-atop,destination-atop,lighter,xor,copy)",hidden:"bool",transformFillStroke:"bool",zIndex:"number",translationX:"number",translationY:"number",rotationRads:"number",rotationCenterX:"number",rotationCenterY:"number",scalingX:"number",scalingY:"number",scalingCenterX:"number",scalingCenterY:"number",constrainGradients:"bool"},aliases:{"stroke":"strokeStyle","fill":"fillStyle","color":"fillStyle","stroke-width":"lineWidth","stroke-linecap":"lineCap","stroke-linejoin":"lineJoin","stroke-miterlimit":"miterLimit","text-anchor":"textAlign","opacity":"globalAlpha",translateX:"translationX",translateY:"translationY",rotateRads:"rotationRads",rotateCenterX:"rotationCenterX",rotateCenterY:"rotationCenterY",scaleX:"scalingX",scaleY:"scalingY",scaleCenterX:"scalingCenterX",scaleCenterY:"scalingCenterY"},defaults:{hidden:false,zIndex:0,strokeStyle:"none",fillStyle:"none",lineWidth:1,lineDash:[],lineDashOffset:0,lineCap:"butt",lineJoin:"miter",miterLimit:1,shadowColor:"none",shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,globalAlpha:1,strokeOpacity:1,fillOpacity:1,transformFillStroke:false,translationX:0,translationY:0,rotationRads:0,rotationCenterX:null,rotationCenterY:null,scalingX:1,scalingY:1,scalingCenterX:null,scalingCenterY:null,constrainGradients:false},dirtyTriggers:{hidden:"canvas",zIndex:"zIndex",globalAlpha:"canvas",globalCompositeOperation:"canvas",transformFillStroke:"canvas",strokeStyle:"canvas",fillStyle:"canvas",strokeOpacity:"canvas",fillOpacity:"canvas",lineWidth:"canvas",lineCap:"canvas",lineJoin:"canvas",lineDash:"canvas",lineDashOffset:"canvas",miterLimit:"canvas",shadowColor:"canvas",shadowOffsetX:"canvas",shadowOffsetY:"canvas",shadowBlur:"canvas",translationX:"transform",translationY:"transform",rotationRads:"transform",rotationCenterX:"transform",rotationCenterY:"transform",scalingX:"transform",scalingY:"transform",scalingCenterX:"transform",scalingCenterY:"transform",constrainGradients:"canvas"},updaters:{"bbox":function(A){A.bbox.plain.dirty=true;A.bbox.transform.dirty=true;if(A.rotationRads!==0&&(A.rotationCenterX===null||A.rotationCenterY===null)||((A.scalingX!==1||A.scalingY!==1)&&(A.scalingCenterX===null||A.scalingCenterY===null))){if(!A.dirtyFlags.transform){A.dirtyFlags.transform=[]}}},"zIndex":function(A){A.dirtyZIndex=true},"transform":function(A){A.dirtyTransform=true;A.bbox.transform.dirty=true}}}},attr:{},config:{parent:null,surface:null},onClassExtended:function(C,D){var B=C.superclass.self.def.initialConfig,A;if(D.inheritableStatics&&D.inheritableStatics.def){A=Ext.merge({},B,D.inheritableStatics.def);C.def=Ext.create("Ext.draw.sprite.AttributeDefinition",A);delete D.inheritableStatics.def}else{C.def=Ext.create("Ext.draw.sprite.AttributeDefinition",B)}},constructor:function(B){if(Ext.getClassName(this)==="Ext.draw.sprite.Sprite"){throw"Ext.draw.sprite.Sprite is an abstract class"}var C=this;B=Ext.isObject(B)?B:{};C.id=B.id||Ext.id(null,"ext-sprite-");C.attr={};C.mixins.observable.constructor.apply(C,arguments);var A=Ext.Array.from(B.modifiers,true);C.prepareModifiers(A);C.initializeAttributes();C.setAttributes(C.self.def.getDefaults(),true);var E=C.self.def.getProcessors();for(var D in B){if(D in E&&C["get"+D.charAt(0).toUpperCase()+D.substr(1)]){Ext.Error.raise("The "+C.$className+" sprite has both a config and an attribute with the same name: "+D+".")}}C.setAttributes(B)},getDirty:function(){return this.attr.dirty},setDirty:function(A){if((this.attr.dirty=A)){if(this._parent){this._parent.setDirty(true)}}},addModifier:function(C,A){var B=this;if(!(C instanceof Ext.draw.modifier.Modifier)){C=Ext.factory(C,null,null,"modifier")}C.setSprite(this);if(C.preFx||C.config&&C.config.preFx){if(B.fx.getPrevious()){B.fx.getPrevious().setNext(C)}C.setNext(B.fx)}else{B.topModifier.getPrevious().setNext(C);C.setNext(B.topModifier)}if(A){B.initializeAttributes()}return C},prepareModifiers:function(D){var B=this,A,C;B.topModifier=new Ext.draw.modifier.Target({sprite:B});B.fx=new Ext.draw.modifier.Animation({sprite:B});B.fx.setNext(B.topModifier);for(A=0,C=D.length;A<C;A++){B.addModifier(D[A],false)}},initializeAttributes:function(){var A=this;A.topModifier.prepareAttributes(A.attr)},updateDirtyFlags:function(C){var A=this,E=C.dirtyFlags,G,B=A.self.def._updaters,F=false,D=false,H;do{F=false;for(H in E){A.updateDirtyFlags=Ext.emptyFn;G=E[H];delete E[H];if(B[H]){B[H].call(A,C,G)}F=true;delete A.updateDirtyFlags}D=D||F}while(F);if(D){A.setDirty(true)}},setAttributes:function(C,A,D){var B=this.attr;if(A){if(D){this.topModifier.pushDown(B,C)}else{this.topModifier.pushDown(B,Ext.apply({},C))}}else{this.topModifier.pushDown(B,this.self.def.normalize(C))}},setAttributesBypassingNormalization:function(B,A){return this.setAttributes(B,true,A)},getBBox:function(B){var C=this,F=C.attr,D=F.bbox,E=D.plain,A=D.transform;if(E.dirty){C.updatePlainBBox(E);E.dirty=false}if(B){return E}else{C.applyTransformations();if(A.dirty){C.updateTransformedBBox(A,E);A.dirty=false}return A}},updatePlainBBox:Ext.emptyFn,updateTransformedBBox:function(B,A){this.attr.matrix.transformBBox(A,0,B)},getBBoxCenter:function(A){var B=this.getBBox(A);if(B){return[B.x+B.width*0.5,B.y+B.height*0.5]}else{return[0,0]}},hide:function(){this.attr.hidden=true;this.setDirty(true);return this},show:function(){this.attr.hidden=false;this.setDirty(true);return this},useAttributes:function(F,E){this.applyTransformations();var C=this.attr,G=C.canvasAttributes,I=G.strokeStyle,A=G.fillStyle,D=G.lineDash,B=G.lineDashOffset,H;if(I){if(I.isGradient){F.strokeStyle="black";F.strokeGradient=I}else{F.strokeGradient=false}}if(A){if(A.isGradient){F.fillStyle="black";F.fillGradient=A}else{F.fillGradient=false}}if(D&&F.setLineDash){F.setLineDash(D)}if(B&&typeof F.lineDashOffset==="number"){F.lineDashOffset=B}for(H in G){if(G[H]!==undefined&&G[H]!==F[H]){F[H]=G[H]}}if(C.constrainGradients){F.setGradientBBox({x:E[0],y:E[1],width:E[2],height:E[3]})}else{F.setGradientBBox(this.getBBox(C.transformFillStroke))}},applyTransformations:function(B){if(!B&&!this.attr.dirtyTransform){return}var E=this,L=E.attr,A=E.getBBoxCenter(true),P=A[0],Q=A[1],M=L.translationX,N=L.translationY,K=L.scalingX,F=L.scalingY===null?L.scalingX:L.scalingY,H=L.scalingCenterX===null?P:L.scalingCenterX,D=L.scalingCenterY===null?Q:L.scalingCenterY,C=L.rotationRads,O=L.rotationCenterX===null?P:L.rotationCenterX,G=L.rotationCenterY===null?Q:L.rotationCenterY,I=Math.cos(C),J=Math.sin(C);if(K===1&&F===1){H=0;D=0}if(C===0){O=0;G=0}L.matrix.elements=[I*K,J*F,-J*K,I*F,H+(O-I*O-H+G*J)*K+M,D+(G-I*G-D+O*-J)*F+N];L.matrix.inverse(L.inverseMatrix);L.dirtyTransform=false;L.bbox.transform.dirty=true},preRender:Ext.emptyFn,render:Ext.emptyFn,repaint:function(){var A=this.getSurface();if(A){A.renderFrame()}},destroy:function(){var A=this,C=A.topModifier,B;while(C){B=C;C=C.getPrevious();B.destroy()}delete A.attr;A.destroy=Ext.emptyFn;if(A.fireEvent("beforedestroy",A)!==false){A.fireEvent("destroy",A)}this.callParent()}},function(){this.def=Ext.create("Ext.draw.sprite.AttributeDefinition",this.def)});