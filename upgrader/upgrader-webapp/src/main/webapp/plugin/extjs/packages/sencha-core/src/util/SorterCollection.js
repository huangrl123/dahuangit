Ext.define("Ext.util.SorterCollection",{extend:"Ext.util.Collection",requires:["Ext.util.Sorter"],isSorterCollection:true,$sortable:null,sortFn:null,config:{sorterOptionsFn:null,sorterOptionsScope:null},constructor:function(A){var B=this;B.sortFn=Ext.util.Sorter.createComparator(B);B.callParent([A]);B.setDecoder(B.decodeSorter)},addSort:function(B,J,H){var I=this,E,C,A,G,F,D,K;if(!B){I.beginUpdate();I.endUpdate()}else{G=I.getOptions();if(B instanceof Array){K=B;H=J;J=null}else{if(Ext.isString(B)){if(!(D=I.get(B))){K=[{property:B,direction:J||G.getDefaultSortDirection()}]}else{K=[D]}}else{if(Ext.isFunction(B)){K=[{sorterFn:B,direction:J||G.getDefaultSortDirection()}]}else{if(!Ext.isObject(B)){Ext.Error.raise("Invalid sort descriptor: "+B)}K=[B];H=J;J=null}}}if(H&&!I._sortModes[H]){Ext.Error.raise('Sort mode should be "multi", "append", "prepend" or "replace", not "'+H+'"')}H=I._sortModes[H||"replace"];F=I.getAt(0);E=I.length;C=H.append?E:0;I.beginUpdate();I.splice(C,H.replace?E:0,K);if(H.multi){E=I.length;A=G.getMultiSortLimit();if(E>A){I.removeAt(A,E)}}if(D&&J){D.setDirection(J)}else{if(C===0&&F&&F===I.getAt(0)){F.toggle()}}I.endUpdate()}},getSortFn:function(){return this.sortFn},getByProperty:function(C){var E=this.items,D=E.length,A,B;for(A=0;A<D;++A){B=E[A];if(B.getProperty()===C){return B}}return null},_sortModes:{append:{append:1},multi:{multi:1},prepend:{prepend:1},replace:{replace:1}},decodeSorter:function(C,F){var A=this,G=A.getOptions(),E=G.getRootProperty(),H=A.getSorterOptionsFn(),B,I,D;if(C.isSorter){if(!C.getRoot()){C.setRoot(E)}}else{I={direction:G.getDefaultSortDirection(),root:E};D=typeof C;if(D==="string"){B=A.get(C);if(B){return B}I.property=C}else{if(D==="function"){I.sorterFn=C}else{if(!Ext.isObject(C)){Ext.Error.raise("Invalid sorter specified: "+C)}I=Ext.apply(I,C);if(I.fn){I.sorterFn=I.fn;delete I.fn}}}C=Ext.create(F||"Ext.util.Sorter",I)}if(H){H.call(A.getSorterOptionsScope()||A,C)}return C},setSorterConfigure:function(A,B){this.setSorterOptionsFn(A);this.setSorterOptionsScope(B)},decodeRemoveItems:function(A,I){var H=this,K=(I===undefined)?A:A[I];if(!K||!K.$cloned){if(A.length>I+1||!Ext.isIterable(K)){K=Ext.Array.slice(A,I)}var C=H.items,D=K.length,E=[],G,L,F,B,J;for(G=0;G<D;G++){B=K[G];if(B&&B.isFilter){E.push(B)}else{J=typeof B;if(J==="string"){B=H.get(B);if(B){E.push(B)}}else{if(J==="function"){for(F=C.length;F-->0;){L=C[F];if(L.getSorterFn()===B){E.push(L)}}}else{Ext.Error.raise("Invalid sorter specification: "+B)}}}}K=E;K.$cloned=true}return K},getOptions:function(){return this.$sortable||this}});