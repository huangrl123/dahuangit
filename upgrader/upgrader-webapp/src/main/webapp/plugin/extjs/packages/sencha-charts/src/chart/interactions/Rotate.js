Ext.define("Ext.chart.interactions.Rotate",{extend:"Ext.chart.interactions.Abstract",type:"rotate",alias:"interaction.rotate",config:{gesture:"rotate",gestures:{rotate:"onRotate",rotateend:"onRotate",dragstart:"onGestureStart",drag:"onGesture",dragend:"onGestureEnd"},rotation:0},oldRotations:null,getAngle:function(B){var C=this,A=C.getChart(),D=A.getEventXY(B),E=A.getCenter();return Math.atan2(D[1]-E[1],D[0]-E[0])},getEventRadius:function(B){var D=this,A=D.getChart(),F=A.getEventXY(B),G=A.getCenter(),C=F[0]-G[0],E=F[1]-G[1];return Math.sqrt(C*C+E*E)},onGestureStart:function(B){var D=this,A=D.getChart(),E=A.getRadius(),C=D.getEventRadius(B);if(E>=C){D.lockEvents("drag");D.angle=D.getAngle(B);D.oldRotations={};return false}},onGesture:function(A){var B=this,C=B.getAngle(A)-B.angle;if(B.getLocks().drag===B){B.doRotateTo(C,true);return false}},doRotateTo:function(J,M,E){var A=this,F=A.getChart(),I=F.getAxes(),K=F.getSeries(),L=A.oldRotations,B,G,H,C,D;if(!E){F.suspendAnimation()}for(C=0,D=I.length;C<D;C++){B=I[C];H=L[B.getId()]||(L[B.getId()]=B.getRotation());B.setRotation(J+(M?H:0))}for(C=0,D=K.length;C<D;C++){G=K[C];H=L[G.getId()]||(L[G.getId()]=G.getRotation());G.setRotation(J+(M?H:0))}A.setRotation(J+(M?H:0));A.fireEvent("rotate",A,A.getRotation());A.sync();if(!E){F.resumeAnimation()}},rotateTo:function(C,A,B){this.doRotateTo(C,A,B);this.oldRotations={}},onGestureEnd:function(A){var B=this;if(B.getLocks().drag===B){B.onGesture(A);B.unlockEvents("drag");B.fireEvent("rotationEnd",B,B.getRotation());return false}},onRotate:function(A){}});