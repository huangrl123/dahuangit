Ext.define("Ext.fx.animation.Abstract",{extend:"Ext.Evented",isAnimation:true,requires:["Ext.fx.State"],config:{name:"",element:null,before:null,from:{},to:{},after:null,states:{},duration:300,easing:"linear",iteration:1,direction:"normal",delay:0,onBeforeStart:null,onEnd:null,onBeforeEnd:null,scope:null,reverse:null,preserveEndState:false,replacePrevious:true},STATE_FROM:"0%",STATE_TO:"100%",DIRECTION_UP:"up",DIRECTION_DOWN:"down",DIRECTION_LEFT:"left",DIRECTION_RIGHT:"right",stateNameRegex:/^(?:[\d\.]+)%$/,constructor:function(){this.states={};this.callParent(arguments);return this},applyElement:function(A){return Ext.get(A)},applyBefore:function(B,A){if(B){return Ext.factory(B,Ext.fx.State,A)}},applyAfter:function(B,A){if(B){return Ext.factory(B,Ext.fx.State,A)}},setFrom:function(A){return this.setState(this.STATE_FROM,A)},setTo:function(A){return this.setState(this.STATE_TO,A)},getFrom:function(){return this.getState(this.STATE_FROM)},getTo:function(){return this.getState(this.STATE_TO)},setStates:function(A){var B=this.stateNameRegex,C;for(C in A){if(B.test(C)){this.setState(C,A[C])}}return this},getStates:function(){return this.states},stop:function(){this.fireEvent("stop",this)},destroy:function(){this.stop();this.callParent()},setState:function(C,D){var A=this.getStates(),B;B=Ext.factory(D,Ext.fx.State,A[C]);if(B){A[C]=B}else{if(C===this.STATE_TO){Ext.Logger.error("Setting and invalid '100%' / 'to' state of: "+D)}}return this},getState:function(A){return this.getStates()[A]},getData:function(){var A=this.getStates(),F={},K=this.getBefore(),D=this.getAfter(),H=A[this.STATE_FROM],J=A[this.STATE_TO],E=H.getData(),I=J.getData(),C,B,G;for(B in A){if(A.hasOwnProperty(B)){G=A[B];C=G.getData();F[B]=C}}if(Ext.browser.is.AndroidStock2){F["0.0001%"]=E}return{before:K?K.getData():{},after:D?D.getData():{},states:F,from:E,to:I,duration:this.getDuration(),iteration:this.getIteration(),direction:this.getDirection(),easing:this.getEasing(),delay:this.getDelay(),onEnd:this.getOnEnd(),onBeforeEnd:this.getOnBeforeEnd(),onBeforeStart:this.getOnBeforeStart(),scope:this.getScope(),preserveEndState:this.getPreserveEndState(),replacePrevious:this.getReplacePrevious()}}});