Ext.define("Ext.perf.Monitor",{singleton:true,alternateClassName:"Ext.Perf",requires:["Ext.perf.Accumulator"],constructor:function(){this.accumulators=[];this.accumulatorsByName={}},calibrate:function(){var C=new Ext.perf.Accumulator("$"),B=C.total,E=Ext.perf.Accumulator.getTimestamp,A=0,F,G,D;D=E();do{F=C.enter();F.leave();++A}while(B.sum<100);G=E();return(G-D)/A},get:function(C){var A=this,B=A.accumulatorsByName[C];if(!B){A.accumulatorsByName[C]=B=new Ext.perf.Accumulator(C);A.accumulators.push(B)}return B},enter:function(A){return this.get(A).enter()},monitor:function(B,A,C){this.get(B).monitor(A,C)},report:function(){var B=this,A=B.accumulators,C=B.calibrate();A.sort(function(E,D){return(E.name<D.name)?-1:((D.name<E.name)?1:0)});B.updateGC();Ext.log("Calibration: "+Math.round(C*100)/100+" msec/sample");Ext.each(A,function(D){Ext.log(D.format(C))})},getData:function(A){var C={},B=this.accumulators;Ext.each(B,function(D){if(A||D.count){C[D.name]=D.getData()}});return C},reset:function(){Ext.each(this.accumulators,function(A){var B=A;B.count=B.childCount=B.depth=B.maxDepth=0;B.pure={min:Number.MAX_VALUE,max:0,sum:0};B.total={min:Number.MAX_VALUE,max:0,sum:0}})},updateGC:function(){var C=this.accumulatorsByName.GC,B=Ext.senchaToolbox,A;if(C){C.count=B.garbageCollectionCounter||0;if(C.count){A=C.pure;C.total.sum=A.sum=B.garbageCollectionMilliseconds;A.min=A.max=A.sum/C.count;A=C.total;A.min=A.max=A.sum/C.count}}},watchGC:function(){Ext.perf.getTimestamp();var A=Ext.senchaToolbox;if(A){this.get("GC");A.watchGarbageCollector(false)}},setup:function(B){if(!B){B={render:{"Ext.Component":"render"},layout:{"Ext.layout.Context":"run"}}}this.currentConfig=B;var A,C,D,F,E;for(A in B){if(B.hasOwnProperty(A)){C=B[A];D=Ext.Perf.get(A);for(F in C){if(C.hasOwnProperty(F)){E=C[F];D.tap(F,E)}}}}this.watchGC()}});