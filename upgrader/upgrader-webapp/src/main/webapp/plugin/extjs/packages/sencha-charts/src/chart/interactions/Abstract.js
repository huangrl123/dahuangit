Ext.define("Ext.chart.interactions.Abstract",{xtype:"interaction",mixins:{observable:"Ext.mixin.Observable"},config:{gestures:{tap:"onGesture"},chart:null,enabled:true},throttleGap:0,stopAnimationBeforeSync:false,constructor:function(A){var B=this;B.mixins.observable.constructor.call(B,A);B.getId();Ext.ComponentManager.register(B)},initialize:Ext.emptyFn,updateChart:function(C,B){var A=this;if(B===C){return}if(B){A.removeChartListener(B)}if(C){A.addChartListener()}},updateEnabled:function(C){var B=this,A=B.getChart();if(A){if(C){B.addChartListener()}else{B.removeChartListener(A)}}},onGesture:Ext.emptyFn,getItemForEvent:function(B){var C=this,A=C.getChart(),D=A.getEventXY(B);return A.getItemForPoint(D[0],D[1])},getItemsForEvent:function(B){var C=this,A=C.getChart(),D=A.getEventXY(B);return A.getItemsForPoint(D[0],D[1])},addChartListener:function(){var C=this,A=C.getChart(),D=C.getGestures(),E;if(!C.getEnabled()){return}function B(G,F){A.addElementListener(G,C.listeners[G]=function(H){var J=C.getLocks(),I;if(C.getEnabled()&&(!(G in J)||J[G]===C)){I=(Ext.isFunction(F)?F:C[F]).apply(this,arguments);if(I===false&&H&&H.stopPropagation){H.stopPropagation()}return I}},C)}C.listeners=C.listeners||{};for(E in D){B(E,D[E])}},removeChartListener:function(A){var B=this,D=B.getGestures(),E;function C(F){A.element.un(F,B.listeners[F]);delete B.listeners[F]}if(B.listeners){for(E in D){C(E)}}},lockEvents:function(){var C=this,B=C.getLocks(),D=Array.prototype.slice.call(arguments),A=D.length;while(A--){B[D[A]]=C}},unlockEvents:function(){var B=this.getLocks(),C=Array.prototype.slice.call(arguments),A=C.length;while(A--){delete B[C[A]]}},getLocks:function(){var A=this.getChart();return A.lockedEvents||(A.lockedEvents={})},isMultiTouch:function(){if(Ext.browser.is.IE10){return true}return !(Ext.browser.is.AndroidStock2||Ext.os.is.Desktop)},initializeDefaults:Ext.emptyFn,doSync:function(){var B=this,A=B.getChart();if(B.syncTimer){clearTimeout(B.syncTimer);B.syncTimer=null}if(B.stopAnimationBeforeSync){A.resizing=true}A.redraw();if(B.stopAnimationBeforeSync){A.resizing=false}B.syncThrottle=Date.now()+B.throttleGap},sync:function(){var A=this;if(A.throttleGap&&Ext.frameStartTime<A.syncThrottle){if(A.syncTimer){return}A.syncTimer=setTimeout(function(){A.doSync()},A.throttleGap)}else{A.doSync()}},getItemId:function(){return this.getId()},isXType:function(A){return A==="interaction"},destroy:function(){var B=this,A=B.getChart();B.removeChartListener(A);Ext.ComponentManager.unregister(B);delete B.listeners;B.callParent()}},function(){if(Ext.browser.is.AndroidStock2){this.prototype.throttleGap=20}else{if(Ext.os.is.Android4){this.prototype.throttleGap=40}}});