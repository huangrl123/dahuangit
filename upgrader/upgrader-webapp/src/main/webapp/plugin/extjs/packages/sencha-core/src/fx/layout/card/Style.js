Ext.define("Ext.fx.layout.card.Style",{extend:"Ext.fx.layout.card.Abstract",requires:["Ext.fx.Animation"],config:{inAnimation:{before:{visibility:null},preserveEndState:false,replacePrevious:true},outAnimation:{preserveEndState:false,replacePrevious:true}},constructor:function(B){var A,C;this.callParent([B]);this.endAnimationCounter=0;A=this.getInAnimation();C=this.getOutAnimation();A.on("animationend","incrementEnd",this);C.on("animationend","incrementEnd",this)},updateDirection:function(A){this.getInAnimation().setDirection(A);this.getOutAnimation().setDirection(A)},updateDuration:function(A){this.getInAnimation().setDuration(A);this.getOutAnimation().setDuration(A)},updateReverse:function(A){this.getInAnimation().setReverse(A);this.getOutAnimation().setReverse(A)},incrementEnd:function(){this.endAnimationCounter++;if(this.endAnimationCounter>1){this.endAnimationCounter=0;this.fireEvent("animationend",this)}},applyInAnimation:function(A,B){return Ext.factory(A,Ext.fx.Animation,B)},applyOutAnimation:function(A,B){return Ext.factory(A,Ext.fx.Animation,B)},updateInAnimation:function(A){A.setScope(this)},updateOutAnimation:function(A){A.setScope(this)},onActiveItemChange:function(A,G,D,F,E){var C=this.getInAnimation(),I=this.getOutAnimation(),H,B;if(G&&D&&D.isPainted()){H=G.renderElement;B=D.renderElement;C.setElement(H);I.setElement(B);I.setOnBeforeEnd(function(J,K){if(K||Ext.Animator.hasRunningAnimations(J)){E.firingArguments[1]=null;E.firingArguments[2]=null}});I.setOnEnd(function(){E.resume()});H.dom.style.setProperty("visibility","hidden","important");G.show();Ext.Animator.run([I,C]);E.pause()}},destroy:function(){Ext.destroy(this.getInAnimation(),this.getOutAnimation());this.callParent(arguments)}});