Ext.define("Ext.data.amf.Encoder",{alias:"data.amf.Encoder",config:{format:3,bytes:[]},constructor:function(A){this.initConfig(A);this.clear()},clear:function(){this.setBytes([])},applyFormat:function(B){var A={0:{writeUndefined:this.write0Undefined,writeNull:this.write0Null,writeBoolean:this.write0Boolean,writeNumber:this.write0Number,writeString:this.write0String,writeXml:this.write0Xml,writeDate:this.write0Date,writeArray:this.write0Array,writeGenericObject:this.write0GenericObject},3:{writeUndefined:this.write3Undefined,writeNull:this.write3Null,writeBoolean:this.write3Boolean,writeNumber:this.write3Number,writeString:this.write3String,writeXml:this.write3Xml,writeDate:this.write3Date,writeArray:this.write3Array,writeGenericObject:this.write3GenericObject}}[B];if(A){Ext.apply(this,A);return B}else{Ext.Error.raise("Unsupported AMF format: "+B+". Only '3' (AMF3) or '0' (AMF0) are supported at this point.");return}},writeObject:function(A){var B=typeof(A);if(B==="undefined"){this.writeUndefined()}else{if(A===null){this.writeNull()}else{if(Ext.isBoolean(A)){this.writeBoolean(A)}else{if(Ext.isString(A)){this.writeString(A)}else{if(B==="number"||A instanceof Number){this.writeNumber(A)}else{if(B==="object"){if(A instanceof Date){this.writeDate(A)}else{if(Ext.isArray(A)){this.writeArray(A)}else{if(this.isXmlDocument(A)){this.writeXml(A)}else{this.writeGenericObject(A)}}}}else{Ext.log.warn("AMF Encoder: Unknown item type "+B+" can't be written to stream: "+A)}}}}}}},write3Undefined:function(){this.writeByte(0)},write0Undefined:function(){this.writeByte(6)},write3Null:function(){this.writeByte(1)},write0Null:function(){this.writeByte(5)},write3Boolean:function(A){if(typeof(A)!=="boolean"){Ext.log.warn("Encoder: writeBoolean argument is not a boolean. Coercing.")}if(A){this.writeByte(3)}else{this.writeByte(2)}},write0Boolean:function(A){if(typeof(A)!=="boolean"){Ext.log.warn("Encoder: writeBoolean argument is not a boolean. Coercing.")}this.writeByte(1);if(A){this.writeByte(1)}else{this.writeByte(0)}},encode29Int:function(C){var E=[],D=C,B,A;if(D==0){return[0]}if(D>2097151){B=D&255;E.unshift(B);D=D>>8}while(D>0){B=D&127;E.unshift(B);D=D>>7}for(A=0;A<E.length-1;A++){E[A]=E[A]|128}return E},write3Number:function(B){var D;var C=536870911,A=-268435455;if(typeof(B)!=="number"&&!(B instanceof Number)){Ext.log.warn("Encoder: writeNumber argument is not numeric. Can't coerce.")}if(B instanceof Number){B=B.valueOf()}if(B%1===0&&B>=A&&B<=C){B=B&C;D=this.encode29Int(B);D.unshift(4);this.writeBytes(D)}else{D=this.encodeDouble(B);D.unshift(5);this.writeBytes(D)}},write0Number:function(A){var B;if(typeof(A)!=="number"&&!(A instanceof Number)){Ext.log.warn("Encoder: writeNumber argument is not numeric. Can't coerce.")}if(A instanceof Number){A=A.valueOf()}B=this.encodeDouble(A);B.unshift(0);this.writeBytes(B)},encodeUtf8Char:function(D){var F=[],E,C,A,B;if(D>1114111){Ext.Error.raise("UTF 8 char out of bounds")}if(D<=127){F.push(D)}else{if(D<=2047){C=2}else{if(D<=65535){C=3}else{C=4}}B=128;for(A=1;A<C;A++){E=(D&63)|128;F.unshift(E);D=D>>6;B=(B>>1)|128}E=D|B;F.unshift(E)}return F},encodeUtf8String:function(B){var A,C=[];for(A=0;A<B.length;A++){var D=this.encodeUtf8Char(B.charCodeAt(A));C.push.apply(C,D)}return C},encode3Utf8StringLen:function(B){var A=B.length,C=[];if(A<=268435455){A=A<<1;A=A|1;C=this.encode29Int(A)}else{Ext.Error.raise("UTF8 encoded string too long to serialize to AMF: "+A)}return C},write3String:function(A){if(!Ext.isString(A)){Ext.log.warn("Encoder: writString argument is not a string.")}if(A==""){this.writeByte(6);this.writeByte(1)}else{var B=this.encodeUtf8String(A);var C=this.encode3Utf8StringLen(B);this.writeByte(6);this.writeBytes(C);this.writeBytes(B)}},encodeXInt:function(C,B){var D=[],A;for(A=0;A<B;A++){D.unshift(C&255);C=C>>8}return D},write0String:function(B){if(!Ext.isString(B)){Ext.log.warn("Encoder: writString argument is not a string.")}if(B==""){this.writeByte(2);this.writeBytes([0,0])}else{var C=this.encodeUtf8String(B);var A;var D;if(C.length<=65535){A=2;D=this.encodeXInt(C.length,2)}else{A=12;D=this.encodeXInt(C.length,4)}this.writeByte(A);this.writeBytes(D);this.writeBytes(C)}},write3XmlWithType:function(C,A){if(A!==7&&A!==11){Ext.Error.raise("write XML with unknown AMF3 code: "+A)}if(!this.isXmlDocument(C)){Ext.log.warn("Encoder: write3XmlWithType argument is not an xml document.")}var E=this.convertXmlToString(C);if(E==""){this.writeByte(A);this.writeByte(1)}else{var B=this.encodeUtf8String(E);var D=this.encode3Utf8StringLen(B);this.writeByte(A);this.writeBytes(D);this.writeBytes(B)}},write3XmlDocument:function(A){this.write3XmlWithType(A,7)},write3Xml:function(A){this.write3XmlWithType(A,11)},write0Xml:function(B){if(!this.isXmlDocument(B)){Ext.log.warn("Encoder: write0Xml argument is not an xml document.")}var D=this.convertXmlToString(B);this.writeByte(15);var A=this.encodeUtf8String(D);var C=this.encodeXInt(A.length,4);this.writeBytes(C);this.writeBytes(A)},write3Date:function(A){if(!(A instanceof Date)){Ext.Error.raise("Serializing a non-date object as date: "+A)}this.writeByte(8);this.writeBytes(this.encode29Int(1));this.writeBytes(this.encodeDouble(new Number(A)))},write0Date:function(A){if(!(A instanceof Date)){Ext.Error.raise("Serializing a non-date object as date: "+A)}this.writeByte(11);this.writeBytes(this.encodeDouble(new Number(A)));this.writeBytes([0,0])},write3Array:function(B){if(!Ext.isArray(B)){Ext.Error.raise("Serializing a non-array object as array: "+B)}if(B.length>268435455){Ext.Error.raise("Array size too long to encode in AMF3: "+B.length)}this.writeByte(9);var A=B.length;A=A<<1;A=A|1;this.writeBytes(this.encode29Int(A));this.writeByte(1);Ext.each(B,function(C){this.writeObject(C)},this)},write0ObjectProperty:function(A,C){if(!(A instanceof String)&&(typeof(A)!=="string")){A=A+""}var B=this.encodeUtf8String(A);var D;D=this.encodeXInt(B.length,2);this.writeBytes(D);this.writeBytes(B);this.writeObject(C)},write0Array:function(C){var A;if(!Ext.isArray(C)){Ext.Error.raise("Serializing a non-array object as array: "+C)}this.writeByte(8);var B=0;for(A in C){B++}this.writeBytes(this.encodeXInt(B,4));for(A in C){this.write0ObjectProperty(A,C[A])}this.writeBytes([0,0,9])},write0StrictArray:function(B){if(!Ext.isArray(B)){Ext.Error.raise("Serializing a non-array object as array: "+B)}this.writeByte(10);var A=B.length;this.writeBytes(this.encodeXInt(A,4));Ext.each(B,function(C){this.writeObject(C)},this)},write3ByteArray:function(B){if(!Ext.isArray(B)){Ext.Error.raise("Serializing a non-array object as array: "+B)}if(B.length>268435455){Ext.Error.raise("Array size too long to encode in AMF3: "+B.length)}this.writeByte(12);var A=B.length;A=A<<1;A=A|1;this.writeBytes(this.encode29Int(A));this.writeBytes(B)},write3GenericObject:function(A){var C;if(!Ext.isObject(A)){Ext.Error.raise("Serializing a non-object object: "+A)}this.writeByte(10);var D=11;this.writeByte(D);this.writeByte(1);for(C in A){var E=new String(C).valueOf();if(E==""){Ext.Error.raise("Can't encode non-string field name: "+C)}var B=(this.encodeUtf8String(C));this.writeBytes(this.encode3Utf8StringLen(C));this.writeBytes(B);this.writeObject(A[C])}this.writeByte(1)},write0GenericObject:function(C){var D,B,A;if(!Ext.isObject(C)){Ext.Error.raise("Serializing a non-object object: "+C)}D=!!C.$flexType;B=D?16:3;this.writeByte(B);if(D){this.write0ShortUtf8String(C.$flexType)}for(A in C){if(A!="$flexType"){this.write0ObjectProperty(A,C[A])}}this.writeBytes([0,0,9])},writeByte:function(A){if(A<0||A>255){Ex.Error.raise("ERROR: Value being written outside byte range: "+A)}this.getBytes().push(A)},writeBytes:function(B){var A;if(!Ext.isArray(B)){Ext.Error.raise("Decoder: writeBytes parameter is not an array: "+B)}for(A=0;A<B.length;A++){if(B[A]<0||B[A]>255||!Ext.isNumber(B[A])){Ext.Error.raise("ERROR: Value "+A+" being written outside byte range: "+B[A])}}this.getBytes().push.apply(this.getBytes(),B)},convertXmlToString:function(B){var A;if(window.XMLSerializer){A=new window.XMLSerializer().serializeToString(B)}else{A=B.xml}return A},isXmlDocument:function(A){if(window.DOMParser){if(Ext.isDefined(A.doctype)){return true}}if(Ext.isString(A.xml)){return true}return false},encodeDouble:function(G){var N=11,D=52;var K=(1<<(N-1))-1,B,A,M,F,J,C,H,E=[];var L=[127,240,0,0,0,0,0,0],O=[255,240,0,0,0,0,0,0],I=[255,248,0,0,0,0,0,0];if(isNaN(G)){E=I}else{if(G===Infinity){E=L}else{if(G==-Infinity){E=O}else{if(G===0){A=0;M=0;B=(1/G===-Infinity)?1:0}else{B=G<0;G=Math.abs(G);if(G>=Math.pow(2,1-K)){F=Math.min(Math.floor(Math.log(G)/Math.LN2),K);A=F+K;M=Math.round(G*Math.pow(2,D-F)-Math.pow(2,D))}else{A=0;M=Math.round(G/Math.pow(2,1-K-D))}}C=[];for(J=D;J;J-=1){C.push(M%2?1:0);M=Math.floor(M/2)}for(J=N;J;J-=1){C.push(A%2?1:0);A=Math.floor(A/2)}C.push(B?1:0);C.reverse();H=C.join("");E=[];while(H.length){E.push(parseInt(H.substring(0,8),2));H=H.substring(8)}}}}return E},write0ShortUtf8String:function(A){var B=this.encodeUtf8String(A),C;C=this.encodeXInt(B.length,2);this.writeBytes(C);this.writeBytes(B)},writeAmfPacket:function(A,C){var B;if(this.config.format!=0){Ext.Error.raise("Trying to write a packet on an AMF3 Encoder. Only AMF0 is supported!")}if(!Ext.isArray(A)){Ext.Error.raise("headers is not an array: "+A)}if(!Ext.isArray(C)){Ext.Error.raise("messages is not an array: "+C)}this.writeBytes([0,0]);this.writeBytes(this.encodeXInt(A.length,2));for(B in A){this.writeAmfHeader(A[B].name,A[B].mustUnderstand,A[B].value)}this.writeBytes(this.encodeXInt(C.length,2));for(B in C){this.writeAmfMessage(C[B].targetUri,C[B].responseUri,C[B].body)}},writeAmfHeader:function(B,A,C){if(this.config.format!=0){Ext.Error.raise("Trying to write a header on an AMF3 Encoder. Only AMF0 is supported!")}if(!Ext.isString(B)){Ext.Error.raise("targetURI is not a string: "+targetUri)}if((typeof(A)!=="boolean")&&!Ext.isBoolean(A)){Ext.Error.raise("mustUnderstand is not a boolean value: "+A)}this.write0ShortUtf8String(B);var D=A?1:0;this.writeByte(D);this.writeBytes(this.encodeXInt(-1,4));this.writeObject(C)},writeAmfMessage:function(C,A,B){if(this.config.format!=0){Ext.Error.raise("Trying to write a message on an AMF3 Encoder. Only AMF0 is supported!")}if(!Ext.isString(C)){Ext.Error.raise("targetURI is not a string: "+C)}if(!Ext.isString(A)){Ext.Error.raise("targetURI is not a string: "+A)}if(!Ext.isArray(B)){Ext.Error.raise("body is not an array: "+typeof(B))}this.write0ShortUtf8String(C);this.write0ShortUtf8String(A);this.writeBytes(this.encodeXInt(-1,4));this.write0StrictArray(B)}});