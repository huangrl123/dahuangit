Ext.define("Ext.data.reader.Json",{extend:"Ext.data.reader.Reader",requires:["Ext.JSON"],alternateClassName:"Ext.data.JsonReader",alias:"reader.json",config:{record:null,metaProperty:"metaData",useSimpleAccessors:false,preserveRawData:false},updateRootProperty:function(){this.forceBuildExtractors()},updateMetaProperty:function(){this.forceBuildExtractors()},readRecords:function(D,B){var A=this,C;if(A.getMeta){C=A.getMeta(D);if(C){A.onMetaChange(C)}}else{if(D.metaData){A.onMetaChange(D.metaData)}}return A.callParent(arguments)},getResponseData:function(B){try{return Ext.decode(B.responseText)}catch(A){Ext.Logger.warn("Unable to parse the JSON returned by the server");return this.createReadError(A.message)}},buildExtractors:function(){var B=this,C=B.getMetaProperty(),A=B.getRootProperty();if(B.callParent(arguments)){if(A){B.getRoot=B.createAccessor(A)}else{B.getRoot=Ext.identityFn}if(C){B.getMeta=B.createAccessor(C)}}},extractData:function(B,E){var F=this.getRecord(),C=[],A,D;if(F){A=B.length;if(!A&&Ext.isObject(B)){A=1;B=[B]}for(D=0;D<A;D++){C[D]=B[D][F]}}else{C=B}return this.callParent([C,E])},getModelData:function(A){return this.getPreserveRawData()?Ext.apply({},A):A},createAccessor:(function(){var A=/[\[\.]/,B=/^\[(?:\'|\")?([^\'\"]*)(?:\'|\")?\]$/;return function(J){var K=this,D=K.getUseSimpleAccessors(),F=0,C,I,L,H,E,G;if(!(J||J===0)){return}if(typeof J==="function"){return J}if(!D){F=String(J).search(A)}if(D===true||F<=0){if(F===0){J=J.replace(B,"$1")}C=function(M){return M[J]}}else{I=J.split(".");L=I.length;E="raw."+I[0];G=[E];for(H=1;H<L;H++){E+="."+I[H];G.push(E)}C=G.join(" && ");C=Ext.functionFactory("raw","return "+C)}return C}}()),createFieldAccessor:function(D){var C=this,E=D.mapping,A=E||E===0,B=A?E:D.name;if(A){if(typeof B==="function"){return function(F){return D.mapping(F,C)}}else{return C.createAccessor(B)}}}});