Ext.define("Ext.draw.gradient.Radial",{extend:"Ext.draw.gradient.Gradient",type:"radial",config:{start:{x:0,y:0,r:0},end:{x:0,y:0,r:1}},applyStart:function(C,A){if(!A){return C}var B={x:A.x,y:A.y,r:A.r};if("x" in C){B.x=C.x}else{if("centerX" in C){B.x=C.centerX}}if("y" in C){B.y=C.y}else{if("centerY" in C){B.y=C.centerY}}if("r" in C){B.r=C.r}else{if("radius" in C){B.r=C.radius}}return B},applyEnd:function(A,B){if(!B){return A}var C={x:B.x,y:B.y,r:B.r};if("x" in A){C.x=A.x}else{if("centerX" in A){C.x=A.centerX}}if("y" in A){C.y=A.y}else{if("centerY" in A){C.y=A.centerY}}if("r" in A){C.r=A.r}else{if("radius" in A){C.r=A.radius}}return C},generateGradient:function(F,K){var A=this.getStart(),C=this.getEnd(),B=K.width*0.5,E=K.height*0.5,I=K.x+B,J=K.y+E,G=F.createRadialGradient(I+A.x*B,J+A.y*E,A.r*Math.max(B,E),I+C.x*B,J+C.y*E,C.r*Math.max(B,E)),L=this.getStops(),D=L.length,H;for(H=0;H<D;H++){G.addColorStop(L[H].offset,L[H].color)}return G}});