Ext.define("Ext.ComponentManager",{alternateClassName:"Ext.ComponentMgr",singleton:true,count:0,typeName:"xtype",constructor:function(A){Ext.apply(this,A||{});this.all={};this.references={};this.onAvailableCallbacks={}},create:function(A,B){if(typeof A=="string"){return Ext.widget(A)}if(A.isComponent){return A}if("xclass" in A){return Ext.create(A.xclass,A)}return Ext.widget(A.xtype||B,A)},get:function(A){return this.all[A]},register:function(C){var A=this.all,B=C.getId();if(B===undefined){Ext.Error.raise("Key is undefined. Please ensure the item has a key before registering the item.")}if(B in A){Ext.Error.raise('Registering duplicate id "'+B+'" with this manager')}A[B]=C;if(C.reference){this.references[B]=C}this.count++;if((this.onAvailableCallbacks[B]||[]).length){this.notifyAvailable(C)}},unregister:function(A){var B=A.getId();if(A.reference){delete this.references[B]}delete this.all[B];this.count--},markReferencesDirty:function(){this.referencesDirty=true},fixReferences:function(){var B=this,C=B.references,A;if(B.referencesDirty){for(A in C){if(C.hasOwnProperty(A)){C[A].fixReference()}}B.referencesDirty=false}},onAvailable:function(G,C,E){var D=this,F=D.onAvailableCallbacks,A=D.all,B;if(G in A){B=A[G];C.call(E||B,B)}else{if(G){if(!Ext.isArray(F[G])){F[G]=[]}F[G].push(function(H){C.call(E||H,H)})}}},notifyAvailable:function(A){var B=this.onAvailableCallbacks[A&&A.getId()]||[];while(B.length){(B.shift())(A)}},each:function(A,B){return Ext.Object.each(this.all,A,B)},getCount:function(){return this.count},getAll:function(){return Ext.Object.getValues(this.all)},deprecated:{5:{methods:{isRegistered:null,registerType:null}}}},function(){Ext.getCmp=function(A){return Ext.ComponentManager.get(A)}});