Ext.define("Ext.data.field.Field",{mixins:["Ext.mixin.Factoryable"],requires:["Ext.data.SortTypes","Ext.data.validator.Validator"],alternateClassName:"Ext.data.Field",alias:"data.field.auto",aliasPrefix:"data.field.",type:"auto",factoryConfig:{defaultProperty:"name"},isDataField:true,isField:true,allowBlank:true,allowNull:false,critical:false,defaultInvalidMessage:"This field is invalid",defaultValue:undefined,definedBy:null,depends:null,dependents:null,mapping:null,name:null,ordinal:undefined,persist:null,reference:null,sortDir:"ASC",unique:false,rank:null,stripRe:/[\$,%]/g,calculated:false,evil:false,identifier:false,onClassExtended:function(E,B){var F=this,I=F.prototype,C=I.aliasPrefix.length,G=B.validators,D=B.alias,A=B.sortType,H;if(D){if(Ext.isString(D)){F.register(D.substring(C),E)}else{for(H=D.length;H--;){F.register(D[H].substring(C),E)}}}if(A&&Ext.isString(A)){E.prototype.sortType=Ext.data.SortTypes[A]}if(G){delete B.validators;B.validate=F.compileValidators(G)}},statics:{all:{},compileValidators:function(A){if(!(A instanceof Array)){A=[A]}var B=A.length,C;for(C=0;C<B;++C){A[C]=Ext.Factory.dataValidator(A[C])}return function(H,G,D){var F=this,J="",E,I;for(C=-1;C<B;++C){if(C<0){E=F.callParent([H,G,D])}else{I=A[C];E=I.validate(H)}if(E!==true){E=E||F.defaultInvalidMessage;if(D){D.add(F.name,E);J=J||E}else{if(G){if(J){J+=G}J+=E}else{J=E;break}}}}return E||true}},register:function(C,B){var A=this.all;A[C.toUpperCase()]=A[C]=B.prototype}},argumentNamesRe:/^function\s+\(\s*([^,\)\s]+)/,calculateRe:/[^\.a-z0-9_]([a-z_][a-z_0-9]*)\.([a-z_][a-z_0-9]*)/gi,constructor:function(D){var H=this,M=H.calculateRe,G,I,L,A,C,K,E,B,J,F;if(D){if(Ext.isString(D)){H.name=D}else{Ext.apply(H,D)}}if(!H.allowNull){H.allowNull=!!H.reference}G=H.calculate;C=H.depends;if(G){H.convert=H.doCalculate;if(!C){if(!(C=G.$depends)){K={};J=G.toString();G.$depends=C=[];E=H.argumentNamesRe.exec(J);B=E?E[1]:"data";while((E=M.exec(J))){if(B===E[1]&&!K[F=E[2]]){K[F]=1;C.push(F)}}}H.depends=C}}L=H.defaultValue;if(H.convert){if(L!==undefined){H.defaultValue=L=H.convert(L)}H.calculated=I=H.convert.length>1;H.evil=I&&!C}if(H.persist===null){H.persist=!I}A=H.sortType;if(!H.sortType){H.sortType=Ext.data.SortTypes.none}else{if(Ext.isString(A)){H.sortType=Ext.data.SortTypes[A]}}if(H.validators){Ext.override(H,{validate:Ext.data.field.Field.compileValidators(H.validators)})}if(C&&typeof C==="string"){H.depends=[C]}H.cloneDefaultValue=L!==undefined&&(Ext.isDate(L)||Ext.isArray(L)||Ext.isObject(L))},collate:function(B,D){var C=this,E=B,A=D;if(C.sortType){E=C.sortType(E);A=C.sortType(A)}return(E<A)?-1:((E>A)?1:0)},compare:function(B,A){return(B===A)?0:((B<A)?-1:1)},isEqual:function(B,A){return !this.compare(B,A)},convert:null,serialize:null,validate:Ext.returnTrue,doCalculate:function(B,A){return A?this.calculate(A.data):B},getName:function(){return this.name},getAllowBlank:function(){return this.allowBlank},getAllowNull:function(){return this.allowNull},getConvert:function(){return this.convert},getDefaultValue:function(){return this.defaultValue},getDepends:function(){return this.depends},getMapping:function(){return this.mapping},hasMapping:function(){var A=this.mapping;return !!(A||A===0)},getPersist:function(){return this.persist},getSortDir:function(){return this.sortDir},getSortType:function(){return this.sortType},getType:function(){return"auto"}},function(){this.register(this.prototype.type,this)});