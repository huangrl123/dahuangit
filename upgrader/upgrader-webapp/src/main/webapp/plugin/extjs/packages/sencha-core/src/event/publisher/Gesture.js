Ext.define("Ext.event.publisher.Gesture",{extend:"Ext.event.publisher.Dom",alternateClassName:"Ext.event.publisher.TouchGesture",requires:["Ext.util.Point","Ext.AnimationQueue"],config:{recognizers:{}},isCancelEvent:{touchcancel:1,pointercancel:1,MSPointerCancel:1},constructor:function(B){var C=this,E=C.onTouchStart,A=C.onTouchMove=Ext.Function.createAnimationFrame(C.onTouchMove,C),D=C.onTouchEnd=Ext.Function.createAnimationFrame(C.onTouchEnd,C,null,1);C.handlers={touchstart:E,touchmove:A,touchend:D,touchcancel:D,pointerdown:E,pointermove:A,pointerup:D,pointercancel:D,MSPointerDown:E,MSPointerMove:A,MSPointerUp:D,MSPointerCancel:D,mousedown:E,mousemove:A,mouseup:D};C.recognizedEvents={};C.activeTouchesMap={};C.activeTouches=[];C.changedTouches=[];if(Ext.supports.TouchEvents){C.onTargetTouchMove=C.onTargetTouchMove.bind(C);C.onTargetTouchEnd=C.onTargetTouchEnd.bind(C)}C.initConfig(B);return C.callParent()},applyRecognizers:function(A){var C,B;for(C in A){B=A[C];if(B){this.registerRecognizer(B)}}return A},handles:function(A){var B=this.handledEventsMap;return !!B[A]||!!B["*"]||A==="*"||this.recognizedEvents.hasOwnProperty(A)},registerRecognizer:function(C){var D=this,A=D.recognizedEvents,E=C.getHandledEvents(),B,F;C.setOnRecognized(D.onRecognized);C.setCallbackScope(D);for(B=0,F=E.length;B<F;B++){A[E[B]]=1}},onRecognized:function(J,A,H){var F=this,E=A.changedTouches,C=E.length,D,G,I,B;H=H||{};H.type=J;H.target=E[0].target;H.isStopped=false;A=A.chain(H);if(C>1){D=[];for(I=0;I<C;I++){B=E[I];D.push(B.targets)}G=F.getCommonTargets(D)}else{G=E[0].targets}F.publish(J,G,A)},getCommonTargets:function(H){var A=H[0],B=H.length;if(B===1){return A}var G=[],D=1,F,E,C;while(true){F=A[A.length-D];if(!F){return G}for(C=1;C<B;C++){E=H[C];if(E[E.length-D]!==F){return G}}G.unshift(F);D++}return G},invokeRecognizers:function(D,B){var C=this.getRecognizers(),E,A;if(D==="onStart"){for(E in C){C[E].isActive=true}}for(E in C){A=C[E];if(A.isActive&&A[D].call(A,B)===false){A.isActive=false}}},updateTouches:function(A,H){var M=this,D=A.browserEvent,E=D.changedTouches||[D],G=M.activeTouches,B=M.activeTouchesMap,K=[],O,I,C,L,J,F,N,P;for(J=0,F=E.length;J<F;J++){O=E[J];if("identifier" in O){I=O.identifier}else{if("pointerId" in O){I=O.pointerId}else{I=1}}C=B[I];if(H){delete B[I];Ext.Array.remove(G,C)}else{if(!C){L=Ext.event.Event.resolveTextNode(O.target);C=B[I]={identifier:I,target:L,targets:M.getPropagatingTargets(L)};G.push(C)}}N=O.pageX;P=O.pageY;C.pageX=N;C.pageY=P;C.point=new Ext.util.Point(N,P);K.push(C)}A.touches=Ext.Array.clone(G);A.changedTouches=K},onDelegatedEvent:function(A){var B=this;A=B.callParent([A,false]);if(A){if(!A.button||A.button<1){B.handlers[A.type].call(B,A)}B.afterEvent(A)}},onTouchStart:function(A){var B=this,C=A.target;if(A.browserEvent.type==="touchstart"){C.addEventListener("touchmove",B.onTargetTouchMove);C.addEventListener("touchend",B.onTargetTouchEnd);C.addEventListener("touchcancel",B.onTargetTouchEnd)}B.updateTouches(A);if(!B.isStarted){B.isStarted=true;B.invokeRecognizers("onStart",A);if(Ext.enableGarbageCollector){Ext.dom.GarbageCollector.pause()}}B.invokeRecognizers("onTouchStart",A)},onTouchMove:function(A){if(this.isStarted){this.updateTouches(A);if(A.changedTouches.length>0){this.invokeRecognizers("onTouchMove",A)}}},onTouchEnd:function(A){var B=this;if(!B.isStarted){return}B.updateTouches(A,true);B.invokeRecognizers(B.isCancelEvent[A.type]?"onTouchCancel":"onTouchEnd",A);if(!B.activeTouches.length){B.isStarted=false;B.invokeRecognizers("onEnd",A);if(Ext.enableGarbageCollector){Ext.dom.GarbageCollector.resume()}}},onTargetTouchMove:function(A){if(!Ext.getBody().contains(A.target)){this.onTouchMove(new Ext.event.Event(A))}},onTargetTouchEnd:function(A){var B=this,C=A.target;C.removeEventListener("touchmove",B.onTargetTouchMove);C.removeEventListener("touchend",B.onTargetTouchEnd);C.removeEventListener("touchcancel",B.onTargetTouchEnd);if(!Ext.getBody().contains(C)){B.onTouchEnd(new Ext.event.Event(A))}}},function(){var C=[],A=Ext.supports,B=A.TouchEvents;if(A.PointerEvents){C.push("pointerdown","pointermove","pointerup","pointercancel")}else{if(A.MSPointerEvents){C.push("MSPointerDown","MSPointerMove","MSPointerUp","MSPointerCancel")}else{if(B){C.push("touchstart","touchmove","touchend","touchcancel")}}}if(!C.length||(B&&Ext.isWebKit&&Ext.os.is.Desktop)){C.push("mousedown","mousemove","mouseup")}this.prototype.handledEvents=C});