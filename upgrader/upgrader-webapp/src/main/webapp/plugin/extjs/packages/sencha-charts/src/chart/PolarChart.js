Ext.define("Ext.chart.PolarChart",{requires:["Ext.chart.grid.CircularGrid","Ext.chart.grid.RadialGrid"],extend:"Ext.chart.AbstractChart",xtype:"polar",config:{center:[0,0],radius:0,innerPadding:0},getDirectionForAxis:function(A){if(A==="radial"){return"Y"}else{return"X"}},applyCenter:function(A,B){if(B&&A[0]===B[0]&&A[1]===B[1]){return}return[+A[0],+A[1]]},updateCenter:function(A){var G=this,F=G.getAxes(),B,H=G.getSeries(),D,E,C;for(E=0,C=F.length;E<C;E++){B=F[E];B.setCenter(A)}for(E=0,C=H.length;E<C;E++){D=H[E];D.setCenter(A)}},applyInnerPadding:function(B,A){return Ext.isNumber(B)?B:A},doSetSurfaceRect:function(C,B){var A=this.getMainRect();C.setRect(B);C.matrix.set(1,0,0,1,A[0]-B[0],A[1]-B[1]);C.inverseMatrix.set(1,0,0,1,B[0]-A[0],B[1]-A[1])},applyAxes:function(C,G){var H=this,E=Ext.Array.from(H.config.series)[0],F,D,B,A;if(E.type==="radar"&&C&&C.length){for(F=0,D=C.length;F<D;F++){B=C[F];if(B.position==="angular"){A=true;break}}if(!A){C.push({type:"category",position:"angular",fields:E.xField||E.angleField,style:{estStepSize:1},grid:true})}}return this.callParent(arguments)},performLayout:function(){try{this.resizing++;this.callParent();this.suspendThicknessChanged();var J=this,F=J.getSurface("chart").getRect(),H=J.getInsetPadding(),d=J.getInnerPadding(),M=Ext.apply({},H),B,T=F[2]-H.left-H.right,b=F[3]-H.top-H.bottom,Y=[H.left,H.top,T,b],O=J.getSeries(),S,Q=T-d*2,N=b-d*2,c=[Q*0.5+d,N*0.5+d],I=Math.min(Q,N)*0.5,Z=J.getAxes(),U,a,K,R=[],P=[],D=I-d,C,W,A,L,X,V,G;J.setMainRect(Y);J.doSetSurfaceRect(J.getSurface(),Y);for(C=0,W=J.surfaceMap.grid&&J.surfaceMap.grid.length;C<W;C++){J.doSetSurfaceRect(J.surfaceMap.grid[C],F)}for(C=0,W=Z.length;C<W;C++){U=Z[C];switch(U.getPosition()){case"angular":R.push(U);break;case"radial":P.push(U);break}}for(C=0,W=R.length;C<W;C++){U=R[C];L=U.getFloating();X=L?L.value:null;J.doSetSurfaceRect(U.getSurface(),F);a=U.getThickness();for(B in M){M[B]+=a}T=F[2]-M.left-M.right;b=F[3]-M.top-M.bottom;A=Math.min(T,b)*0.5;if(C===0){D=A-d}U.setMinimum(0);U.setLength(A);U.getSprites();K=U.sprites[0].attr.lineWidth*0.5;for(B in M){M[B]+=K}}for(C=0,W=P.length;C<W;C++){U=P[C];J.doSetSurfaceRect(U.getSurface(),Y);U.setMinimum(0);U.setLength(D);U.getSprites()}for(C=0,W=O.length;C<W;C++){S=O[C];if(S.type==="gauge"&&!V){V=S}else{S.setRadius(D)}J.doSetSurfaceRect(S.getSurface(),Y)}J.doSetSurfaceRect(J.getSurface("overlay"),F);if(V){V.setRect(Y);G=V.getRadius()-d;J.setRadius(G);J.setCenter(V.getCenter());V.setRadius(G);if(Z.length&&Z[0].getPosition()==="gauge"){U=Z[0];J.doSetSurfaceRect(U.getSurface(),F);U.setTotalAngle(V.getTotalAngle());U.setLength(G)}}else{J.setRadius(I);J.setCenter(c)}J.redraw()}catch(E){Ext.log.error(this.$className+": Unhandled Exception: ",E.description||E.message);throw E}finally{this.resizing--;this.resumeThicknessChanged()}},refloatAxes:function(){var I=this,G=I.getAxes(),C=I.getMainRect(),H,D,A,E,F,B,J;if(!C){return}J=0.5*Math.min(C[2],C[3]);for(E=0,F=G.length;E<F;E++){B=G[E];H=B.getFloating();D=H?H.value:null;if(D!==null){A=I.getAxis(H.alongAxis);if(B.getPosition()==="angular"){if(A){D=A.getLength()*D/A.getRange()[1]}else{D=0.01*D*J}B.sprites[0].setAttributes({length:D},true)}else{if(A){if(Ext.isString(D)){D=A.getCoordFor(D)}D=D/(A.getRange()[1]+1)*Math.PI*2-Math.PI*1.5+B.getRotation()}else{D=Ext.draw.Draw.rad(D)}B.sprites[0].setAttributes({baseRotation:D},true)}}}},redraw:function(){var D=this,A=D.getAxes(),G,E=D.getSeries(),C,B,F;for(B=0,F=A.length;B<F;B++){G=A[B];G.getSprites()}for(B=0,F=E.length;B<F;B++){C=E[B];C.getSprites()}D.renderFrame();D.callParent(arguments)},renderFrame:function(){this.refloatAxes();this.callParent(arguments)}});