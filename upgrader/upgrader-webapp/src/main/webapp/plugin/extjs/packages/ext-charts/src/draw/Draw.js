Ext.define("Ext.draw.Draw",{singleton:true,requires:["Ext.draw.Color"],pathToStringRE:/,?([achlmqrstvxz]),?/gi,pathCommandRE:/([achlmqstvz])[\s,]*((-?\d*\.?\d*(?:e[-+]?\d+)?\s*,?\s*)+)/ig,pathValuesRE:/(-?\d*\.?\d*(?:e[-+]?\d+)?)\s*,?\s*/ig,stopsRE:/^(\d+%?)$/,radian:Math.PI/180,availableAnimAttrs:{along:"along",blur:null,"clip-rect":"csv",cx:null,cy:null,fill:"color","fill-opacity":null,"font-size":null,height:null,opacity:null,path:"path",r:null,rotation:"csv",rx:null,ry:null,scale:"csv",stroke:"color","stroke-opacity":null,"stroke-width":null,translation:"csv",width:null,x:null,y:null},is:function(B,A){A=String(A).toLowerCase();return(A=="object"&&B===Object(B))||(A=="undefined"&&typeof B==A)||(A=="null"&&B===null)||(A=="array"&&Array.isArray&&Array.isArray(B))||(Object.prototype.toString.call(B).toLowerCase().slice(8,-1))==A},ellipsePath:function(A){var B=A.attr;return Ext.String.format("M{0},{1}A{2},{3},0,1,1,{0},{4}A{2},{3},0,1,1,{0},{1}z",B.x,B.y-B.ry,B.rx,B.ry,B.y+B.ry)},rectPath:function(A){var B=A.attr;if(B.radius){return Ext.String.format("M{0},{1}l{2},0a{3},{3},0,0,1,{3},{3}l0,{5}a{3},{3},0,0,1,{4},{3}l{6},0a{3},{3},0,0,1,{4},{4}l0,{7}a{3},{3},0,0,1,{3},{4}z",B.x+B.radius,B.y,B.width-B.radius*2,B.radius,-B.radius,B.height-B.radius*2,B.radius*2-B.width,B.radius*2-B.height)}else{return Ext.String.format("M{0},{1}L{2},{1},{2},{3},{0},{3}z",B.x,B.y,B.width+B.x,B.height+B.y)}},path2string:function(){return this.join(",").replace(Ext.draw.Draw.pathToStringRE,"$1")},pathToString:function(A){return A.join(",").replace(Ext.draw.Draw.pathToStringRE,"$1")},parsePathString:function(C){if(!C){return null}var A={a:7,c:6,h:1,l:2,m:2,q:4,s:4,t:2,v:1,z:0},D=[],B=this;if(B.is(C,"array")&&B.is(C[0],"array")){D=B.pathClone(C)}if(!D.length){String(C).replace(B.pathCommandRE,function(H,F,G){var I=[],E=F.toLowerCase();G.replace(B.pathValuesRE,function(K,J){J&&I.push(+J)});if(E=="m"&&I.length>2){D.push([F].concat(Ext.Array.splice(I,0,2)));E="l";F=(F=="m")?"l":"L"}while(I.length>=A[E]){D.push([F].concat(Ext.Array.splice(I,0,A[E])));if(!A[E]){break}}})}D.toString=B.path2string;return D},mapPath:function(F,A){if(!A){return F}var G,H,E,B,C,I,D;F=this.path2curve(F);for(E=0,B=F.length;E<B;E++){D=F[E];for(C=1,I=D.length;C<I-1;C+=2){G=A.x(D[C],D[C+1]);H=A.y(D[C],D[C+1]);D[C]=G;D[C+1]=H}}return F},pathClone:function(A){var E=[],F,D,B,C;if(!this.is(A,"array")||!this.is(A&&A[0],"array")){A=this.parsePathString(A)}for(B=0,C=A.length;B<C;B++){E[B]=[];for(F=0,D=A[B].length;F<D;F++){E[B][F]=A[B][F]}}E.toString=this.path2string;return E},pathToAbsolute:function(B){if(!this.is(B,"array")||!this.is(B&&B[0],"array")){B=this.parsePathString(B)}var L=[],J=0,K=0,G=0,D=0,H=0,E=B.length,A,C,F,I;if(E&&B[0][0]=="M"){J=+B[0][1];K=+B[0][2];G=J;D=K;H++;L[0]=["M",J,K]}for(;H<E;H++){A=L[H]=[];C=B[H];if(C[0]!=C[0].toUpperCase()){A[0]=C[0].toUpperCase();switch(A[0]){case"A":A[1]=C[1];A[2]=C[2];A[3]=C[3];A[4]=C[4];A[5]=C[5];A[6]=+(C[6]+J);A[7]=+(C[7]+K);break;case"V":A[1]=+C[1]+K;break;case"H":A[1]=+C[1]+J;break;case"M":G=+C[1]+J;D=+C[2]+K;default:F=1;I=C.length;for(;F<I;F++){A[F]=+C[F]+((F%2)?J:K)}}}else{F=0;I=C.length;for(;F<I;F++){L[H][F]=C[F]}}switch(A[0]){case"Z":J=G;K=D;break;case"H":J=A[1];break;case"V":K=A[1];break;case"M":C=L[H];I=C.length;G=C[I-2];D=C[I-1];default:C=L[H];I=C.length;J=C[I-2];K=C[I-1]}}L.toString=this.path2string;return L},pathToRelative:function(B){if(!this.is(B,"array")||!this.is(B&&B[0],"array")){B=this.parsePathString(B)}var O=[],M=0,N=0,I=0,F=0,C=0,A,D,J,H,K,L,G,P,E;if(B[0][0]=="M"){M=B[0][1];N=B[0][2];I=M;F=N;C++;O.push(["M",M,N])}for(J=C,G=B.length;J<G;J++){A=O[J]=[];D=B[J];if(D[0]!=D[0].toLowerCase()){A[0]=D[0].toLowerCase();switch(A[0]){case"a":A[1]=D[1];A[2]=D[2];A[3]=D[3];A[4]=D[4];A[5]=D[5];A[6]=+(D[6]-M).toFixed(3);A[7]=+(D[7]-N).toFixed(3);break;case"v":A[1]=+(D[1]-N).toFixed(3);break;case"m":I=D[1];F=D[2];default:for(H=1,P=D.length;H<P;H++){A[H]=+(D[H]-((H%2)?M:N)).toFixed(3)}}}else{A=O[J]=[];if(D[0]=="m"){I=D[1]+M;F=D[2]+N}for(K=0,E=D.length;K<E;K++){O[J][K]=D[K]}}L=O[J].length;switch(O[J][0]){case"z":M=I;N=F;break;case"h":M+=+O[J][L-1];break;case"v":N+=+O[J][L-1];break;default:M+=+O[J][L-2];N+=+O[J][L-1]}}O.toString=this.path2string;return O},path2curve:function(E){var F=this,G=F.pathToAbsolute(E),B=G.length,A={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},C,I,D,H;for(C=0;C<B;C++){G[C]=F.command2curve(G[C],A);if(G[C].length>7){G[C].shift();H=G[C];while(H.length){Ext.Array.splice(G,C++,0,["C"].concat(Ext.Array.splice(H,0,6)))}Ext.Array.erase(G,C,1);B=G.length;C--}I=G[C];D=I.length;A.x=I[D-2];A.y=I[D-1];A.bx=parseFloat(I[D-4])||A.x;A.by=parseFloat(I[D-3])||A.y}return G},interpolatePaths:function(J,O){var K=this,B=K.pathToAbsolute(J),M=K.pathToAbsolute(O),D={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},L={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},E=function(Q,P){if(Q[P].length>7){Q[P].shift();var R=Q[P];while(R.length){Ext.Array.splice(Q,P++,0,["C"].concat(Ext.Array.splice(R,0,6)))}Ext.Array.erase(Q,P,1);C=Math.max(B.length,M.length||0)}},A=function(T,S,P,R,Q){if(T&&S&&T[Q][0]=="M"&&S[Q][0]!="M"){Ext.Array.splice(S,Q,0,["M",R.x,R.y]);P.bx=0;P.by=0;P.x=T[Q][1];P.y=T[Q][2];C=Math.max(B.length,M.length||0)}},G,C,N,I,H,F;for(G=0,C=Math.max(B.length,M.length||0);G<C;G++){B[G]=K.command2curve(B[G],D);E(B,G);(M[G]=K.command2curve(M[G],L));E(M,G);A(B,M,D,L,G);A(M,B,L,D,G);N=B[G];I=M[G];H=N.length;F=I.length;D.x=N[H-2];D.y=N[H-1];D.bx=parseFloat(N[H-4])||D.x;D.by=parseFloat(N[H-3])||D.y;L.bx=(parseFloat(I[F-4])||L.x);L.by=(parseFloat(I[F-3])||L.y);L.x=I[F-2];L.y=I[F-1]}return[B,M]},command2curve:function(C,A){var B=this;if(!C){return["C",A.x,A.y,A.x,A.y,A.x,A.y]}if(C[0]!="T"&&C[0]!="Q"){A.qx=A.qy=null}switch(C[0]){case"M":A.X=C[1];A.Y=C[2];break;case"A":C=["C"].concat(B.arc2curve.apply(B,[A.x,A.y].concat(C.slice(1))));break;case"S":C=["C",A.x+(A.x-(A.bx||A.x)),A.y+(A.y-(A.by||A.y))].concat(C.slice(1));break;case"T":A.qx=A.x+(A.x-(A.qx||A.x));A.qy=A.y+(A.y-(A.qy||A.y));C=["C"].concat(B.quadratic2curve(A.x,A.y,A.qx,A.qy,C[1],C[2]));break;case"Q":A.qx=C[1];A.qy=C[2];C=["C"].concat(B.quadratic2curve(A.x,A.y,C[1],C[2],C[3],C[4]));break;case"L":C=["C"].concat(A.x,A.y,C[1],C[2],C[1],C[2]);break;case"H":C=["C"].concat(A.x,A.y,C[1],A.y,C[1],A.y);break;case"V":C=["C"].concat(A.x,A.y,A.x,C[1],A.x,C[1]);break;case"Z":C=["C"].concat(A.x,A.y,A.X,A.Y,A.X,A.Y);break}return C},quadratic2curve:function(A,B,F,E,C,D){var G=1/3,H=2/3;return[G*A+H*F,G*B+H*E,G*C+H*F,G*D+H*E,C,D]},rotate:function(D,E,B){var G=Math.cos(B),A=Math.sin(B),C=D*G-E*A,F=D*A+E*G;return{x:C,y:F}},arc2curve:function(R,S,c,X,W,O,K,D,E,J){var M=this,Ae=Math.PI,Ad=M.radian,l=Ae*120/180,u=Ad*(+W||0),F=[],m=Math,T=m.cos,f=m.sin,Y=m.sqrt,P=m.abs,g=m.asin,U,o,p,Ab,G,A,Aa,n,e,d,Q,C,q,V,B,H,w,s,a,b,N,I,z,Z,Ac,j,v,L,r;if(!J){U=M.rotate(R,S,-u);R=U.x;S=U.y;U=M.rotate(D,E,-u);D=U.x;E=U.y;o=(R-D)/2;p=(S-E)/2;Ab=(o*o)/(c*c)+(p*p)/(X*X);if(Ab>1){Ab=Y(Ab);c=Ab*c;X=Ab*X}G=c*c;A=X*X;Aa=(O==K?-1:1)*Y(P((G*A-G*p*p-A*o*o)/(G*p*p+A*o*o)));n=Aa*c*p/X+(R+D)/2;e=Aa*-X*o/c+(S+E)/2;d=g(((S-e)/X).toFixed(7));Q=g(((E-e)/X).toFixed(7));d=R<n?Ae-d:d;Q=D<n?Ae-Q:Q;if(d<0){d=Ae*2+d}if(Q<0){Q=Ae*2+Q}if(K&&d>Q){d=d-Ae*2}if(!K&&Q>d){Q=Q-Ae*2}}else{d=J[0];Q=J[1];n=J[2];e=J[3]}C=Q-d;if(P(C)>l){v=Q;L=D;r=E;Q=d+l*(K&&Q>d?1:-1);D=n+c*T(Q);E=e+X*f(Q);F=M.arc2curve(D,E,c,X,W,0,K,L,r,[Q,v,n,e])}C=Q-d;q=T(d);V=f(d);B=T(Q);H=f(Q);w=m.tan(C/4);s=4/3*c*w;a=4/3*X*w;b=[R,S];N=[R+s*V,S-a*q];I=[D+s*H,E-a*B];z=[D,E];N[0]=2*b[0]-N[0];N[1]=2*b[1]-N[1];if(J){return[N,I,z].concat(F)}else{F=[N,I,z].concat(F).join().split(",");Z=[];j=F.length;for(Ac=0;Ac<j;Ac++){Z[Ac]=Ac%2?M.rotate(F[Ac-1],F[Ac],u).y:M.rotate(F[Ac],F[Ac+1],u).x}return Z}},rotateAndTranslatePath:function(A){var E=A.rotation.degrees,F=A.rotation.x,D=A.rotation.y,J=A.translation.x,G=A.translation.y,I,H,B,C,K,L=[];if(!E&&!J&&!G){return this.pathToAbsolute(A.attr.path)}J=J||0;G=G||0;I=this.pathToAbsolute(A.attr.path);for(H=I.length;H--;){B=L[H]=I[H].slice();if(B[0]=="A"){C=this.rotatePoint(B[6],B[7],E,F,D);B[6]=C.x+J;B[7]=C.y+G}else{K=1;while(B[K+1]!=null){C=this.rotatePoint(B[K],B[K+1],E,F,D);B[K]=C.x+J;B[K+1]=C.y+G;K+=2}}}return L},rotatePoint:function(D,E,F,G,B){if(!F){return{x:D,y:E}}G=G||0;B=B||0;D=D-G;E=E-B;F=F*this.radian;var C=Math.cos(F),A=Math.sin(F);return{x:D*C-E*A+G,y:D*A+E*C+B}},pathDimensions:function(J){if(!J||!(J+"")){return{x:0,y:0,width:0,height:0}}J=this.path2curve(J);var L=0,M=0,E=[],F=[],H=0,D=J.length,B,A,I,C,K,G;for(;H<D;H++){B=J[H];if(B[0]=="M"){L=B[1];M=B[2];E.push(L);F.push(M)}else{G=this.curveDim(L,M,B[1],B[2],B[3],B[4],B[5],B[6]);E=E.concat(G.min.x,G.max.x);F=F.concat(G.min.y,G.max.y);L=B[5];M=B[6]}}A=Math.min.apply(0,E);I=Math.min.apply(0,F);C=Math.max.apply(0,E);K=Math.max.apply(0,F);return{x:Math.round(A),y:Math.round(I),path:J,width:Math.round(C-A),height:Math.round(K-I)}},intersectInside:function(C,A,B){return(B[0]-A[0])*(C[1]-A[1])>(B[1]-A[1])*(C[0]-A[0])},intersectIntersection:function(B,A,K,L){var C=[],F=K[0]-L[0],G=K[1]-L[1],D=B[0]-A[0],E=B[1]-A[1],H=K[0]*L[1]-K[1]*L[0],I=B[0]*A[1]-B[1]*A[0],J=1/(F*E-G*D);C[0]=(H*D-I*F)*J;C[1]=(H*E-I*G)*J;return C},intersect:function(H,I){var A=this,G=0,D=I.length,K=I[D-1],F=H,M,B,C,J,L,E;for(;G<D;++G){M=I[G];L=F;F=[];B=L[L.length-1];E=0;J=L.length;for(;E<J;E++){C=L[E];if(A.intersectInside(C,K,M)){if(!A.intersectInside(B,K,M)){F.push(A.intersectIntersection(B,C,K,M))}F.push(C)}else{if(A.intersectInside(B,K,M)){F.push(A.intersectIntersection(B,C,K,M))}}B=C}K=M}return F},bezier:function(F,D,G,H,E){if(E===0){return F}else{if(E===1){return H}}var B=1-E,C=B*B*B,A=E/B;return C*(F+A*(3*D+A*(3*G+H*A)))},bezierDim:function(O,M,N,Q){var E=[],B,J,I,H,G,P,D,L,F,K;if(O+3*N==Q+3*M){B=O-M;B/=2*(O-M-M+N);if(B<1&&B>0){E.push(B)}}else{J=O-3*M+3*N-Q;I=2*(O-M-M+N);H=O-M;G=I*I-4*J*H;P=J+J;if(G===0){B=I/P;if(B<1&&B>0){E.push(B)}}else{if(G>0){D=Math.sqrt(G);B=(D+I)/P;if(B<1&&B>0){E.push(B)}B=(I-D)/P;if(B<1&&B>0){E.push(B)}}}}L=Math.min(O,Q);F=Math.max(O,Q);for(K=0;K<E.length;K++){L=Math.min(L,this.bezier(O,M,N,Q,E[K]));F=Math.max(F,this.bezier(O,M,N,Q,E[K]))}return[L,F]},curveDim:function(C,D,J,I,B,A,E,F){var G=this.bezierDim(C,J,B,E),H=this.bezierDim(D,I,A,F);return{min:{x:G[0],y:H[0]},max:{x:G[1],y:H[1]}}},getAnchors:function(N,L,V,X,B,C,W){W=W||4;var P=Math,H=P.PI,I=H/2,O=P.abs,U=P.sin,J=P.cos,T=P.atan,S,R,D,E,Q,A,F,G,K;S=(V-N)/W;R=(B-V)/W;if((X>=L&&X>=C)||(X<=L&&X<=C)){D=E=I}else{D=T((V-N)/O(X-L));if(L<X){D=H-D}E=T((B-V)/O(X-C));if(C<X){E=H-E}}K=I-((D+E)%(H*2))/2;if(K>I){K-=H}D+=K;E+=K;Q=V-S*U(D);A=X+S*J(D);F=V+R*U(E);G=X+R*J(E);if((X>L&&A<L)||(X<L&&A>L)){Q+=O(L-A)*(Q-V)/(A-X);A=L}if((X>C&&G<C)||(X<C&&G>C)){F-=O(C-G)*(F-V)/(G-X);G=C}return{x1:Q,y1:A,x2:F,y2:G}},smooth:function(D,K){var I=this.path2curve(D),P=[I[0]],R=I[0][1],S=I[0][2],C,N,E=1,J=I.length,Q=1,A=R,L=S,B,F,H,O,M,T,G;for(;E<J;E++){B=I[E];F=B.length;H=I[E-1];O=H.length;M=I[E+1];T=M&&M.length;if(B[0]=="M"){A=B[1];L=B[2];C=E+1;while(I[C][0]!="C"){C++}P.push(["M",A,L]);Q=P.length;R=A;S=L;continue}if(B[F-2]==A&&B[F-1]==L&&(!M||M[0]=="M")){G=P[Q].length;N=this.getAnchors(H[O-2],H[O-1],A,L,P[Q][G-2],P[Q][G-1],K);P[Q][1]=N.x2;P[Q][2]=N.y2}else{if(!M||M[0]=="M"){N={x1:B[F-2],y1:B[F-1]}}else{N=this.getAnchors(H[O-2],H[O-1],B[F-2],B[F-1],M[T-2],M[T-1],K)}}P.push(["C",R,S,N.x1,N.y1,B[F-2],B[F-1]]);R=N.x2;S=N.y2}return P},findDotAtSegment:function(C,D,J,I,B,A,F,G,E){var H=1-E;return{x:Math.pow(H,3)*C+Math.pow(H,2)*3*E*J+H*3*E*E*B+Math.pow(E,3)*F,y:Math.pow(H,3)*D+Math.pow(H,2)*3*E*I+H*3*E*E*A+Math.pow(E,3)*G}},snapEnds:function(J,B,Q,R){if(Ext.isDate(J)){return this.snapEndsByDate(J,B,Q)}var C=(B-J)/Q,O=Math.floor(Math.log(C)/Math.LN10)+1,F=Math.pow(10,O),N,I,L=Math.round((C%F)*Math.pow(10,2-O)),G=[[0,15],[10,1],[20,4],[25,2],[50,9],[100,15]],A=0,P,K,E,D,H=1000000000,M=G.length;I=Math.floor(J/F)*F;if(J==I&&I>0){I=Math.floor((J-(F/10))/F)*F}if(R){for(E=0;E<M;E++){P=G[E][0];K=(P-L)<0?1000000:(P-L)/G[E][1];if(K<H){D=P;H=K}}C=Math.floor(C*Math.pow(10,-O))*Math.pow(10,O)+D*Math.pow(10,O-2);if(J<0&&B>=0){N=0;while(N>J){N-=C;A++}J=+N.toFixed(10);N=0;while(N<B){N+=C;A++}B=+N.toFixed(10)}else{N=J=I;while(N<B){N+=C;A++}}B=+N.toFixed(10)}else{J=I;A=Q}return{from:J,to:B,power:O,step:C,steps:A}},snapEndsByDate:function(J,K,H,I){var L=false,D=[[Ext.Date.MILLI,[1,2,5,10,20,50,100,200,250,500]],[Ext.Date.SECOND,[1,2,5,10,15,30]],[Ext.Date.MINUTE,[1,2,5,10,15,30]],[Ext.Date.HOUR,[1,2,3,4,6,12]],[Ext.Date.DAY,[1,2,7,14]],[Ext.Date.MONTH,[1,2,3,6]]],B=D.length,G=false,A,F,C,E;for(E=0;E<B;E++){A=D[E];if(!G){for(F=0;F<A[1].length;F++){if(K<Ext.Date.add(J,A[0],A[1][F]*H)){L=[A[0],A[1][F]];G=true;break}}}}if(!L){C=this.snapEnds(J.getFullYear(),K.getFullYear()+1,H,I);L=[Date.YEAR,Math.round(C.step)]}return this.snapEndsByDateAndStep(J,K,L,I)},snapEndsByDateAndStep:function(K,N,F,I){var L=[K.getFullYear(),K.getMonth(),K.getDate(),K.getHours(),K.getMinutes(),K.getSeconds(),K.getMilliseconds()],B,H,P,M,D,G,O,C,A=F[0],E=F[1],J=0;if(I){B=K}else{switch(A){case Ext.Date.MILLI:B=new Date(L[0],L[1],L[2],L[3],L[4],L[5],Math.floor(L[6]/E)*E);break;case Ext.Date.SECOND:B=new Date(L[0],L[1],L[2],L[3],L[4],Math.floor(L[5]/E)*E,0);break;case Ext.Date.MINUTE:B=new Date(L[0],L[1],L[2],L[3],Math.floor(L[4]/E)*E,0,0);break;case Ext.Date.HOUR:B=new Date(L[0],L[1],L[2],Math.floor(L[3]/E)*E,0,0,0);break;case Ext.Date.DAY:B=new Date(L[0],L[1],Math.floor((L[2]-1)/E)*E+1,0,0,0,0);break;case Ext.Date.MONTH:B=new Date(L[0],Math.floor(L[1]/E)*E,1,0,0,0,0);J=[];C=true;break;default:B=new Date(Math.floor(L[0]/E)*E,0,1,0,0,0,0);J=[];C=true;break}}O=((A===Ext.Date.MONTH)&&(E==1/2||E==1/3||E==1/4));H=new Date(B);while(H<N){if(O){P=new Date(H);M=P.getFullYear();D=P.getMonth();G=P.getDate();switch(E){case 1/2:if(G>=15){G=1;if(++D>11){M++}}else{G=15}break;case 1/3:if(G>=20){G=1;if(++D>11){M++}}else{if(G>=10){G=20}else{G=10}}break;case 1/4:if(G>=22){G=1;if(++D>11){M++}}else{if(G>=15){G=22}else{if(G>=8){G=15}else{G=8}}}break}H.setYear(M);H.setMonth(D);H.setDate(G);J.push(new Date(H))}else{if(C){H=Ext.Date.add(H,A,E);J.push(new Date(H))}else{H=Ext.Date.add(H,A,E);J++}}}if(I){H=N}if(C){return{from:+B,to:+H,steps:J}}else{return{from:+B,to:+H,step:(H-B)/J,steps:J}}},sorter:function(B,A){return B.offset-A.offset},rad:function(A){return A%360*Math.PI/180},normalizeRadians:function(B){var A=2*Math.PI;if(B>=0){return B%A}return((B%A)+A)%A},degrees:function(A){return A*180/Math.PI%360},normalizeDegrees:function(A){if(A>=0){return A%360}return((A%360)+360)%360},withinBox:function(A,B,C){C=C||{};return(A>=C.x&&A<=(C.x+C.width)&&B>=C.y&&B<=(C.y+C.height))},parseGradient:function(G){var A=this,J=G.type||"linear",I=G.angle||0,E=A.radian,C=G.stops,F=[],B,D,K,H;if(J=="linear"){D=[0,0,Math.cos(I*E),Math.sin(I*E)];K=1/(Math.max(Math.abs(D[2]),Math.abs(D[3]))||1);D[2]*=K;D[3]*=K;if(D[2]<0){D[0]=-D[2];D[2]=0}if(D[3]<0){D[1]=-D[3];D[3]=0}}for(B in C){if(C.hasOwnProperty(B)&&A.stopsRE.test(B)){H={offset:parseInt(B,10),color:Ext.draw.Color.toHex(C[B].color)||"#ffffff",opacity:C[B].opacity||1};F.push(H)}}Ext.Array.sort(F,A.sorter);if(J=="linear"){return{id:G.id,type:J,vector:D,stops:F}}else{return{id:G.id,type:J,centerX:G.centerX,centerY:G.centerY,focalX:G.focalX,focalY:G.focalY,radius:G.radius,vector:D,stops:F}}}});