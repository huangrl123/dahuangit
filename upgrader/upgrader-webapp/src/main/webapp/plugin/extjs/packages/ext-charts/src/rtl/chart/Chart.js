Ext.define("Ext.rtl.chart.Chart",{override:"Ext.chart.Chart",initSurfaceCfg:function(A){this.callParent(arguments);A.forceLtr=true},configureAxisStyles:function(A){var B;if(this.getInherited().rtl){B=A.axisLabelLeftStyle;A.axisLabelLeftStyle=A.axisLabelRightStyle;A.axisLabelRightStyle=B;B=A.axisTitleLeftStyle;A.axisTitleLeftStyle=A.axisTitleRightStyle;A.axisTitleRightStyle=B}},beforeRender:function(){var C=this,A=C.axes,E,B,D,F;if(C.getInherited().rtl){C.rtlEvent=!C.isOppositeRootDirection();E=A.getRange();A.removeAll();for(B=0,D=E.length;B<D;++B){F=E[B];F.position=this.invertPosition(F.position);A.add(F)}}C.callParent(arguments)},invertPosition:function(B){if(Ext.isArray(B)){var C=[],D=B.length,A;for(A=0;A<D;++A){C.push(this.invertPosition(B[A]))}return C}if(this.getInherited().rtl){if(B=="left"){B="right"}else{if(B=="right"){B="left"}}}return B},getEventXY:function(A){var E,B,D,F,C;if(this.rtlEvent){E=this.surface.getRegion();B=A.getXY();C=E.right-E.left;D=C-(B[0]-E.left);F=B[1]-E.top;return[D,F]}else{return this.callParent(arguments)}}});