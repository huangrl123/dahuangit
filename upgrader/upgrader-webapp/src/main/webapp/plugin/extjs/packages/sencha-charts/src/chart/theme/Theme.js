Ext.define("Ext.chart.theme.Theme",(function(){(function(){Ext.chart=Ext.chart||{};Ext.chart.theme=function(Q,F){Q=Q||{};var P=0,I=Ext.Date.now(),E,O,C,B,H,L,G,D,A=[],K,J;if(Q.baseColor){K=Ext.draw.Color.fromString(Q.baseColor);J=K.getHSL()[2];if(J<0.15){K=K.getLighter(0.3)}else{if(J<0.3){K=K.getLighter(0.15)}else{if(J>0.85){K=K.getDarker(0.3)}else{if(J>0.7){K=K.getDarker(0.15)}}}}Q.colors=[K.getDarker(0.3).toString(),K.getDarker(0.15).toString(),K.toString(),K.getLighter(0.12).toString(),K.getLighter(0.24).toString(),K.getLighter(0.31).toString()];delete Q.baseColor}if(Q.colors){O=Q.colors;F.colors=Ext.Array.clone(O);B=F.seriesThemes;B.fillStyle=Ext.Array.clone(O);H=F.markerThemes;H.fillStyle=Ext.Array.clone(O)}for(D in F){if(D in Q){if(Ext.isObject(Q[D])&&Ext.isObject(F[D])){Ext.apply(F[D],Q[D])}else{F[D]=Q[D]}}}var M=Q.axisLabel||Q.axisLabelTop||Q.axisLabelRight||Q.axisLabelBottom||Q.axisLabelLeft,N=Q.axisTitle||Q.axisTitleTop||Q.axisTitleBottom;if(M){F.axisLabel=Ext.apply({},M)}if(N){F.axisTitle=Ext.apply({},N)}if(Q.useGradients){O=F.colors||(function(){var R=[];for(P=0,B=F.seriesThemes,E=B.length;P<E;P++){R.push(B[P].fill||B[P].stroke)}return R}());for(P=0,E=O.length;P<E;P++){K=Ext.draw.Color.fromString(O[P]);if(K){C=K.getDarker(0.1).toString();K=K.toString();D="theme-"+K.substr(1)+"-"+C.substr(1)+"-"+I;A.push({id:D,angle:45,stops:{0:{color:K.toString()},100:{color:C.toString()}}});O[P]="url(#"+D+")"}}F.gradients=A;F.colors=O}Ext.apply(this,F)}}());return{mixinId:"themeManager",requires:["Ext.draw.Color"],defaultTheme:"Base",initTheme:function(F){var E=this,B=Ext.chart.theme,A,C,D;if(F){F=F.split(":");for(A in B){if(A==F[0]){C=(F[1]=="gradients");D=new B[A]({useGradients:C});return D}}Ext.Logger.error('No theme found named "'+F+'"')}return D}}})());