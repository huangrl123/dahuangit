Ext.define("Ext.data.proxy.Memory",{extend:"Ext.data.proxy.Client",alias:"proxy.memory",alternateClassName:"Ext.data.MemoryProxy",isMemoryProxy:true,config:{enablePaging:false,data:null},finishOperation:function(C){var A=0,B=C.getRecords(),D=B.length;for(A;A<D;A++){B[A].commit()}C.setSuccessful(true)},create:function(A){this.finishOperation(A)},update:function(A){this.finishOperation(A)},erase:function(A){this.finishOperation(A)},read:function(F){var G=this,B=G.getReader().read(G.getData()),E=B.getRecords(),C=F.getSorters(),D=F.getGrouper(),I=F.getFilters(),H=F.getStart(),A=F.getLimit();if(F.process(B,null,null,false)!==false){if(I&&I.length){B.setRecords(E=Ext.Array.filter(E,Ext.util.Filter.createFilterFn(I)));B.setTotal(E.length)}if(D){C=C?C.concat(D):C}if(C&&C.length){B.setRecords(E=Ext.Array.sort(E,Ext.util.Sortable.createComparator(C)))}if(G.getEnablePaging()&&H!==undefined&&A!==undefined){if(H>=B.getTotal()){B.setConfig({success:false,records:[],total:0})}else{B.setRecords(Ext.Array.slice(E,H,H+A))}}F.setCompleted()}},clear:Ext.emptyFn});