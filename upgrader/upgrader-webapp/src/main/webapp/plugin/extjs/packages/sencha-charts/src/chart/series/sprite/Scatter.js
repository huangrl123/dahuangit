Ext.define("Ext.chart.series.sprite.Scatter",{alias:"sprite.scatterSeries",extend:"Ext.chart.series.sprite.Cartesian",renderClipped:function(N,I,U,O){if(this.cleanRedraw){return}var H=this,F=H.attr,X=F.dataX,M=F.dataY,A=F.labels,D=A&&H.getBoundMarker("labels"),J=H.attr.matrix,P=J.getXX(),E=J.getYY(),K=J.getDX(),S=J.getDY(),V={},Q,T=O[0]-P,G=O[0]+O[2]+P,R=O[1]-E,B=O[1]+O[3]+E,C,W;for(var L=0;L<X.length;L++){C=X[L];W=M[L];C=C*P+K;W=W*E+S;if(T<=C&&C<=G&&R<=W&&W<=B){if(F.renderer){V={type:"items",translationX:C,translationY:W};Q=F.renderer.call(H,H,V,{store:H.getStore()},L);V=Ext.apply(V,Q)}else{V.translationX=C;V.translationY=W}H.putMarker("items",V,L,!F.renderer);if(D&&A[L]){H.drawLabel(A[L],C,W,L,O)}}}},drawLabel:function(L,W,A,I,J){var G=this,E=G.attr,T=G.getBoundMarker("labels")[0],F=T.getTemplate(),C=G.labelCfg||(G.labelCfg={}),D=G.surfaceMatrix,R,H,M=E.labelOverflowPadding,S=E.flipXY,Q=S?J[1]:J[0],P=S?J[0]:J[1],N=S?J[3]:J[2],U=S?J[2]:J[3],O,V,B,K;C.text=L;B=G.getMarkerBBox("labels",I,true);if(!B){G.putMarker("labels",C,I);B=G.getMarkerBBox("labels",I,true)}if(S){C.rotationRads=Math.PI*0.5}else{C.rotationRads=0}O=B.width/2;V=B.height/2;R=W;switch(F.attr.display){case"under":H=A-V-M;break;case"rotate":R+=M;H=A-M;C.rotationRads=-Math.PI/4;break;default:H=A+V+M}if(R<=Q+O){R=Q+O}else{if(R>=N-O){R=N-O}}if(H<=P+V){H=P+V}else{if(H>=U-V){H=U-V}}C.x=D.x(R,H);C.y=D.y(R,H);if(F.attr.renderer){K=F.attr.renderer.call(G,L,T,C,{store:G.getStore()},I);if(typeof K==="string"){C.text=K}else{Ext.apply(C,K)}}G.putMarker("labels",C,I)}});