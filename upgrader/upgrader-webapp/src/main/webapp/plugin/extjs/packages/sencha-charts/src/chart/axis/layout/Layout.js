Ext.define("Ext.chart.axis.layout.Layout",{mixins:{observable:"Ext.mixin.Observable"},config:{axis:null},constructor:function(A){this.mixins.observable.constructor.call(this,A)},processData:function(E){var C=this,G=C.getAxis(),F=G.getDirection(),A=G.boundSeries,B,D;if(E){E["coordinate"+F]()}else{for(B=0,D=A.length;B<D;B++){A[B]["coordinate"+F]()}}},calculateMajorTicks:function(F){var G=this,E=F.attr,I=E.max-E.min,C=I/Math.max(1,E.length)*(E.visibleMax-E.visibleMin),H=E.min+I*E.visibleMin,A=E.min+I*E.visibleMax,D=E.estStepSize*C,B=G.snapEnds(F,E.min,E.max,D);if(B){G.trimByRange(F,B,H,A);F.majorTicks=B}},calculateMinorTicks:function(A){if(this.snapMinorEnds){A.minorTicks=this.snapMinorEnds(A)}},calculateLayout:function(A){var B=this,C=A.attr;if(C.length===0){return null}if(C.majorTicks){B.calculateMajorTicks(A);if(C.minorTicks){B.calculateMinorTicks(A)}}},snapEnds:Ext.emptyFn,trimByRange:function(B,A,G,I){var F=B.segmenter,J=A.unit,E=F.diff(A.from,G,J),H=F.diff(A.from,I,J),D=Math.max(0,Math.ceil(E/A.step)),C=Math.min(A.steps,Math.floor(H/A.step));if(C<A.steps){A.to=F.add(A.from,C*A.step,J)}if(A.max>I){A.max=A.to}if(A.from<G){A.from=F.add(A.from,D*A.step,J);while(A.from<G){D++;A.from=F.add(A.from,A.step,J)}}if(A.min<G){A.min=A.from}A.steps=C-D}});