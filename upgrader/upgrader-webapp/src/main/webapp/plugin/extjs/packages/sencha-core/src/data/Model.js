Ext.define("Ext.data.Model",{alternateClassName:"Ext.data.Record",requires:["Ext.data.ErrorCollection","Ext.data.operation.*","Ext.data.field.*","Ext.data.validator.Validator","Ext.data.schema.Schema","Ext.data.identifier.Generator","Ext.data.identifier.Sequential"],uses:["Ext.data.Validation"],isEntity:true,isModel:true,validIdRe:null,observableType:"record",constructor:function(D,H){var K=this,E=K.self,C=E.identifier,N=Ext.data.Model,A=N.identifier,I=K.idField.name,B,J,M,F,L,G,O;K.data=D||(D={});K.session=H||null;K.internalId=F=A.generate();if(H&&!H.isSession){Ext.Error.raise('Bad Model constructor argument 2 - "session" is not a Session')}if((B=D) instanceof Array){K.data=D={};O=K.getFields();L=Math.min(O.length,B.length);for(G=0;G<L;++G){D[O[G].name]=B[G]}}if(!(M=E.initializeFn)){E.initializeFn=M=N.makeInitializeFn(E)}if(!M.$nullFn){E.initializeFn(K)}if(!(K.id=J=D[I])&&J!==0){if(H){C=H.getIdentifier(E);J=C.generate()}else{if(A===C){J=F}else{J=C.generate()}}D[I]=K.id=J;K.phantom=true}if(H){H.add(K)}if(K.init&&Ext.isFunction(K.init)){K.init()}},editing:false,dirty:false,session:null,dropped:false,erased:false,clientIdProperty:null,evented:false,phantom:false,idProperty:"id",identifier:null,previousValues:undefined,proxy:undefined,schema:"default",versionProperty:null,generation:1,validationSeparator:null,convertOnSet:true,beginEdit:function(){var B=this,A=B.modified,C=B.previousValues;if(!B.editing){B.editing=true;B.editMemento={dirty:B.dirty,data:Ext.apply({},B.data),generation:B.generation,modified:A&&Ext.apply({},A),previousValues:C&&Ext.apply({},C)}}},cancelEdit:function(){var A=this,B=A.editMemento;if(B){A.editing=false;Ext.apply(A,B);A.editMemento=null}},endEdit:function(D,C){var B=this,A=B.editMemento;if(A){B.editing=false;B.editMemento=null;B.previousValues=A.previousValues;if(!D){if(!C){C=B.getModifiedFieldNames(A.data)}if(B.dirty||(C&&C.length)){B.callJoined("afterEdit",[C])}}}},getField:function(A){return this.self.getField(A)},getFields:function(){return this.self.getFields()},getFieldsMap:function(){return this.fieldsMap},getIdProperty:function(){return this.idProperty},getId:function(){return this.id},getObservableId:function(){return this.internalId},setId:function(A){this.set(this.idProperty,A)},getPrevious:function(A){var B=this.previousValues;return B&&B[A]},isModified:function(B){var A=this.modified;return !!(A&&A.hasOwnProperty(B))},getModified:function(B){var A;if(this.isModified(B)){A=this.modified[B]}return A},get:function(A){return this.data[A]},_singleProp:{},_rejectOptions:{convert:false,commit:true,silent:true},set:function(f,J,G){var L=this,V=L.self,c=L.data,U=L.modified,H=L.previousValues,P=L.session,F=Ext.isString(f),d=(F?G:J),K=d?d.convert!==false:L.convertOnSet,B=L.fieldsMap,N=d&&d.silent,M=d&&d.commit,D=!(d&&d.refs===false)&&P,R=!(d&&d.dirty===false&&!M),j=null,a,g,E,A,h,C,W,Y,X,e,I=0,Z,b,O,Q,T,S;if(F){S=L._singleProp;S[f]=J}else{S=f}if(!(O=V.rankedFields)){O=V.rankFields()}Z=O.length;do{for(h in S){T=S[h];a=c[h];W=L;g=B[h];if(g){if(K&&g.convert){T=g.convert(T,L)}W=g;Q=g.reference}else{Q=null}if(W.isEqual(a,T)){continue}c[h]=T;(j||(j=[])).push(h);(H||(L.previousValues=H={}))[h]=a;if(Q&&Q.cls){if(D){P.updateReference(L,g,T,a)}Q.onValueChange(L,P,T,a)}e=(X=g&&g.dependents)&&X.length;while(e-->0){(Y=X[e]).dirty=true;I=I?Math.min(I,Y.rank):Y.rank}if(!g||g.persist){if(U&&U.hasOwnProperty(h)){if(!R||W.isEqual(U[h],T)){delete U[h];L.dirty=-1}}else{if(R){if(!U){L.modified=U={}}L.dirty=true;U[h]=a}}}if(h===L.idField.name){E=true;C=a;b=T}}if(!I){break}g=O[I-1];g.dirty=false;if(F){delete S[f]}else{S=L._singleProp;F=true}f=g.name;S[f]=c[f];K=true;for(;I<Z;++I){if(O[I].dirty){break}}if(I<Z){++I}else{I=0}}while(1);if(L.dirty<0){L.dirty=false;for(A in U){if(U.hasOwnProperty(A)){L.dirty=true;break}}}if(F){delete S[f]}++L.generation;if(E){L.id=b;L.callJoined("onIdChanged",[C,b])}if(M){L.commit(N,j)}else{if(!N&&!L.editing&&j){L.callJoined("afterEdit",[j])}}return j},reject:function(C){var B=this,A=B.modified;if(A){B.set(A,B._rejectOptions)}B.clearState();if(!C){B.callJoined("afterReject")}},commit:function(D,B){var A=this,C;A.clearState();A.phantom=false;if(A.dropped){A.erased=C=true}if(!D){if(C){A.callJoined("afterErase")}else{A.callJoined("afterCommit",[B])}}},clearState:function(){var A=this;A.dirty=A.editing=false;A.editMemento=A.modified=null},drop:function(A){this.dropped=true;this.callJoined("afterDrop")},join:function(C){var A=this,B=A.joined;if(!B){B=A.joined=[C]}else{if(!B.length){B[0]=C}else{Ext.Array.include(B,C)}}if(C.isStore){A.store=A.store||C}},unjoin:function(D){var A=this,C=A.joined,E=C.length,F=A.store,B;if(C.length===1&&C[0]===D){C.length=0}else{if(E){Ext.Array.remove(C,D)}}if(F===D){F=null;for(B=0,E=C.length;B<E;++B){D=C[B];if(D.isStore){F=D;break}}A.store=F}},clone:function(A){var C=this,B=C.modified,D=C.copy(C.id,A);if(B){D.modified=Ext.apply({},B)}D.dirty=C.dirty;D.dropped=C.dropped;D.phantom=C.phantom;return D},copy:function(B,A){var C=this,F=Ext.apply({},C.data),E=C.idProperty,D=C.self;if(B||B===0){F[E]=B}else{if(B===null){delete F[E]}}return new D(F,A)},getProxy:function(){return this.self.getProxy()},getValidation:function(C){var A=this,B=A.validation;if(!B){A.validation=B=new Ext.data.Validation();B.attach(A)}if(C===true||(C!==false&&B.syncGeneration!==A.generation)){B.refresh(C)}return B},validate:function(){return new Ext.data.ErrorCollection().init(this)},isValid:function(){var A=this.getValidation();return !A.dirty},erase:function(A){this.drop();return this.save(A)},setErased:function(){this.erased=true;this.callJoined("afterErase")},getChanges:function(){return this.getData(this._getChangesOptions)},getCriticalFields:function(){var A=this.self,B=A.criticalFields;if(!B){A.rankFields();B=A.criticalFields}return B},getAssociatedData:function(A){var G=this,E=G.associations,F,K,I,C,J,H,D,B;A=A||{};G.$gathering=1;for(B in E){D=E[B];K=D.getAssociatedItem(G);if(!K||K.$gathering){continue}if(K.isStore){K.$gathering=1;I=K.getData().items;J=I.length;C=[];for(F=0;F<J;++F){H=I[F];H.$gathering=1;C.push(H.getData(!H.$gathering));delete H.$gathering}delete K.$gathering}else{C=K.getData(true)}A[B]=C}delete G.$gathering;return A},getData:function(K){var E=this,N={},J=(K===true)?E._getAssociatedOptions:(K||N),L=E.data,Q=J.associated,H=J.changes,C=H&&J.critical,I=H?E.modified:L,B=E.fieldsMap,F=J.persist,G=J.serialize,P,A,D,O,M;if(I){for(O in I){M=L[O];A=B[O];if(A){if(F&&!A.persist){continue}if(G&&A.serialize){M=A.serialize(M,E)}}N[O]=M}}if(C){P=E.self.criticalFields||E.getCriticalFields();for(D=P.length;D-->0;){O=(A=P[D]).name;if(!(O in N)){M=L[O];if(G&&A.serialize){M=A.serialize(M,E)}N[O]=M}}}if(Q){E.getAssociatedData(N)}return N},getTransientFields:function(){var A=this.self,B=A.transientFields;if(!B){A.rankFields();B=A.transientFields}return B},isLoading:function(){return !!this.loadOperation},abort:function(){var A=this.loadOperation;if(A){A.abort()}},load:function(E){E=Ext.apply({},E);var G=this,C=E.scope||G,B=G.getProxy(),A=E.callback,D=G.loadOperation,F=G.getId(),H;if(D){H=D.extraCalls;if(!H){H=D.extraCalls=[]}H.push(E);return D}if(G.phantom){Ext.Error.raise("Cannot load phantom model")}E.id=F;E.recordCreator=function(L,I,K){var J=G.session;K.recordCreator=J?J.recordCreator:null;G.set(L,G._commitOptions);if(G.getId()!==F){Ext.Error.raise("Invalid record id returned for "+F+"@"+G.entityName)}return G};E.internalCallback=function(K){var I=K.wasSuccessful()&&K.getRecords().length>0,O=G.loadOperation,P=O.extraCalls,L=[G,K],J=[G,K,I],M,N;G.loadOperation=null;if(I){Ext.callback(E.success,C,L)}else{Ext.callback(E.failure,C,L)}Ext.callback(A,C,J);if(P){for(M=0,N=P.length;M<N;++M){E=P[M];if(I){Ext.callback(E.success,C,L)}else{Ext.callback(E.failure,C,L)}Ext.callback(E.callback,C,J)}}G.callJoined("afterLoad")};delete E.callback;G.loadOperation=D=B.createOperation("read",E);D.execute();return D},save:function(E){E=Ext.apply({},E);var G=this,F=G.phantom,H=G.dropped,I=H?"destroy":(F?"create":"update"),C=E.scope||G,A=E.callback,B=G.getProxy(),D;E.records=[G];E.internalCallback=function(K){var L=[G,K],J=K.wasSuccessful();if(J){Ext.callback(E.success,C,L)}else{Ext.callback(E.failure,C,L)}L.push(J);Ext.callback(A,C,L)};delete E.callback;D=B.createOperation(I,E);if(H&&F){D.setResultSet(Ext.data.reader.Reader.prototype.nullResultSet);G.setErased();D.setSuccessful(true)}else{D.execute()}return D},inheritableStatics:{addFields:function(A){this.replaceFields(A)},replaceFields:function(L,F){var I=this,H=I.prototype,B=Ext.data.field.Field,M=I.fields,D=I.fieldsMap,G=I.fieldOrdinals,A,E,N,J,K,C;if(F===true){M.length=0;I.fieldsMap=D={};I.fieldOrdinals=G={}}else{if(F){for(E=F.length;E-->0;){K=F[E];if(K in G){delete G[K];delete D[K]}}for(E=0,J=M.length;E<J;++E){K=(A=M[E]).name;if(K in G){G[K]=E}else{M.splice(E,1);--E;--J}}}}for(E=0,J=L?L.length:0;E<J;E++){K=(A=L[E]).name;if(!(K in G)){G[K]=C=M.length;M.push(A=B.create(A));D[K]=A;A.ordinal=C;A.definedBy=A.owner=this}}I.idField=H.idField=N=D[H.idProperty];N.allowNull=N.critical=N.identifier=true;N.defaultValue=null;I.initializeFn=I.rankedFields=I.transientFields=I.criticalFields=null},removeFields:function(A){this.replaceFields(null,A)},getIdFromData:function(C){var B=this,A=B.idField;id=A.calculated?(new B(C)).id:C[A.name];return id},createWithId:function(E,C,A){var B=C,D=this;if(E||E===0){B={};if(C){Ext.apply(B,C)}B[D.idField.name]=E}return new D(B,A)},getFields:function(){return this.fields},getFieldsMap:function(){return this.fieldsMap},getField:function(A){return this.fieldsMap[A]||null},getProxy:function(){var B=this,A=B.proxy,C;if(!A){A=B.proxyConfig;if(!A||!A.isProxy){C=B.schema.constructProxy(B);A=A?Ext.merge(C,A):C}A=B.setProxy(A)}return A},setProxy:function(A){var B=this,C;if(A){if(!A.isProxy){A=Ext.Factory.proxy(A)}else{C=A.getModel();if(C&&C!==B){A=A.clone()}}A.setModel(B)}return(B.prototype.proxy=B.proxy=A)},load:function(D,C,A){var B=new this({id:D},A);B.load(C);return B}},deprecated:{5:{methods:{hasId:null,markDirty:null,setDirty:null,eachStore:function(A,F){var D=this,B=D.stores,E=B.length,C;for(C=0;C<E;++C){A.call(F,B[C])}},join:function(C){var A=this,D=A.stores,B=A.joined;if(!B){B=A.joined=[C]}else{B.push(C)}if(C.isStore){A.store=A.store||C;if(!D){D=A.stores=[]}D.push(C)}},unjoin:function(C){var A=this,D=A.stores,B=A.joined;if(B.length===1){B.length=0}else{Ext.Array.remove(B,C)}if(C.isStore){Ext.Array.remove(D,C);A.store=D[0]||null}}},properties:{persistenceProperty:null},inheritableStatics:{methods:{setFields:null}}}},privates:{_commitOptions:{commit:true},_getChangesOptions:{changes:true},_getAssociatedOptions:{associated:true},copyFrom:function(B){var I=this,K=I.fields,E=K.length,J=[],F,D=0,H,L,G=I.idProperty,A,C;if(B){H=I.data;L=B.data;for(;D<E;D++){F=K[D];A=F.name;if(A!=G){C=L[A];if(C!==undefined&&!I.isEqual(H[A],C)){H[A]=C;J.push(A)}}}if(I.phantom&&!B.phantom){I.beginEdit();I.setId(B.getId());I.endEdit(true);I.commit(true)}}return J},callJoined:function(E,A){var G=this,B=G.joined,D=G.session,C,H,F,I;if(!B&&!D){return}if(A){A.unshift(G)}else{A=[G]}if(D&&(F=D[E])){F.apply(D,A)}if(B){for(C=0,H=B.length;C<H;++C){I=B[C];if(I&&(F=I[E])){F.apply(I,A)}}}},setSession:function(A){if(A){if(this.session){Ext.Error.raise("This model already belongs to a session.")}if(!this.id){Ext.Error.raise("The model must have an id to participate in a session.")}}this.session=A;if(A){A.add(this)}},getModifiedFieldNames:function(D){var E=this,F=E.data,B=[],C=D||E.editMemento.data,A;for(A in F){if(F.hasOwnProperty(A)){if(!E.isEqual(F[A],C[A],A)){B.push(A)}}}return B},isEqual:function(C,A,B){var D;if(B){D=B.isField?B:this.fieldsMap[B];if(D){return D.compare(C,A)===0}}if(C instanceof Date&&A instanceof Date){return C.getTime()===A.getTime()}return C===A},statics:{EDIT:"edit",REJECT:"reject",COMMIT:"commit",rankFields:function(){var C=this,B=C.prototype,I=C.fields,D=I.length,G=[],J=[],H=[],A,F,E;C.rankedFields=B.rankedFields=G;C.criticalFields=B.criticalFields=J;C.transientFields=B.transientFields=H;for(E=0;E<D;++E){F=I[E];if(F.critical){J.push(F)}if(!F.persist){H.push(F)}if(F.evil){(A||(A=[])).push(F)}else{if(!F.depends){G.push(F);F.rank=G.length}}}for(E=0;E<D;++E){if(!(F=I[E]).rank&&!F.evil){C.topoAdd(F)}}if(A){for(E=0,D=A.length;E<D;++E){G.push(F=A[E]);F.rank=G.length}}C.topoStack=null;return G},topoAdd:function(G){var C=this,D=G.depends,F=D?D.length:0,H=C.rankedFields,E,B;var A=C.topoStack||(C.topoStack=[]);A.push(G.name);if(G.rank===0){Ext.Error.raise(C.$className+" has circular field dependencies: "+A.join(" --> "))}if(A.length&&G.evil){Ext.Error.raise(C.$className+": Field "+A[A.length-1]+" cannot depend on depends-less field "+G.name)}G.rank=0;for(E=0;E<F;++E){B=C.fieldsMap[D[E]];if(!B){Ext.Error.raise(C.$className+": Field "+G.name+" depends on undefined field "+D[E])}(B.dependents||(B.dependents=[])).push(G);if(!B.rank){C.topoAdd(B)}}H.push(G);G.rank=H.length;A.pop()},initFields:function(Q,F,E){var N=Ext.data.field.Field,J=Q.fields,O=[],M={},D={},T=[],K=E.fields,H=Q.versionProperty||E.versionProperty,R=Q.idProperty||E.idProperty,L,C,G,A,S,P,B;F.fields=E.fields=O;F.fieldOrdinals=E.fieldOrdinals=M;F.fieldsMap=E.fieldsMap=D;F.references=E.references=T;if(K){for(G=0,A=K.length;G<A;++G){O[G]=C=Ext.Object.chain(K[G]);C.dependents=null;C.owner=F;M[S=C.name]=G;D[S]=C}}if(J){var I;if(K){I=Ext.Array.toMap(K,"name")}delete Q.fields;for(G=0,A=J.length;G<A;++G){C=J[G];B=C.reference;if(B&&typeof B!=="string"){B=Ext.merge({},B)}C.$reference=B;C=N.create(J[G]);S=C.name;if(K&&S in I){Ext.log.warn('Redefining field "'+S+'" in '+F.$className)}P=M[S];if(P===undefined){M[S]=P=O.length}D[S]=C;O[P]=C;C.definedBy=C.owner=F;C.ordinal=P;if(S===H){C.critical=true}}}if(!(L=D[R])){L=new N(R);P=O.length;O[P]=L;M[R]=P;D[R]=L;L.definedBy=F;L.ordinal=P}L.allowNull=L.critical=L.identifier=true;L.defaultValue=null;F.idField=E.idField=L},initAssociations:function(A,C,H){var F=C.associations,G=C.belongsTo,E=C.hasMany,J=C.hasOne,B=C.manyToMany,I,K,D;if(C.belongsTo){Ext.log.warn('Use of "belongsTo" is obsolete'+(H.$className?" in "+H.$className:""));delete C.belongsTo}delete C.manyToMany;if(B){A.addMatrices(H,B)}delete C.associations;delete C.belongsTo;delete C.hasMany;delete C.hasOne;if(F){F=Ext.isArray(F)?F:[F];for(I=0,K=F.length;I<K;++I){D=F[I];switch(D.type){case"belongsTo":A.addLegacyBelongsTo(H,D);break;case"hasMany":A.addLegacyHasMany(H,D);break;case"hasOne":A.addLegacyHasOne(H,D);break;default:Ext.Error.raise('Invalid association type: "'+D.type+'"')}}}if(G){G=Ext.isArray(G)?G:[G];for(I=0,K=G.length;I<K;++I){A.addLegacyBelongsTo(H,G[I])}}if(E){E=Ext.isArray(E)?E:[E];for(I=0,K=E.length;I<K;++I){A.addLegacyHasMany(H,E[I])}}if(J){J=Ext.isArray(J)?J:[J];for(I=0,K=J.length;I<K;++I){A.addLegacyHasOne(H,J[I])}}A.afterLegacyAssociations(H)},initIdentifier:function(F,B,C){var A=F.identifier||F.idgen,E=C.identifier||B.schema._defaultIdentifier,D;if(F.idgen){Ext.log.warn("Ext.data.Model: idgen has been deprecated. Please use identifier instead.")}if(A){delete F.identifier;delete F.idgen;A=Ext.Factory.dataIdentifier(A)}else{if(E){if(E.clone&&!E.getId()){A=E.clone()}else{if(E.isGenerator){A=E}else{A=Ext.Factory.dataIdentifier(E)}}}}B.identifier=C.identifier=A;if(!A){D=B.entityName;if(!D){D=Ext.id(null,"extModel")}B.identifier=Ext.Factory.dataIdentifier({type:"sequential",prefix:D+"-"})}},findValidator:function(E,A,H){var G=H.type||H,D=E[A],F,C,B;if(D){for(C=0,F=D.length;C<F;++C){B=D[C];if(B.type===G){return B}}}return null},initValidators:function(O,E,D){var N=Ext.data.validator.Validator,G=D.validators,I,B,J,P,H,A,M,F,K,Q,C,L;if(G){I={};for(B in G){if(G.hasOwnProperty(B)){K=G[B];J=[];for(H=0,A=K.length;H<A;++H){J[H]=K[H].clone()}I[B]=J}}}P=O.validators||O.validations;if(O.validations){delete O.validations;Ext.log.warn((E.$className||"Ext.data.Model")+": validations has been deprecated. Please use validators instead.")}if(P){delete O.validators;I=I||{};if(Ext.isArray(P)){J={};for(H=0,A=P.length;H<A;++H){C=P[H];Q=C.field;if(!J[Q]){J[Q]=[]}C=C.fn||C;J[Q].push(C)}P=J}for(Q in P){if(P.hasOwnProperty(Q)){C=P[Q];if(!Ext.isArray(C)){C=[C]}for(H=0,A=C.length;H<A;++H){F=C[H];L=typeof F;if(L==="function"){F=new N(F)}else{if(G){M=this.findValidator(I,Q,F)}if(L==="string"){if(!M){F=N.create({type:F})}else{F=null}}else{if(!M){F=N.create(F)}else{M.setConfig(F);F=null}}}if(F){K=I[Q];if(!K){K=I[Q]=[]}K.push(F)}}}}}E.validators=D.validators=I},makeInitializeFn:function(E){var H=["var "],J=["\nreturn function (e) {\n    var data = e.data, v;\n"],P=[],O=0,A,D,G,K,F,I,N,B,C,L,M;if(!(N=E.rankedFields)){N=E.rankFields()}for(L=0,M=N.length;L<M;++L){I=N[L];P[L]=B="f"+L;G=I.convert;if(L){H.push(",  \n    ")}H.push(B," = $fields["+L+"]");H.push("  /*  ",I.name,"  */");if((C=(I.defaultValue!==undefined))||G){K='data["'+I.name+'"]';++O;A=D="";if(I.cloneDefaultValue){A="Ext.clone(";D=")"}J.push("\n");if(G&&C){J.push("    v = ",K,";\n    if (v !== undefined) {\n        v = ",B,".convert(v, e);\n    }\n    if (v === undefined) {\n        v = ",A,B,".defaultValue",D,";\n    }\n    ",K," = v;")}else{if(G){J.push("    v = ",B,".convert(",K,",e);\n    if (v !== undefined) {\n        ",K," = v;\n    }\n")}else{if(C){J.push("    if (",K," === undefined) {\n        ",K," = ",A,B,".defaultValue",D,";\n    }\n")}}}}}if(!O){return Ext.emptyFn}H.push(";\n");H.push.apply(H,J);H.push("}");H=H.join("");F=new Function("$fields",H);return F(N)}}}},function(){var A=this,C=A.prototype,B=Ext.data.schema.Schema,D;A.proxyConfig=C.proxy;delete C.proxy;A.schema=C.schema=B.get(C.schema);C.idField=new Ext.data.field.Field(C.idProperty);A.identifier=new Ext.data.identifier.Sequential();A.onExtended(function(I,H){var K=I.prototype,L=H.schema,J=K.superclass.self,E,F,G;I.idProperty=K.idProperty;if(L){delete H.schema;E=B.get(L)}else{if(!(E=K.schema)){E=D||(D=B.get("default"))}}I.rankFields=A.rankFields;I.topoAdd=A.topoAdd;K.schema=I.schema=E;if(!(F=H.entityName)){K.entityName=F=E.getEntityName(I);if(!F){if(H.associations){Ext.Error.raise('Anonymous entities cannot specify "associations"')}if(H.belongsTo){Ext.Error.raise('Anonymous entities cannot specify "belongsTo"')}if(H.hasMany){Ext.Error.raise('Anonymous entities cannot specify "hasMany"')}if(H.hasOne){Ext.Error.raise('Anonymous entities cannot specify "hasOne"')}if(H.matrices){Ext.Error.raise('Anonymous entities cannot specify "manyToMany"')}}}I.entityName=F;I.fieldExtractors={};A.initIdentifier(H,I,K);A.initFields(H,I,K);I.fields.items=I.fields;if(F){E.addEntity(I);A.initAssociations(E,H,I)}A.initValidators(H,I,K);G=H.proxy;if(G){delete H.proxy}else{G=J.proxyConfig||J.proxy}I.proxyConfig=G})});