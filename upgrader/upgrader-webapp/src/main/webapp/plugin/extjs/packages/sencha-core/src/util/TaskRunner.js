Ext.define("Ext.util.TaskRunner",{interval:10,timerId:null,constructor:function(A){var B=this;if(typeof A=="number"){B.interval=A}else{if(A){Ext.apply(B,A)}}B.tasks=[];B.timerFn=Ext.Function.bind(B.onTick,B)},newTask:function(A){var B=new Ext.util.TaskRunner.Task(A);B.manager=this;return B},start:function(B){var A=this,C=Ext.Date.now();if(!B.pending){A.tasks.push(B);B.pending=true}B.stopped=false;B.taskStartTime=C;B.taskRunTime=B.fireOnStart!==false?0:B.taskStartTime;B.taskRunCount=0;if(!A.firing){if(B.fireOnStart!==false){A.startTimer(0,C)}else{A.startTimer(B.interval,C)}}return B},stop:function(A){if(!A.stopped){A.stopped=true;if(A.onStop){A.onStop.call(A.scope||A,A)}}return A},stopAll:function(){Ext.each(this.tasks,this.stop,this)},firing:false,nextExpires:1e+99,onTick:function(){var L=this,O=L.tasks,A=Ext.Date.now(),D=1e+99,M=O.length,G=Ext.GlobalEvents,C,N,H,E,J,I,F;L.timerId=null;L.firing=true;for(H=0;H<M||H<(M=O.length);++H){E=O[H];if(!(I=E.stopped)){C=E.taskRunTime+E.interval;if(C<=A){J=1;if(E.hasOwnProperty("fireIdleEvent")){F=E.fireIdleEvent}else{F=L.fireIdleEvent}try{J=E.run.apply(E.scope||E,E.args||[++E.taskRunCount])}catch(K){try{Ext.log({msg:K,level:"error"});if(E.onError){J=E.onError.call(E.scope||E,E,K)}}catch(B){}}E.taskRunTime=A;if(J===false||E.taskRunCount===E.repeat){L.stop(E);I=true}else{I=E.stopped;C=A+E.interval}}if(!I&&E.duration&&E.duration<=(A-E.taskStartTime)){L.stop(E);I=true}}if(I){E.pending=false;if(!N){N=O.slice(0,H)}}else{if(N){N.push(E)}if(D>C){D=C}}}if(N){L.tasks=N}L.firing=false;if(L.tasks.length){L.startTimer(D-A,Ext.Date.now())}if(F!==false&&G.hasListeners.idle){G.fireEvent("idle")}},startTimer:function(A,D){var C=this,E=D+A,B=C.timerId;if(B&&C.nextExpires-E>C.interval){clearTimeout(B);B=null}if(!B){if(A<C.interval){A=C.interval}C.timerId=setTimeout(C.timerFn,A);C.nextExpires=E}}},function(){var B=this,A=B.prototype;A.destroy=A.stopAll;B.Task=new Ext.Class({isTask:true,stopped:true,fireOnStart:false,constructor:function(C){Ext.apply(this,C)},restart:function(C){if(C!==undefined){this.interval=C}this.manager.start(this)},start:function(C){if(this.stopped){this.restart(C)}},stop:function(){this.manager.stop(this)}});A=B.Task.prototype;A.destroy=A.stop});