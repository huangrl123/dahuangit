Ext.define("Ext.chart.axis.layout.Discrete",{extend:"Ext.chart.axis.layout.Layout",alias:"axisLayout.discrete",processData:function(){var D=this,G=D.getAxis(),A=G.boundSeries,F=G.getDirection(),B,C,E;this.labels=[];this.labelMap={};for(B=0,C=A.length;B<C;B++){E=A[B];if(E["get"+F+"Axis"]()===G){E["coordinate"+F]()}}G.getSprites()[0].setAttributes({data:this.labels});this.fireEvent("datachange",this.labels)},calculateLayout:function(A){A.data=this.labels;this.callParent([A])},calculateMajorTicks:function(F){var H=this,E=F.attr,D=F.data,J=E.max-E.min,C=J/Math.max(1,E.length)*(E.visibleMax-E.visibleMin),I=E.min+J*E.visibleMin,A=E.min+J*E.visibleMax,G=E.estStepSize*C;var B=H.snapEnds(F,Math.max(0,E.min),Math.min(E.max,D.length-1),G);if(B){H.trimByRange(F,B,I,A);F.majorTicks=B}},snapEnds:function(B,A,F,E){E=Math.ceil(E);var D=Math.floor((F-A)/E),C=B.data;return{min:A,max:F,from:A,to:D*E+A,step:E,steps:D,unit:1,getLabel:function(G){return C[this.from+this.step*G]},get:function(G){return this.from+this.step*G}}},trimByRange:function(B,A,F,H){var I=A.unit,E=Math.ceil((F-A.from)/I)*I,G=Math.floor((H-A.from)/I)*I,D=Math.max(0,Math.ceil(E/A.step)),C=Math.min(A.steps,Math.floor(G/A.step));if(C<A.steps){A.to=C}if(A.max>H){A.max=A.to}if(A.from<F&&A.step>0){A.from=A.from+D*A.step*I;while(A.from<F){D++;A.from+=A.step*I}}if(A.min<F){A.min=A.from}A.steps=C-D},getCoordFor:function(C,D,A,B){this.labels.push(C);return this.labels.length-1}});