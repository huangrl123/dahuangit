Ext.define("Ext.TaskQueue",{requires:"Ext.AnimationQueue",singleton:true,pending:false,mode:true,constructor:function(){this.readQueue=[];this.writeQueue=[];this.run=Ext.Function.bind(this.run,this);this.watch=Ext.Function.bind(this.watch,this);if(Ext.os.is.iOS){setInterval(this.watch,500)}},requestRead:function(A,B,C){this.request(true);this.readQueue.push(arguments)},requestWrite:function(A,B,C){this.request(false);this.writeQueue.push(arguments)},request:function(A){if(!this.pending){this.pendingTime=Date.now();this.pending=true;this.mode=A;if(A){setTimeout(this.run,1)}else{Ext.Function.requestAnimationFrame(this.run)}}},watch:function(){if(this.pending&&Date.now()-this.pendingTime>=500){this.run()}},run:function(){this.pending=false;var F=this.readQueue,C=this.writeQueue,E=null,D;if(this.mode){D=F;if(C.length>0){E=false}}else{D=C;if(F.length>0){E=true}}var J=D.slice(),G,B,A,H,I;D.length=0;for(G=0,B=J.length;G<B;G++){A=J[G];H=A[0];I=A[1];if(typeof H=="string"){H=I[H]}if(A.length>2){H.apply(I,A[2])}else{H.call(I)}}J.length=0;if(E!==null){this.request(E)}}});