Ext.define("Ext.util.Sortable",{isSortable:true,$configPrefixed:false,$configStrict:false,config:{sorters:null},defaultSortDirection:"ASC",requires:["Ext.util.Sorter"],multiSortLimit:3,statics:{createComparator:function(A){return A&&A.length?function(D,E){var F=A[0].sort(D,E),B=A.length,C=1;for(;!F&&C<B;C++){F=A[C].sort.call(this,D,E)}return F}:function(){return 0}}},applySorters:function(A){var B=this,C=B.getSorters()||new Ext.util.MixedCollection(false,Ext.returnId);if(A){C.addAll(B.decodeSorters(A))}return C},sort:function(E,A,B,H){var G=this,C,F,D=G.getSorters();if(!D){G.setSorters(null);D=G.getSorters()}if(Ext.isArray(E)){H=B;B=A}else{if(Ext.isObject(E)){E=[E];H=B;B=A}else{if(Ext.isString(E)){C=D.get(E);if(!C){C={property:E,direction:A}}else{if(A==null){C.toggle()}else{C.setDirection(A)}}E=[C]}}}if(E&&E.length){E=G.decodeSorters(E);switch(B){case"multi":D.insert(0,E[0]);F=D.getCount()-G.multiSortLimit;if(F>0){D.removeRange(G.multiSortLimit,F)}break;case"prepend":D.insert(0,E);break;case"append":D.addAll(E);break;case undefined:case null:case"replace":D.clear();D.addAll(E);break;default:Ext.Error.raise('Sorter insertion point must be "multi", "prepend", "append" or "replace"')}}if(H!==false){G.fireEvent("beforesort",G,E);G.onBeforeSort(E);if(G.getSorterCount()){G.doSort(G.generateComparator())}}return E},getSorterCount:function(){return this.getSorters().items.length},generateComparator:function(){var A=this.getSorters().getRange();return A.length?this.createComparator(A):this.emptyComparator},emptyComparator:function(){return 0},onBeforeSort:Ext.emptyFn,decodeSorters:function(B){if(!Ext.isArray(B)){if(B===undefined){B=[]}else{B=[B]}}var A=B.length,C=Ext.util.Sorter,G=this.getModel?this.getModel():this.model,F,D,E;for(E=0;E<A;E++){D=B[E];if(!(D instanceof C)){if(Ext.isString(D)){D={property:D}}Ext.applyIf(D,{root:this.sortRoot,direction:"ASC"});if(D.fn){D.sorterFn=D.fn}if(typeof D=="function"){D={sorterFn:D}}if(G&&!D.transform){F=G.getField(D.property);D.transform=F&&F.sortType!==Ext.identityFn?F.sortType:undefined}B[E]=new Ext.util.Sorter(D)}}return B},getFirstSorter:function(){var C=this.getSorters().items,D=C.length,B=0,A;for(;B<D;++B){A=C[B];if(!A.isGrouper){return A}}return null}},function(){this.prototype.createComparator=this.createComparator});