Ext.define("Ext.util.Collection",{mixins:["Ext.mixin.Observable"],requires:["Ext.util.CollectionKey","Ext.util.Filter","Ext.util.Sorter","Ext.util.Grouper"],uses:["Ext.util.SorterCollection","Ext.util.FilterCollection","Ext.util.GroupCollection"],isCollection:true,config:{autoFilter:true,autoSort:true,decoder:null,extraKeys:null,filters:null,grouper:null,groups:null,rootProperty:null,sorters:null,multiSortLimit:3,defaultSortDirection:"ASC",source:null},generation:0,indices:null,indexRebuilds:0,updating:0,grouped:false,sorted:false,filtered:false,constructor:function(A){var B=this;B.items=[];B.map={};B.length=0;if(A&&A.keyFn){B.getKey=A.keyFn}B.mixins.observable.constructor.call(B,A)},destroy:function(){var B=this,D=B._filters,A=B._sorters,C=B._groups;if(D){D.destroy();B._filters=null}if(A){A.destroy();B._sorters=null}if(C){C.destroy();B._groups=null}B.setSource(null);B.observers=B.items=B.map=null},add:function(B){var A=this,D=A.decodeItems(arguments,0),C=D;if(D.length){A.splice(A.length,0,D);C=(D.length===1)?D[0]:D}return C},replaceAll:function(){var A=this,B=A.length,D,C;if(B===0){return A.add.apply(A,arguments)}C=A.decodeItems(arguments,0);D=C;if(C.length){A.splice(0,A.length,C);D=(C.length===1)?C[0]:C}else{A.removeAll()}return D},aggregate:function(D,E,B,F,C){var A=this,G=Ext.Array.slice(arguments);G.unshift(A.items);return A.aggregateItems.apply(A,G)},aggregateByGroup:function(C,D,B){var A=this.getGroups();return this.aggregateGroups(A,C,D,B)},aggregateItems:function(N,A,H,L,D,C){var K=this,M=Ext.Number.clipIndices(N.length,[L,D]),O=(L!==0&&D!==N.length),J,E,B,F,G,I,P;L=M[0];D=M[1];if(!Ext.isFunction(H)){H=K._aggregators[H];return H.call(K,N,L,D,A,K.getRootProperty())}F=K.getRootProperty();I=new Array(B);P=O?new Array(B):N;for(J=L,E=0;J<D;++J,E++){if(O){P[E]=G=N[J]}I[E]=(F?G[F]:G)[A]}return H.call(C||K,N,I,0)},aggregateGroups:function(H,C,F,D){var E=H.items,J=E.length,K=!Ext.isFunction(F),A={},I,G,B;for(I=0;I<J;++I){G=E[I];if(!K){B=this.aggregateItems(G.items,C,F,null,null,D)}else{B=G[F](C)}A[G.getGroupKey()]=B}return A},beginUpdate:function(){if(!this.updating++){this.notify("beginupdate")}},clear:function(){var A=this,C=A.generation,B=C?A.items:[];if(C){A.items=[];A.length=0;A.map={};A.indices={};A.generation++}return B},clone:function(){var A=this,B=new A.self(A.initialConfig);B.add(A.items);return B},collect:function(B,E,A){var I=this.items,D=I.length,H={},J=[],G,F,C;for(G=0;G<D;++G){C=I[G];C=(E?C[E]:C)[B];F=String(C);if((A||!Ext.isEmpty(C))&&!H[F]){H[F]=1;J.push(C)}}return J},contains:function(B){var C=false,A;if(B!=null){A=this.getKey(B);C=this.map[A]===B}return C},containsKey:function(A){return A in this.map},createFiltered:function(A,E,I,L,F){var J=this,M=new J.self(J.initialConfig),D=J.getRootProperty(),K=J.items,C,H,N,G,B;if(Ext.isFunction(A)){G=A;B=E}else{if(Ext.isString(A)){N=[new Ext.util.Filter({property:A,value:E,root:D,anyMatch:I,caseSensitive:L,exactMatch:F})]}else{if(A instanceof Ext.util.Filter){N=[A];A.setRoot(D)}else{if(Ext.isArray(A)){N=A.slice(0);for(H=0,C=N.length;H<C;++H){N[H].setRoot(D)}}}}G=Ext.util.Filter.createFilterFn(N)}B=B||J;for(H=0,C=K.length;H<C;H++){if(G.call(B,K[H])){M.add(K[H])}}return M},filterBy:function(A,B){return this.createFiltered(A,B)},each:function(B,E){var C=this.items,D=C.length,A,F;if(D){E=E||this;C=C.slice(0);for(A=0;A<D;A++){F=B.call(E,C[A],A,D);if(F===false){break}}}return F},eachKey:function(D,A){var E=this,G=E.items,F=G.length,B,I,C,H;if(F){A=A||E;G=G.slice(0);for(B=0;B<F;B++){C=E.getKey(I=G[B]);H=D.call(A,C,I,B,F);if(H===false){break}}}return H},endUpdate:function(){if(!--this.updating){this.notify("endupdate")}},find:function(E,D,B,H,F,A){if(Ext.isEmpty(D,false)){return null}var G=Ext.String.createRegex(D,H,F,A),C=this.getRootProperty();return this.findBy(function(I){return I&&G.test((C?I[C]:I)[E])},null,B)},findBy:function(E,B,A){var F=this,H=F.items,G=H.length,C,I,D;B=B||F;for(C=A||0;C<G;C++){D=F.getKey(I=H[C]);if(E.call(B,I,D)){return H[C]}}return null},findIndex:function(E,F,G,C,B,A){var D=this.find(E,F,G,C,B,A);return D?this.indexOf(D):-1},findIndexBy:function(A,C,D){var B=this.findBy(A,C,D);return B?this.indexOf(B):-1},first:function(B){var A=B?this.getGroups():undefined;return A?this.aggregateGroups(A,null,"first"):this.items[0]},last:function(B){var A=B?this.getGroups():undefined;return A?this.aggregateGroups(A,null,"last"):this.items[this.length-1]},get:function(A){return this.map[A]},getAt:function(A){return this.items[A]},getByKey:function(A){return this.map[A]},getCount:function(){return this.length},getKey:function(A){var B=A.id;return(B===0||B)?B:((B=A._id)===0||B)?B:A.getId()},getRange:function(B,D){var C=this.items,A=C.length,E;if(B>D){Ext.Error.raise("Inverted range passed to Collection.getRange: ["+B+","+D+"]")}if(!A){E=[]}else{E=Ext.Number.clipIndices(A,[B,D]);E=C.slice(E[0],E[1])}return E},getValues:function(F,D,A,B){var E=this.items,H=Ext.Number.clipIndices(E.length,[A,B]),I=[],G,C;for(G=H[0],B=H[1];G<B;++G){C=E[G];C=(D?C[D]:C)[F];I.push(C)}return I},indexOf:function(B){if(!B){return -1}var A=this.getKey(B);return this.indexOfKey(A)},indexOfKey:function(B){var C=this,A=C.indices;if(B in C.map){if(!A){A=C.getIndices()}return A[B]}return -1},insert:function(E,C){var A=this,B=A.decodeItems(arguments,1),D=B;if(B.length){A.splice(E,0,B);D=(B.length===1)?B[0]:B}return D},itemChanged:function(C,I,G){var B=this,O=G===0||!!G,F=B.filtered&&B.getAutoFilter(),R=false,U=0,L=B.items,N=B.length-1,Q=B.sorted&&N,H=B.getSource(),E,P=0,D,T=false,K,S=false,A,J,M;if(H&&!H.updating){H.itemChanged(C,G)}else{J=B.getKey(C);if(F){D=B.indexOfKey(O?G:J);S=(D<0);T=B.isItemFiltered(C);R=(S!==T)}if(R){if(T){P=[C];K=-1}else{E=[C];K=B.length}}else{if(Q&&!T){if(!F){D=B.indexOfKey(O?G:J)}M=B.getSortFn();if(D&&M(L[D-1],L[D])>0){U=-1;K=Ext.Array.binarySearch(L,C,0,D,M)}else{if(D<N&&M(L[D],L[D+1])>0){U=1;K=Ext.Array.binarySearch(L,C,D+1,M)}}if(U){E=[C]}}}A={item:C,key:J,index:K,filterChanged:R,keyChanged:O,indexChanged:!!U,filtered:T,oldIndex:D,newIndex:K,wasFiltered:S};if(O){A.oldKey=G}if(I){A.modified=I}B.beginUpdate();B.notify("beforeitemchange",[A]);if(O){B.updateKey(C,G)}if(E||P){B.splice(K,P,E)}if(U>0){A.newIndex--}else{if(U<0){A.oldIndex++}}B.notify("itemchange",[A]);B.endUpdate()}},remove:function(C){var A=this,D=A.decodeRemoveItems(arguments,0),B=A.length;A.splice(0,D);return B-A.length},removeAll:function(){var B=this,A=B.length;if(B.generation&&A){B.splice(0,A)}return B},removeAt:function(B,H){var G=this,E=G.length,D=Ext.Number,I=D.clipIndices(E,[B,(H===undefined)?1:H],D.Clip.COUNT),F=I[0],C=I[1]-F,J=(C===1)&&G.getAt(F),A;G.splice(F,C);A=G.length-E;return(J&&A)?J:A},removeByKey:function(A){var B=this.getByKey(A);if(!B||!this.remove(B)){return false}return B},splice:function(l,I,m){var D=this,Y=D.sorted&&D.getAutoSort(),e=D.map,O=D.items,S=D.length,M=(I instanceof Array)?D.decodeRemoveItems(I):null,H=!M,c=Ext.Number,g=c.clipIndices(S,[l,H?I:0],c.Clip.COUNT),E=g[0],A=g[1],F=A-E,a=D.decodeItems(arguments,2),Z=a?a.length:0,L,J,o,Q=E,K=D.indices||((Z||M)?D.getIndices():null),T=null,V=F?[E]:null,G=null,b=D.getSource(),W,P,C,h,d,U,f,B,N,j,R,X;if(b&&!b.updating){if(H){M=[];for(h=0;h<F;++h){M.push(O[E+h])}}if(E<S){h=b.indexOf(O[E])}else{h=b.length}b.splice(h,M,a);return D}if(Z){L=a;G=[];J={};if(Y){X=D.getSorters();if(Z>1){if(!L.$cloned){a=L=L.slice(0)}D.sortData(L)}}for(h=0;h<Z;++h){B=D.getKey(d=a[h]);if((f=J[B])!==undefined){(R||(R={}))[f]=1}else{U=K[B];if(U<E||A<=U){(V||(V=[])).push(U)}}J[B]=h;G.push(B)}if(R){N=G;L=[];G=[];L.$cloned=true;for(h=0;h<Z;++h){if(!R[h]){d=a[h];L.push(d);G.push(N[h])}}Z=L.length}T={items:L,keys:G}}for(h=M?M.length:0;h-->0;){B=D.getKey(M[h]);if((U=K[B])!==undefined){(V||(V=[])).push(U)}}if(!T&&!V){return D}D.beginUpdate();if(V){W=null;C=[];o={};if(V.length>1){V.sort(Ext.Array.numericSortFn)}for(h=0,j=V.length;h<j;++h){B=D.getKey(d=O[U=V[h]]);if(!(B in e)){continue}delete e[B];if(!W||U>(W.at+P.length)){C.push(W={at:U,items:(P=[]),keys:(N=[]),map:o,next:W,replacement:T});if(T){T.replaced=W}}P.push(o[B]=d);N.push(B);if(U<Q){--Q}if(F>1&&U===E){--F;V[h--]=++E}}if(T){T.at=Q}for(f=C.length;f-->0;){W=C[f];h=W.at;j=W.items.length;if(h+j<S){D.indices=K=null}D.length=S-=j;O.splice(h,j);if(K){N=W.keys;for(h=0;h<j;++h){delete K[N[h]]}}++D.generation;D.notify("remove",[W])}}if(T){if(Y&&Z>1&&S){D.spliceMerge(L)}else{if(Y){if(Z>1){Q=0;D.indices=K=null}else{Q=X.findInsertionIndex(T.items[0],O,D.getSortFn())}}if(Q===S){O.push.apply(O,L);if(K){for(h=0;h<Z;++h){K[G[h]]=Q+h}}}else{D.indices=null;Ext.Array.insert(O,Q,L)}for(h=0;h<Z;++h){e[G[h]]=L[h]}D.length+=Z;T.at=Q;++D.generation;D.notify("add",[T])}}D.endUpdate();return D},update:function(B,D){var C=this;C.beginUpdate();try{return B.call(D||C,C)}catch(A){Ext.log.error(this.$className+": Unhandled Exception: ",A.description||A.message);throw A}finally{C.endUpdate()}},updateKey:function(E,F){var B=this,C=B.map,A=B.indices,D=B.getSource(),G;if(D&&!D.updating){D.updateKey(E,F)}else{if((G=B.getKey(E))!==F){if(F in C||C[G]!==E){if(F in C){if(C[F]!==E){Ext.Error.raise('Incorrect oldKey "'+F+'" for item with newKey "'+G+'"')}delete C[F]}B.updating++;B.generation++;C[G]=E;if(A){A[G]=A[F];delete A[F]}B.notify("updatekey",[{item:E,newKey:G,oldKey:F}]);B.updating--}}}},onCollectionAdd:function(G,D){var H=this,B=G.getAt(D.at),A=B?H.indexOf(B):-1,I=D.items,J,C,F,K,E;if(H.getAutoFilter()&&H.filtered){for(F=0,E=I.length;F<E;++F){K=I[F];if(H.isItemFiltered(K)){if(!C){C=I.slice(0,F)}if(!J){J=[]}J.push(K)}else{if(C){C.push(K)}}}}H.splice((A<0)?H.length:A,0,C||I);if(J){H.notify("filteradd",[J])}},onCollectionBeforeItemChange:function(A,B){this.onCollectionUpdateKey=null},onCollectionBeginUpdate:function(){this.beginUpdate()},onCollectionEndUpdate:function(){this.endUpdate()},onCollectionItemChange:function(A,B){delete this.onCollectionUpdateKey;this.itemChanged(B.item,B.modified,B.oldKey)},onCollectionRefresh:function(D){var E=this,H={},A={},C,I,G,F,B;G=D.items;G=E.filtered&&E.getAutoFilter()?Ext.Array.filter(G,E.getFilterFn()):G.slice(0);if(E.sorted){E.sortData(G)}E.items=G;E.length=B=G.length;E.map=H;E.indices=A;for(C=0;C<B;++C){F=E.getKey(I=G[C]);H[F]=I;A[F]=C}E.notify("refresh")},onCollectionRemove:function(A,B){this.splice(0,B.items)},onCollectionUpdateKey:function(A,B){this.updateKey(B.item,B.oldKey)},_aggregators:{average:function(E,B,F,D,A){var C=F-B;return C&&this._aggregators.sum.call(this,E,B,F,D,A)/C},bounds:function(I,H,D,A,E){for(var F,C,B,G=H;G<D;++G){F=I[G];F=(E?F[E]:F)[A];if(!(F<C)){C=F}if(!(F>B)){B=F}}return[B,C]},count:function(A){return A.length},extremes:function(J,H,D,A,E){var K=null,I=null,G,L,C,B,F;for(G=H;G<D;++G){L=J[G];F=(E?L[E]:L)[A];if(!(F<C)){C=F;K=L}if(!(F>B)){B=F;I=L}}return[I,K]},max:function(E,B,F,C,A){var D=this._aggregators.bounds.call(this,E,B,F,C,A);return D[1]},maxItem:function(E,B,F,C,A){var D=this._aggregators.extremes.call(this,E,B,F,C,A);return D[1]},min:function(E,B,F,C,A){var D=this._aggregators.bounds.call(this,E,B,F,C,A);return D[0]},minItem:function(E,B,F,C,A){var D=this._aggregators.extremes.call(this,E,B,F,C,A);return D[0]},sum:function(H,G,B,A,C){for(var D,E=0,F=G;F<B;++F){D=H[F];D=(C?D[C]:D)[A];E+=D}return E}},_eventToMethodMap:{add:"onCollectionAdd",beforeitemchange:"onCollectionBeforeItemChange",beginupdate:"onCollectionBeginUpdate",endupdate:"onCollectionEndUpdate",itemchange:"onCollectionItemChange",refresh:"onCollectionRefresh",remove:"onCollectionRemove",sort:"onCollectionSort",filter:"onCollectionFilter",filteradd:"onCollectionFilterAdd",updatekey:"onCollectionUpdateKey"},addObserver:function(D){var B=this.observers,A,C=D.getId();if(!B){B=this.observers=[];this.observerMap={}}A=this.observerMap;if(!A[C]){B.push(D);A[C]=D;Ext.Array.sort(B,this.prioritySortFn)}},prioritySortFn:function(A,C){var D=A.observerPriority||0,B=C.observerPriority||0;return D-B},applyExtraKeys:function(G){var D=this,E={},C,B,F,A;for(F in G){C={collection:D};if(Ext.isString(A=G[F])){C.property=A}else{Ext.apply(C,A)}E[F]=D[F]=B=new Ext.util.CollectionKey(C);B.name=F}return E},applyGrouper:function(A){if(A){A=this.getSorters().decodeSorter(A,"Ext.util.Grouper")}return A},decodeItems:function(G,E){var C=this,D=(E===undefined)?G:G[E],F,A,B;if(!D||!D.$cloned){F=G.length>E+1||!Ext.isIterable(D);if(F){D=Ext.Array.slice(G,E);if(D.length===1&&D[0]===undefined){D.length=0}}A=C.getDecoder();if(A){if(!F){D=D.slice(0);F=true}for(B=D.length;B-->0;){if((D[B]=A.call(C,D[B]))===false){D.splice(B,1)}}}if(F){D.$cloned=true}}return D},getIndices:function(){var D=this,A=D.indices,E=D.items,C=E.length,B,F;if(!A){D.indices=A={};++D.indexRebuilds;for(B=0;B<C;++B){F=D.getKey(E[B]);A[F]=B}}return A},notify:function(D,B){var A=this,E=A.observers,H=A._eventToMethodMap[D],I=0,C,J,G,F;B=B||[];if(E&&H){for(C=0,J=E.length;C<J;++C){G=(F=E[C])[H];if(G){if(!I++){B.unshift(A)}G.apply(F,B)}}}if(!A.hasListeners){return}if(A.hasListeners[D]){if(!I){B.unshift(A)}A.fireEventArgs(D,B)}},getFilterFn:function(){return this.getFilters().getFilterFn()},getFilters:function(B){var A=this._filters;if(!A&&B!==false){A=new Ext.util.FilterCollection();this.setFilters(A)}return A},isItemFiltered:function(A){return !this.getFilters().filterFn(A)},onFilterChange:function(C){var A=this,B=A.getSource();if(!B){B=new Ext.util.Collection({keyFn:A.getKey,extraKeys:A.getInitialConfig().extraKeys,rootProperty:A.getRootProperty()});if(A.length){B.add(A.items)}A.setSource(B);A.autoSource=B}else{if(B.length||A.length){A.onCollectionRefresh(B)}}A.notify("filter")},applyFilters:function(B,A){if(B==null||(B&&B.isFilterCollection)){return B}if(B){if(!A){A=this.getFilters()}A.splice(0,A.length,B)}return A},updateFilters:function(C,A){var B=this;if(A){A.un("endupdate","onEndUpdateFilters",B)}if(C){C.on("endupdate","onEndUpdateFilters",B,{prepend:true});C.$filterable=B}B.onEndUpdateFilters(C)},onEndUpdateFilters:function(C){var B=this,D=B.filtered,A=!!C&&(C.length>0);if(D||A){B.filtered=A;B.onFilterChange(C)}},getSortFn:function(){return this._sortFn||this.createSortFn()},getSorters:function(B){var A=this._sorters;if(!A&&B!==false){A=new Ext.util.SorterCollection();this.setSorters(A)}return A},onSortChange:function(){if(this.sorted){this.sortItems()}},sort:function(C,D,B){var A=this.getSorters();A.addSort.apply(A,arguments);return this},sortData:function(A){Ext.Array.sort(A,this.getSortFn());return A},sortItems:function(A){var B=this;if(B.sorted){if(A){Ext.Error.raise("Collections with sorters cannot resorted")}A=B.getSortFn()}B.indices=null;if(B.length){Ext.Array.sort(B.items,A)}B.notify("sort")},sortBy:function(A){return this.sortItems(A)},findInsertionIndex:function(A,B,C){if(!B){B=this.items}if(!C){C=this.getSortFn()}return Ext.Array.binarySearch(B,A,C)},applySorters:function(A,B){if(A==null||(A&&A.isSorterCollection)){return A}if(A){if(!B){B=this.getSorters()}B.splice(0,B.length,A)}return B},createSortFn:function(){var B=this,C=B.getGrouper(),A=B.getSorters().getSortFn();if(!C){return A}return function(E,D){return C.sort(E,D)||A(E,D)}},updateGrouper:function(E){var C=this,B=C.getGroups(),A=C.getSorters(),F,D;C.onSorterChange();C.grouped=!!E;if(E){if(!B){B=new Ext.util.GroupCollection({itemRoot:C.getRootProperty()});C.addObserver(B);C.setGroups(B)}D=B.getSorters();D.splice(0,D.length,{property:"_groupKey",direction:E.getDirection()});F=true}else{if(B){C.removeObserver(B);B.destroy()}C.setGroups(null)}if(!A.updating){C.onEndUpdateSorters(A)}if(F){B.onCollectionRefresh(C)}},updateSorters:function(C,B){var A=this;if(B){B.un("endupdate","onEndUpdateSorters",A)}if(C){C.on("endupdate","onEndUpdateSorters",A,{prepend:true});C.$sortable=A}A.onSorterChange();A.onEndUpdateSorters(C)},onSorterChange:function(){this._sortFn=null},onEndUpdateSorters:function(B){var C=this,D=C.sorted,A=C.grouped||(!!B&&(B.length>0));if(D||A){C.sorted=A;C.onSortChange(B)}},removeObserver:function(B){var A=this.observers;if(A){Ext.Array.remove(A,B);delete this.observerMap[B.getId()]}},spliceMerge:function(A){var K=this,J,C=A.length,L=0,P=K.items,N=P.length,B=[],E=0,M=[],H=K.getSorters(),D,I,G,O,F;K.items=M;for(J=0;J<C;J=I){O=A[J];for(;L<N;++L){if(H.sortFn(O,F=P[L])<0){break}M.push(F)}if(L===N){B[E++]={at:M.length,items:(D=[])};if(E>1){B[E-2].next=B[E-1]}for(;J<C;++J){D.push(O=A[J]);M.push(O)}break}B[E++]={at:M.length,items:(D=[O])};if(E>1){B[E-2].next=B[E-1]}M.push(O);for(I=J+1;I<C;++I){if(H.sortFn(O=A[I],F)>=0){break}M.push(O);D.push(O)}}for(;L<N;++L){M.push(P[L])}K.length=M.length;++K.generation;for(G=0;G<E;++G){K.notify("add",[B[G]])}},getGroups:function(){return this.callParent()||null},updateGroups:function(A,B){if(B){this.removeObserver(B)}if(A){this.addObserver(A)}},updateSource:function(B,A){var C=this.autoSource;if(A){A.removeObserver(this);if(A===C){C.destroy();this.autoSource=null}}if(B){B.addObserver(this);if(B.length||this.length){this.onCollectionRefresh(B)}}}},function(){var A=this.prototype;A.removeAtKey=A.removeByKey;A.decodeRemoveItems=A.decodeItems;Ext.Object.each(A._aggregators,function(B){A[B]=function(D,C,E){return this.aggregate(D,B,C,E)};A[B+"ByGroup"]=function(C){return this.aggregateByGroup(C,B)}})});