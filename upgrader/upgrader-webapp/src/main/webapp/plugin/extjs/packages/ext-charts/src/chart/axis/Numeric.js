Ext.define("Ext.chart.axis.Numeric",{extend:"Ext.chart.axis.Axis",alternateClassName:"Ext.chart.NumericAxis",type:"Numeric",isNumericAxis:true,alias:"axis.numeric",uses:["Ext.data.Store"],constructor:function(B){var C=this,D=!!(B.label&&B.label.renderer),A;C.callParent([B]);A=C.label;if(B.constrain==null){C.constrain=(B.minimum!=null&&B.maximum!=null)}if(!D){A.renderer=function(E){return C.roundToDecimal(E,C.decimals)}}},roundToDecimal:function(B,A){var C=Math.pow(10,A||0);return Math.round(B*C)/C},minimum:NaN,maximum:NaN,constrain:true,decimals:2,scale:"linear",doConstrain:function(){var D=this,R=D.chart,F=R.getChartStore(),N=F.data.items,I,A,E,L=R.series.items,M=D.fields,P=M.length,B=D.calcEnds(),H=B.from,O=B.to,C,S,G=false,K,Q=[],J;for(I=0,A=N.length;I<A;I++){J=true;E=N[I];for(C=0;C<P;C++){K=E.get(M[C]);if(D.type=="Time"&&typeof K=="string"){K=Date.parse(K)}if(+K<+H){J=false;break}if(+K>+O){J=false;break}}if(J){Q.push(E)}}R.setSubStore(new Ext.data.Store({model:F.model,data:Q}))},position:"left",adjustMaximumByMajorUnit:false,adjustMinimumByMajorUnit:false,processView:function(){var D=this,A=D.chart,E=A.series.items,B,C;for(B=0,C=E.length;B<C;B++){if(E[B].stacked){delete D.minimum;delete D.maximum;D.constrain=false;break}}if(D.constrain){D.doConstrain()}},applyData:function(){this.callParent();return this.calcEnds()}});