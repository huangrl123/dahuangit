Ext.define("Ext.draw.Matrix",{statics:{createAffineMatrixFromTwoPair:function(H,F,P,C,Q,D,E,N){var G=P-H,O=C-F,M=E-Q,B=N-D,A=1/(G*G+O*O),K=G*M+O*B,I=M*O-G*B,J=-K*H-I*F,L=I*H-K*F;return new this(K*A,-I*A,I*A,K*A,J*A+Q,L*A+D)},createPanZoomFromTwoPair:function(H,I,R,D,S,E,C,N){if(arguments.length===2){return this.createPanZoomFromTwoPair.apply(this,H.concat(I))}var G=R-H,Q=D-I,F=(H+R)*0.5,O=(I+D)*0.5,K=C-S,P=N-E,L=(S+C)*0.5,B=(E+N)*0.5,A=G*G+Q*Q,J=K*K+P*P,M=Math.sqrt(J/A);return new this(M,0,0,M,L-M*F,B-M*O)},fly:(function(){var B=null,A=function(C){B.elements=C;return B};return function(C){if(!B){B=new Ext.draw.Matrix()}B.elements=C;Ext.draw.Matrix.fly=A;return B}})(),create:function(A){if(A instanceof this){return A}return new this(A)}},constructor:function(E,A,F,B,C,D){if(E&&E.length===6){this.elements=E.slice()}else{if(E!==undefined){this.elements=[E,A,F,B,C,D]}else{this.elements=[1,0,0,1,0,0]}}},prepend:function(G,D,H,E,K,I){var B=this.elements,F=B[0],J=B[1],C=B[2],A=B[3],L=B[4],M=B[5];B[0]=G*F+H*J;B[1]=D*F+E*J;B[2]=G*C+H*A;B[3]=D*C+E*A;B[4]=G*L+H*M+K;B[5]=D*L+E*M+I;return this},prependMatrix:function(A){return this.prepend.apply(this,A.elements)},append:function(G,D,H,E,K,I){var B=this.elements,F=B[0],J=B[1],C=B[2],A=B[3],L=B[4],M=B[5];B[0]=G*F+D*C;B[1]=G*J+D*A;B[2]=H*F+E*C;B[3]=H*J+E*A;B[4]=K*F+I*C+L;B[5]=K*J+I*A+M;return this},appendMatrix:function(A){return this.append.apply(this,A.elements)},set:function(F,A,G,B,D,E){var C=this.elements;C[0]=F;C[1]=A;C[2]=G;C[3]=B;C[4]=D;C[5]=E;return this},inverse:function(E){var B=this.elements,G=B[0],I=B[1],F=B[2],C=B[3],A=B[4],H=B[5],D=1/(G*C-I*F);G*=D;I*=D;F*=D;C*=D;if(E){E.set(C,-I,-F,G,F*H-C*A,I*A-G*H);return E}else{return new Ext.draw.Matrix(C,-I,-F,G,F*H-C*A,I*A-G*H)}},translate:function(B,C,A){if(A){return this.prepend(1,0,0,1,B,C)}else{return this.append(1,0,0,1,B,C)}},scale:function(D,E,B,A,C){var F=this;if(E==null){E=D}if(B===undefined){B=0}if(A===undefined){A=0}if(C){return F.prepend(D,0,0,E,B-B*D,A-A*E)}else{return F.append(D,0,0,E,B-B*D,A-A*E)}},rotate:function(G,A,B,D){var E=this,C=Math.cos(G),F=Math.sin(G);A=A||0;B=B||0;if(D){return E.prepend(C,F,-F,C,A-C*A+B*F,B-C*B-A*F)}else{return E.append(C,F,-F,C,A-C*A+B*F,B-C*B-A*F)}},rotateFromVector:function(F,G,D){var E=this,B=Math.sqrt(F*F+G*G),C=F/B,A=G/B;if(D){return E.prepend(C,A,-A,C,0,0)}else{return E.append(C,A,-A,C,0,0)}},clone:function(){return new Ext.draw.Matrix(this.elements)},flipX:function(){return this.append(-1,0,0,1,0,0)},flipY:function(){return this.append(1,0,0,-1,0,0)},skewX:function(A){return this.append(1,Math.tan(A),0,-1,0,0)},skewY:function(A){return this.append(1,0,Math.tan(A),-1,0,0)},reset:function(){return this.set(1,0,0,1,0,0)},precisionCompensate:function(C,I){var B=this.elements,H=B[0],J=B[1],D=B[2],G=B[3],F=B[4],E=B[5],A=J*D-H*G;I.b=C*J/H;I.c=C*D/G;I.d=C;I.xx=H/C;I.yy=G/C;I.dx=(E*H*D-F*H*G)/A/C;I.dy=(F*J*G-E*H*G)/A/C},precisionCompensateRect:function(B,H){var A=this.elements,G=A[0],I=A[1],C=A[2],F=A[3],E=A[4],D=A[5],J=C/G;H.b=B*I/G;H.c=B*J;H.d=B*F/G;H.xx=G/B;H.yy=G/B;H.dx=(D*C-E*F)/(I*J-F)/B;H.dy=-(D*G-E*I)/(I*J-F)/B},x:function(B,C){var A=this.elements;return B*A[0]+C*A[2]+A[4]},y:function(B,C){var A=this.elements;return B*A[1]+C*A[3]+A[5]},get:function(A,B){return +this.elements[A+B*2].toFixed(4)},transformPoint:function(A){var B=this.elements;return[A[0]*B[0]+A[1]*B[2]+B[4],A[0]*B[1]+A[1]*B[3]+B[5]]},transformBBox:function(J,F,P){var I=this.elements,G=J.x,B=J.y,K=J.width*0.5,M=J.height*0.5,N=I[0],C=I[1],O=I[2],D=I[3],H=G+K,L=B+M,A,E,Q;if(F){K-=F;M-=F;Q=[Math.sqrt(I[0]*I[0]+I[2]*I[2]),Math.sqrt(I[1]*I[1]+I[3]*I[3])];A=Math.abs(K*N)+Math.abs(M*O)+Math.abs(Q[0]*F);E=Math.abs(K*C)+Math.abs(M*D)+Math.abs(Q[1]*F)}else{A=Math.abs(K*N)+Math.abs(M*O);E=Math.abs(K*C)+Math.abs(M*D)}if(!P){P={}}P.x=H*N+L*O+I[4]-A;P.y=H*C+L*D+I[5]-E;P.width=A+A;P.height=E+E;return P},transformList:function(C){var B=this.elements,G=B[0],H=B[2],K=B[4],E=B[1],F=B[3],I=B[5],D=C.length,A,J;for(J=0;J<D;J++){A=C[J];C[J]=[A[0]*G+A[1]*H+K,A[0]*E+A[1]*F+I]}return C},isIdentity:function(){var A=this.elements;return A[0]===1&&A[1]===0&&A[2]===0&&A[3]===1&&A[4]===0&&A[5]===0},equals:function(A){var B=this.elements,C=A.elements;return B[0]===C[0]&&B[1]===C[1]&&B[2]===C[2]&&B[3]===C[3]&&B[4]===C[4]&&B[5]===C[5]},toArray:function(){var A=this.elements;return[A[0],A[2],A[4],A[1],A[3],A[5]]},toVerticalArray:function(){return this.elements.slice()},toString:function(){var A=this;return[A.get(0,0),A.get(0,1),A.get(1,0),A.get(1,1),A.get(2,0),A.get(2,1)].join(",")},toContext:function(A){A.transform.apply(A,this.elements);return this},toSvg:function(){var A=this.elements;return"matrix("+A[0].toFixed(9)+","+A[1].toFixed(9)+","+A[2].toFixed(9)+","+A[3].toFixed(9)+","+A[4].toFixed(9)+","+A[5].toFixed(9)+")"},getScaleX:function(){var A=this.elements;return Math.sqrt(A[0]*A[0]+A[2]*A[2])},getScaleY:function(){var A=this.elements;return Math.sqrt(A[1]*A[1]+A[3]*A[3])},getXX:function(){return this.elements[0]},getXY:function(){return this.elements[1]},getYX:function(){return this.elements[2]},getYY:function(){return this.elements[3]},getDX:function(){return this.elements[4]},getDY:function(){return this.elements[5]},split:function(){var A=this.elements,E=A[0],D=A[1],F=A[2],B=A[3],C={translateX:A[4],translateY:A[5]};C.scaleX=Math.sqrt(E*E+F*F);C.shear=(E*D+F*B)/C.scaleX;D-=C.shear*E;B-=C.shear*F;C.scaleY=Math.sqrt(D*D+B*B);C.shear/=C.scaleY;C.rotation=-Math.atan2(F/C.scaleX,D/C.scaleY);C.isSimple=Math.abs(C.shear)<1e-09&&(!C.rotation||Math.abs(C.scaleX-C.scaleY)<1e-09);return C}},function(){function A(D,E,C){D[E]={get:function(){return this.elements[C]},set:function(F){this.elements[C]=F}}}if(Object.defineProperties){var B={};A(B,"a",0);A(B,"b",1);A(B,"c",2);A(B,"d",3);A(B,"e",4);A(B,"f",5);Object.defineProperties(this.prototype,B)}this.prototype.multiply=this.prototype.appendMatrix});