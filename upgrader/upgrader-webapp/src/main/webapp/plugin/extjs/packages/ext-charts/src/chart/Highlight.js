Ext.define("Ext.chart.Highlight",{requires:["Ext.fx.Anim"],highlight:false,highlightCfg:{fill:"#fdd","stroke-width":5,stroke:"#f55"},constructor:function(A){if(A.highlight&&(typeof A.highlight!=="boolean")){this.highlightCfg=Ext.merge({},this.highlightCfg,A.highlight)}},highlightItem:function(J){if(!J){return}var G=this,A=J.sprite,E=Ext.merge({},G.highlightCfg,G.highlight),D=G.chart.surface,C=G.chart.animate,B,F,H,I;if(!G.highlight||!A||A._highlighted){return}if(A._anim){A._anim.paused=true}A._highlighted=true;if(!A._defaults){A._defaults=Ext.apply({},A.attr);F={};H={};for(B in E){if(!(B in A._defaults)){A._defaults[B]=D.availableAttrs[B]}F[B]=A._defaults[B];H[B]=E[B];if(Ext.isObject(E[B])){F[B]={};H[B]={};Ext.apply(A._defaults[B],A.attr[B]);Ext.apply(F[B],A._defaults[B]);for(I in A._defaults[B]){if(!(I in E[B])){H[B][I]=F[B][I]}else{H[B][I]=E[B][I]}}for(I in E[B]){if(!(I in H[B])){H[B][I]=E[B][I]}}}}A._from=F;A._to=H;A._endStyle=H}if(C){A._anim=new Ext.fx.Anim({target:A,from:A._from,to:A._to,duration:150})}else{A.setAttributes(A._to,true)}},unHighlightItem:function(){if(!this.highlight||!this.items){return}var F=this,H=F.items,G=H.length,E=Ext.merge({},F.highlightCfg,F.highlight),C=F.chart.animate,D=0,I,B,A;for(;D<G;D++){if(!H[D]){continue}A=H[D].sprite;if(A&&A._highlighted){if(A._anim){A._anim.paused=true}I={};for(B in E){if(Ext.isObject(A._defaults[B])){I[B]=Ext.apply({},A._defaults[B])}else{I[B]=A._defaults[B]}}if(C){A._endStyle=I;A._anim=new Ext.fx.Anim({target:A,to:I,duration:150})}else{A.setAttributes(I,true)}delete A._highlighted}}},cleanHighlights:function(){if(!this.highlight){return}var A=this.group,D=this.markerGroup,B=0,C;for(C=A.getCount();B<C;B++){delete A.getAt(B)._defaults}if(D){for(C=D.getCount();B<C;B++){delete D.getAt(B)._defaults}}}});