Ext.define("Ext.draw.Matrix",{requires:["Ext.draw.Draw"],constructor:function(E,C,D,A,B,F){if(E!=null){this.matrix=[[E,D,B],[C,A,F],[0,0,1]]}else{this.matrix=[[1,0,0],[0,1,0],[0,0,1]]}},add:function(K,H,I,M,D,L){var A=this,B=[[],[],[]],F=[[K,I,D],[H,M,L],[0,0,1]],C,J,G,E;for(C=0;C<3;C++){for(J=0;J<3;J++){E=0;for(G=0;G<3;G++){E+=A.matrix[C][G]*F[G][J]}B[C][J]=E}}A.matrix=B},prepend:function(K,H,I,M,D,L){var A=this,B=[[],[],[]],F=[[K,I,D],[H,M,L],[0,0,1]],C,J,G,E;for(C=0;C<3;C++){for(J=0;J<3;J++){E=0;for(G=0;G<3;G++){E+=F[C][G]*A.matrix[G][J]}B[C][J]=E}}A.matrix=B},invert:function(){var C=this.matrix,F=C[0][0],D=C[1][0],E=C[0][1],H=C[1][1],A=C[0][2],G=C[1][2],B=F*H-D*E;return new Ext.draw.Matrix(H/B,-D/B,-E/B,F/B,(E*G-H*A)/B,(D*A-F*G)/B)},clone:function(){var A=this.matrix,F=A[0][0],D=A[1][0],E=A[0][1],B=A[1][1],C=A[0][2],G=A[1][2];return new Ext.draw.Matrix(F,D,E,B,C,G)},translate:function(A,B){this.prepend(1,0,0,1,A,B)},scale:function(C,D,E,A){var B=this;if(D==null){D=C}B.add(C,0,0,D,E*(1-C),A*(1-D))},rotate:function(F,D,E){F=Ext.draw.Draw.rad(F);var C=this,B=+Math.cos(F).toFixed(9),A=+Math.sin(F).toFixed(9);C.add(B,A,-A,B,D-B*D+A*E,-(A*D)+E-B*E)},x:function(B,C){var A=this.matrix;return B*A[0][0]+C*A[0][1]+A[0][2]},y:function(B,C){var A=this.matrix;return B*A[1][0]+C*A[1][1]+A[1][2]},get:function(A,B){return +this.matrix[A][B].toFixed(4)},toString:function(){var A=this;return[A.get(0,0),A.get(0,1),A.get(1,0),A.get(1,1),0,0].join()},toSvg:function(){var A=this;return"matrix("+[A.get(0,0),A.get(1,0),A.get(0,1),A.get(1,1),A.get(0,2),A.get(1,2)].join()+")"},toFilter:function(A,C){var B=this;A=A||0;C=C||0;return"progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', filterType='bilinear', M11="+B.get(0,0)+", M12="+B.get(0,1)+", M21="+B.get(1,0)+", M22="+B.get(1,1)+", Dx="+(B.get(0,2)+A)+", Dy="+(B.get(1,2)+C)+")"},offset:function(){var A=this.matrix;return[(A[0][2]||0).toFixed(4),(A[1][2]||0).toFixed(4)]},split:function(){function B(F){return F[0]*F[0]+F[1]*F[1]}function E(G){var F=Math.sqrt(B(G));G[0]/=F;G[1]/=F}var A=this.matrix,D={translateX:A[0][2],translateY:A[1][2]},C;C=[[A[0][0],A[0][1]],[A[1][1],A[1][1]]];D.scaleX=Math.sqrt(B(C[0]));E(C[0]);D.shear=C[0][0]*C[1][0]+C[0][1]*C[1][1];C[1]=[C[1][0]-C[0][0]*D.shear,C[1][1]-C[0][1]*D.shear];D.scaleY=Math.sqrt(B(C[1]));E(C[1]);D.shear/=D.scaleY;D.rotate=Math.asin(-C[0][1]);D.isSimple=!+D.shear.toFixed(9)&&(D.scaleX.toFixed(9)==D.scaleY.toFixed(9)||!D.rotate);return D}});