Ext.define("Ext.data.LocalStore",{extend:"Ext.Mixin",mixinConfig:{id:"localstore"},constructDataCollection:function(){var B=new Ext.util.Collection({rootProperty:"data",extraKeys:{byInternalId:{property:"internalId",rootProperty:""}}}),A;A=B.getSorters();A.setSorterConfigure(this.addFieldTransform,this);return B},createFiltersCollection:function(){return this.getData().getFilters()},createSortersCollection:function(){return this.getData().getSorters()},onCollectionSort:function(){this.onSorterEndUpdate()},onCollectionFilter:function(){this.onFilterEndUpdate()},notifySorterChange:function(){this.getData().onSorterChange()},forceLocalSort:function(){this.getData().onSortChange()},contains:function(A){return this.indexOf(A)>-1},each:function(B,E){var F=this.data.items,D=F.length,C,A;for(A=0;A<D;++A){C=F[A];if(B.call(E||C,C,A,D)===false){break}}},collect:function(A,D,C){var B=this,E=B.getData();if(C===true&&E.filtered){E=E.getSource()}return E.collect(A,"data",D)},getById:function(B){var A=this.getData();if(A.filtered){A=A.getSource()}return A.get(B)||null},getByInternalId:function(A){var B=this.getData();if(B.filtered){B=B.getSource()}return B.byInternalId.get(A)||null},indexOf:function(A){return this.getData().indexOf(A)},indexOfId:function(A){return this.indexOf(this.getById(A))},queryBy:function(A,B){var C=this.getData();return(C.getSource()||C).createFiltered(A,B)},query:function(B,D,A,E,C){var F=this.getData();return(F.getSource()||F).createFiltered(B,D,A,E,C)},first:function(A){return this.getData().first(A)||null},last:function(A){return this.getData().last(A)||null},sum:function(B,C){var A=this.getData();return(C&&this.isGrouped())?A.sumByGroup(B):A.sum(B)},count:function(B){var A=this.getData();return(B&&this.isGrouped())?A.countByGroup():A.count()},min:function(B,C){var A=this.getData();return(C&&this.isGrouped())?A.minByGroup(B):A.min(B)},max:function(B,C){var A=this.getData();return(C&&this.isGrouped())?A.maxByGroup(B):A.max(B)},average:function(B,C){var A=this.getData();return(C&&this.isGrouped())?A.averageByGroup(B):A.average(B)},aggregate:function(G,C,J,F){var H=this,A,I,B,E,D;if(J&&H.isGrouped()){A=H.getGroups().items;I=A.length;B={};for(D=0;D<I;++D){E=A[D];B[E.getGroupKey()]=H.getAggregate(G,C||H,E.items,F)}return B}else{return H.getAggregate(G,C,H.getData().items,F)}},getAggregate:function(D,F,C,G){var A=[],E=C.length,B;for(B=0;B<E;++B){A[B]=C[B].get(G)}return D.call(F||this,C,A)},addObserver:function(B){var A=this.observers;if(!A){this.observers=A=new Ext.util.Collection()}A.add(B)},removeObserver:function(B){var A=this.observers;if(A){A.remove(B)}},callObservers:function(G,A){var D=this.observers,E,F,C,B,H;if(D){F=D.items;if(A){A.unshift(this)}else{A=[this]}for(C=0,E=F.length;C<E;++C){H=F[C];B="onSource"+G;if(H[B]){H[B].apply(H,A)}}}}});