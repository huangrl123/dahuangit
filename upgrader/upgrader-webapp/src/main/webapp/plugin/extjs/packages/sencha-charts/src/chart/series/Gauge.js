Ext.define("Ext.chart.series.Gauge",{alias:"series.gauge",extend:"Ext.chart.series.Polar",type:"gauge",seriesType:"pieslice",requires:["Ext.draw.sprite.Sector"],config:{angleField:null,field:null,needle:false,needleLengthRatio:undefined,needleLength:90,needleWidth:4,donut:30,showInLegend:false,value:null,colors:null,sectors:null,minimum:0,maximum:100,rotation:0,totalAngle:Math.PI/2,rect:[0,0,1,1],center:[0.5,0.75],radius:0.5,wholeDisk:false},getXRange:function(){return[this.dataRange[0],this.dataRange[2]]},getYRange:function(){return[this.dataRange[1],this.dataRange[3]]},coordinateX:function(){return this.coordinate("X",0,2)},coordinateY:function(){return this.coordinate("Y",1,2)},updateNeedle:function(A){var C=this,B=C.getSprites(),D=C.valueToAngle(C.getValue());if(B&&B.length){B[0].setAttributes({startAngle:(A?D:0),endAngle:D,strokeOpacity:(A?1:0),lineWidth:(A?C.getNeedleWidth():0)});C.doUpdateStyles()}},themeColorCount:function(){var C=this,A=C.getStore(),B=A&&A.getCount()||0;return B+(C.getNeedle()?0:1)},updateColors:function(D,E){var G=this,A=G.getSectors(),I=A&&A.length,H=G.getSprites(),B=Ext.Array.clone(D),C=D&&D.length,F;if(!C||!D[0]){return}for(F=0;F<I;F++){B[F+1]=A[F].color||B[F+1]||D[F%C]}H[0].setAttributes({strokeStyle:B[0]});this.setSubStyle({fillStyle:B,strokeStyle:B});this.doUpdateStyles()},updateAngleField:function(A){this.setField(A)},updateNeedleLengthRatio:function(A){this.setNeedleLength(A*100)},updateRect:function(C){var G=this.getWholeDisk(),B=G?Math.PI:this.getTotalAngle()/2,E=this.getDonut()/100,F,A,D;if(B<=Math.PI/2){F=2*Math.sin(B);A=1-E*Math.cos(B)}else{F=2;A=1-Math.cos(B)}D=Math.min(C[2]/F,C[3]/A);this.setRadius(D);this.setCenter([C[2]/2,D+(C[3]-A*D)/2])},updateCenter:function(A){this.setStyle({centerX:A[0],centerY:A[1],rotationCenterX:A[0],rotationCenterY:A[1]});this.doUpdateStyles()},updateRotation:function(A){this.setStyle({rotationRads:A-(this.getTotalAngle()+Math.PI)/2});this.doUpdateStyles()},doUpdateShape:function(C,D){var A,B=this.getSectors(),F=(B&&B.length)||0,E=this.getNeedleLength()/100;A=[C*E,C];while(F--){A.push(C)}this.setSubStyle({endRho:A,startRho:C/100*D});this.doUpdateStyles()},updateRadius:function(A){var B=this.getDonut();this.doUpdateShape(A,B)},updateDonut:function(B){var A=this.getRadius();this.doUpdateShape(A,B)},valueToAngle:function(A){A=this.applyValue(A);return this.getTotalAngle()*(A-this.getMinimum())/(this.getMaximum()-this.getMinimum())},applyValue:function(A){return Math.min(this.getMaximum(),Math.max(A,this.getMinimum()))},updateValue:function(D){var C=this,A=C.getNeedle(),E=C.valueToAngle(D),B=C.getSprites();B[0].rendererData.value=D;B[0].setAttributes({startAngle:(A?E:0),endAngle:E});C.doUpdateStyles()},processData:function(){var H=this,A=H.getStore(),B,C,D,G,J,I=A&&A.first(),F,E;if(I){F=H.getField();if(F){E=I.get(F)}}if(B=H.getXAxis()){C=B.getMinimum();D=B.getMaximum();G=B.getSprites()[0].fx;J=G.getDuration();G.setDuration(0);if(Ext.isNumber(C)){H.setMinimum(C)}else{B.setMinimum(H.getMinimum())}if(Ext.isNumber(D)){H.setMaximum(D)}else{B.setMaximum(H.getMaximum())}G.setDuration(J)}if(!Ext.isNumber(E)){E=H.getMinimum()}H.setValue(E)},getDefaultSpriteConfig:function(){return{type:this.seriesType,renderer:this.getRenderer(),fx:{customDuration:{translationX:0,translationY:0,rotationCenterX:0,rotationCenterY:0,centerX:0,centerY:0,startRho:0,endRho:0,baseRotation:0}}}},normalizeSectors:function(C){var D=this,G=(C&&C.length)||0,A,E,F,B;if(G){for(A=0;A<G;A++){E=C[A];if(typeof E==="number"){C[A]={start:(A>0?C[A-1].end:D.getMinimum()),end:Math.min(E,D.getMaximum())};if(A==(G-1)&&C[A].end<D.getMaximum()){C[A+1]={start:C[A].end,end:D.getMaximum()}}}else{if(typeof E.start==="number"){F=Math.max(E.start,D.getMinimum())}else{F=(A>0?C[A-1].end:D.getMinimum())}if(typeof E.end==="number"){B=Math.min(E.end,D.getMaximum())}else{B=D.getMaximum()}C[A].start=F;C[A].end=B}}}else{C=[{start:D.getMinimum(),end:D.getMaximum()}]}return C},getSprites:function(){var J=this,A=J.getStore(),E=J.getValue(),F,C;if(!A&&!Ext.isNumber(E)){return[]}var H=J.getChart(),M=H.getAnimation(),K=J.sprites,G=0,L,B,D,N,I=[];if(K&&K.length){K[0].fx.setConfig(M);return K}N={store:A,field:J.getField(),value:E,series:J};L=J.createSprite();L.setAttributes({zIndex:10},true);L.rendererData=N;L.rendererIndex=G++;I.push(J.getNeedleWidth());J.getLabel().getTemplate().setField(true);B=J.normalizeSectors(J.getSectors());for(F=0,C=B.length;F<C;F++){D={startAngle:J.valueToAngle(B[F].start),endAngle:J.valueToAngle(B[F].end),label:B[F].label,fillStyle:B[F].color,strokeOpacity:0,rotateLabels:false,doCallout:false,labelOverflowPadding:-1};Ext.apply(D,B[F].style);L=J.createSprite();L.rendererData=N;L.rendererIndex=G++;L.setAttributes(D,true);I.push(D.lineWidth)}J.setSubStyle({lineWidth:I});J.doUpdateStyles();return K}});