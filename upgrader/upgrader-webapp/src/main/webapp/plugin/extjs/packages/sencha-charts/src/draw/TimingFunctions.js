(function(){var C=Math.pow,B=Math.sin,D=Math.cos,F=Math.sqrt,L=Math.PI,J,E,A,H,G,I,K;A=["quad","cubic","quart","quint"];J={pow:function(M,N){return C(M,N[0]||6)},expo:function(M){return C(2,8*(M-1))},circ:function(M){return 1-F(1-M*M)},sine:function(M){return 1-B((1-M)*L/2)},back:function(N,M){M=M||1.616;return N*N*((M+1)*N-M)},bounce:function(M){var O;for(var P=0,N=1;1;P+=N,N/=2){if(M>=(7-4*P)/11){O=N*N-C((11-6*P-11*M)/4,2);break}}return O},elastic:function(M,N){return C(2,10*--M)*D(20*M*L*(N||1)/3)}};E=function(M,N){N=N&&N.length?N:[N];return Ext.apply(M,{easeIn:function(O){return M(O,N)},easeOut:function(O){return 1-M(1-O,N)},easeInOut:function(O){return(O<=0.5)?M(2*O,N)/2:(2-M(2*(1-O),N))/2}})};H=function(M){return function(N){return C(N,M)}};for(I=0,K=A.length;I<K;++I){J[A[I]]=H(I+2)}J.linear=function(M){return M};for(G in J){if(J.hasOwnProperty(G)){E(J[G])}}Ext.define("Ext.draw.TimingFunctions",{singleton:true,easingMap:{linear:J.linear,easeIn:J.quad.easeIn,easeOut:J.quad.easeOut,easeInOut:J.quad.easeInOut,backIn:J.back,backOut:function(N,M){return 1-J.back(1-N,M)},backInOut:function(N,M){if(N<0.5){return J.back(N*2,M)*0.5}else{return 1-J.back((1-N)*2,M)*0.5}},elasticIn:function(N,M){return 1-J.elastic(1-N,M)},elasticOut:J.elastic,bounceIn:J.bounce,bounceOut:function(M){return 1-J.bounce(1-M)}}},function(){Ext.apply(this,J)})})();