Ext.define("Ext.overrides.util.Positionable",{override:"Ext.util.Positionable",anchorTo:function(B,H,F,E,C,G){var I=this,D=!Ext.isEmpty(C),J=function(){I.alignTo(B,H,F,E);Ext.callback(G,I)},A=I.getAnchor();I.removeAnchor();Ext.apply(A,{fn:J,scroll:D});Ext.on("resize",J,null);if(D){Ext.getWin().on("scroll",J,null,{buffer:!isNaN(C)?C:50})}J();return I},getAnchor:function(){var A=this.el,C,B;if(!A.dom){return}C=A.getData();B=C._anchor;if(!B){B=C._anchor={}}return B},removeAnchor:function(){var A=this.getAnchor();if(A&&A.fn){Ext.un("resize",A.fn);if(A.scroll){Ext.getWin().on("scroll",A.fn)}delete A.fn}return this},setBox:function(A,B){var C=this;if(A.isRegion){A={x:A.left,y:A.top,width:A.right-A.left,height:A.bottom-A.top}}if(B){C.constrainBox(A);C.animate(Ext.applyIf({to:A,listeners:{afteranimate:Ext.Function.bind(C.afterSetPosition,C,[A.x,A.y])}},B))}else{C.callParent([A])}return C}});