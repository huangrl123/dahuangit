Ext.define("Ext.button.Segmented",{extend:"Ext.container.Container",xtype:"segmentedbutton",requires:["Ext.button.Button"],config:{allowDepress:false,allowMultiple:false,allowToggle:true,vertical:false,defaultUI:"default"},beforeRenderConfig:{value:undefined},publishes:["value"],twoWayBindable:["value"],layout:"segmentedbutton",defaultType:"button",maskOnDisable:false,isSegmentedButton:true,baseCls:Ext.baseCSSPrefix+"segmented-button",itemCls:Ext.baseCSSPrefix+"segmented-button-item",_firstCls:Ext.baseCSSPrefix+"segmented-button-first",_lastCls:Ext.baseCSSPrefix+"segmented-button-last",_middleCls:Ext.baseCSSPrefix+"segmented-button-middle",applyValue:function(D,H){var I=this,A=I.getAllowMultiple(),K,E,F,J,B,G,C;F=(D instanceof Array)?D:(D==null)?[]:[D];J=(H instanceof Array)?H:(H==null)?[]:[H];I._isApplyingValue=true;if(!I.rendered){B=I.items.items;for(G=0,C=B.length;G<C;G++){E=B[G];if(E.pressed){K=E.value;if(K==null){K=I.items.indexOf(E)}if(!Ext.Array.contains(F,K)){F.push(K)}}}}C=F.length;if(C>1&&!A){Ext.Error.raise("Cannot set multiple values when allowMultiple is false")}for(G=0;G<C;G++){D=F[G];E=I._lookupButtonByValue(D);if(E){K=E.value;if((K!=null)&&K!==D){F[G]=K}if(!E.pressed){E.setPressed(true)}}else{Ext.Error.raise("Invalid value '"+D+"' for segmented button: '"+I.id+"'")}}D=A?F:C?F[0]:null;for(G=0,C=J.length;G<C;G++){H=J[G];if(!Ext.Array.contains(F,H)){I._lookupButtonByValue(H).setPressed(false)}}I._isApplyingValue=false;return D},beforeRender:function(){var A=this;A.addCls(A.baseCls+A._getClsSuffix());A._syncItemClasses(true);A.callParent()},onAdd:function(H){var F=this,B="_syncItemClasses";var G=F.items.items,C=G.length,E=0,D,A;if(H.ui==="default"&&!H.hasOwnProperty("ui")){A=F.getDefaultUI();if(A!=="default"){H.ui=A}}for(;E<C;E++){if(G[E]!==H){D=G[E].value;if(D!=null&&D===H.value){Ext.Error.raise("Segmented button '"+F.id+"' cannot contain multiple items with value: '"+D+"'")}}}F.mon(H,{hide:B,show:B,toggle:"_onItemToggle",scope:F});if(F.getAllowToggle()){H.enableToggle=true;if(!F.getAllowMultiple()){H.toggleGroup=F.getId();H.allowDepress=F.getAllowDepress()}}H.addCls(F.itemCls+F._getClsSuffix());F._syncItemClasses();F.callParent([H])},onRemove:function(B){var A=this;B.removeCls(A.itemCls+A._getClsSuffix());A._syncItemClasses();A.callParent([B])},beforeLayout:function(){if(Ext.isChrome){this.el.dom.offsetWidth}this.callParent()},updateDefaultUI:function(A){var D=this.items,C,B,E;if(this.rendered){Ext.Error.raise("Changing the ui config of a segmented button after render is not supported.")}else{if(D){if(D.items){D=D.items}for(B=0,E=D.length;B<E;B++){C=D[B];if(C.ui==="default"&&A!=="default"&&!C.hasOwnProperty("ui")){D[B].ui=A}}}}},updateAllowDepress:function(A,B){if(this.rendered&&(A!==B)){Ext.Error.raise("Changing the allowDepress config of a segmented button after render is not supported.")}},updateAllowMultiple:function(A,B){if(this.rendered&&(A!==B)){Ext.Error.raise("Changing the allowMultiple config of a segmented button after render is not supported.")}},updateAllowToggle:function(B,A){if(this.rendered&&(B!==A)){Ext.Error.raise("Changing the allowToggle config of a segmented button after render is not supported.")}},updateVertical:function(A,B){if(this.rendered&&(A!==B)){Ext.Error.raise("Changing the orientation of a segmented button after render is not supported.")}},privates:{_getClsSuffix:function(){return this.getVertical()?"-vertical":"-horizontal"},_getFirstCls:function(){return this._firstCls},_getLastCls:function(){return this._lastCls},_lookupButtonByValue:function(D){var B=this.items.items,F=B.length,A=0,C=null,E,G;for(;A<F;A++){G=B[A];E=G.value;if((E!=null)&&E===D){C=G;break}}if(!C&&typeof D==="number"){C=B[D]}return C},_onItemToggle:function(D,F){if(this._isApplyingValue){return}var E=this,H=Ext.Array,A=E.allowMultiple,G=(D.value!=null)?D.value:E.items.indexOf(D),C=E.getValue(),B;if(A){B=H.indexOf(C,G)}if(F){if(A){if(B===-1){C.push(G)}}else{C=G}}else{if(A){if(B>-1){C.splice(B,1)}}else{if(C===G){C=null}}}E.setValue(C);E.fireEvent("toggle",E,D,F)},_syncItemClasses:function(B){var G=this,A,F,C,I,D,H,J,E;if(!B&&!G.rendered){return}A=G._getFirstCls();F=G._middleCls;C=G._getLastCls();I=G.items.items;D=I.length;H=[];for(E=0;E<D;E++){J=I[E];if(!J.hidden){H.push(J)}}D=H.length;for(E=0;E<D;E++){H[E].removeCls([A,F,C])}if(D>1){H[0].addCls(A);for(E=1;E<D-1;E++){H[E].addCls(F)}H[D-1].addCls(C)}}}});