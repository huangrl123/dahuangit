Ext.define("Ext.sparkline.Bar",{extend:"Ext.sparkline.BarBase",requires:["Ext.sparkline.RangeMap"],alias:"widget.sparklinebar",config:{barColor:"#3366cc",negBarColor:"#f44",stackedBarColor:["#3366cc","#dc3912","#ff9900","#109618","#66aa00","#dd4477","#0099c6","#990099"],zeroColor:null,nullColor:null,zeroAxis:true,barWidth:4,barSpacing:1,chartRangeMin:null,chartRangeMax:null,chartRangeClip:false,colorMap:null,tipTpl:new Ext.XTemplate("&#9679; {prefix}{value}{suffix}")},remove:function(E,C){var A,B,D=[];for(A=0,B=E.length;A<B;A++){if(E[A]!==C){D.push(E[A])}}return D},all:function(C,D,B){var A;for(A=C.length;A--;){if(B&&C[A]===null){continue}if(C[A]!==D){return false}}return true},applyColorMap:function(A){var B=this;if(Ext.isArray(A)){B.colorMapByIndex=A;B.colorMapByValue=null}else{B.colorMapByIndex=null;B.colorMapByValue=A;if(B.colorMapByValue&&B.colorMapByValue.get==null){B.colorMapByValue=new Ext.sparkline.RangeMap(A)}}return A},onUpdate:function(){var H=this,V=H.values,L=H.getBarWidth(),K=H.getBarSpacing(),B=H.getChartRangeMin(),E=H.getChartRangeMax(),g=H.getChartRangeClip(),c=Infinity,W=-Infinity,U,Y,S,A,f,F,d,I,G=H.getZeroAxis(),Z,N,T,b,X,M,Q,D,R,C,e,a,J,P=[],O=[];for(F=0,d=V.length;F<d;F++){e=V[F];U=typeof(e)==="string"&&e.indexOf(":")>-1;if(U||Ext.isArray(e)){M=true;if(U){e=V[F]=H.normalizeValues(e.split(":"))}e=H.remove(e,null);Y=Math.min.apply(Math,e);S=Math.max.apply(Math,e);if(Y<c){c=Y}if(S>W){W=S}}}H.stacked=M;H.regionShapes={};H.totalBarWidth=L+K;H.width=(V.length*L)+((V.length-1)*K);if(g){b=B==null?-Infinity:B;X=E==null?Infinity:E}f=[];A=M?[]:f;for(F=0,d=V.length;F<d;F++){if(M){Q=V[F];V[F]=C=[];P[F]=0;A[F]=O[F]=0;for(D=0,R=Q.length;D<R;D++){e=C[D]=g?Ext.Number.constrain(Q[D],b,X):Q[D];if(e!==null){if(e>0){P[F]+=e}if(c<0&&W>0){if(e<0){O[F]+=Math.abs(e)}else{A[F]+=e}}else{A[F]+=Math.abs(e-(e<0?W:c))}f.push(e)}}}else{e=g?Ext.Number.constrain(V[F],b,X):V[F];e=V[F]=H.normalizeValue(e);if(e!==null){f.push(e)}}}H.max=T=Math.max.apply(Math,f);H.min=N=Math.min.apply(Math,f);H.stackMax=W=M?Math.max.apply(Math,P):T;H.stackMin=c=M?Math.min.apply(Math,f):N;if(B!=null&&(g||B<N)){N=B}if(E!=null&&(g||E>T)){T=E}if(N<=0&&T>=0&&G){Z=0}else{if(G==false){Z=N}else{if(N>0){Z=N}else{Z=T}}}H.xAxisOffset=Z;I=M?(Math.max.apply(Math,A)+Math.max.apply(Math,O)):T-N;H.canvasHeightEf=(G&&N<0)?H.getHeight()-2:H.getHeight()-1;if(N<Z){J=(M&&T>=0)?W:T;a=(J-Z)/I*H.getHeight();if(a!==Math.ceil(a)){H.canvasHeightEf-=2;a=Math.ceil(a)}}else{a=H.getHeight()}H.yoffset=a;H.range=I},getRegion:function(B,C){var A=Math.floor(B/this.totalBarWidth);return(A<0||A>=this.values.length)?undefined:A},getRegionFields:function(E){var C=Ext.Array.from(this.values[E]),B=[],D,A;for(A=C.length;A--;){D=C[A];B.push({isNull:D===null,value:D,color:this.calcColor(A,D,E),offset:E})}return B},calcColor:function(G,C,H){var F=this,I=F.colorMapByIndex,E=F.colorMapByValue,D,A,B=F.getZeroColor();if(this.stacked){D=F.getStackedBarColor()}else{D=(C<0)?F.getNegBarColor():F.getBarColor()}if(C===0&&B!==undefined){D=B}if(E&&(A=E.get(C))){D=A}else{if(I&&I.length>H){D=I[H]}}return Ext.isArray(D)?D[G%D.length]:D},renderRegion:function(S,O){var G=this,W=G.values[S],H=G.xAxisOffset,D=G.range,F=G.stacked,A=G.canvas,J=G.getBarWidth(),K=S*G.totalBarWidth,L=G.canvasHeightEf,Q=G.yoffset,T,U,I,B,V,R,M,P,E,C,N=G.getNullColor();W=Ext.isArray(W)?W:[W];M=W.length;P=W[0];B=G.all(W,null);C=G.all(W,H,true);if(B){if(N){I=O?N:G.calcHighlightColor(N,G);T=(Q>0)?Q-1:Q;A.drawRect(K,T,J-1,0,I,I).append()}return}V=Q;for(R=0;R<M;R++){P=W[R];if(F&&P===H){if(!C||E){continue}E=true}if(D>0){U=Math.floor(L*((Math.abs(P-H)/D)))+1}else{U=1}if(P<H||(P===H&&Q===0)){T=V;V+=U}else{T=Q-U;Q-=U}I=G.calcColor(R,P,S);if(O){I=G.calcHighlightColor(I,G)}A.drawRect(K,T,J-1,U-1,I,I).append()}}},function(A){A.onClassCreated(A)});