Ext.define("Ext.picker.Time",{extend:"Ext.view.BoundList",alias:"widget.timepicker",requires:["Ext.data.Store","Ext.Date"],increment:15,format:"g:i A",displayField:"disp",initDate:[2008,0,1],componentCls:Ext.baseCSSPrefix+"timepicker",loadMask:false,initComponent:function(){var B=this,A=Ext.Date,C=A.clearTime,D=B.initDate;B.absMin=C(new Date(D[0],D[1],D[2]));B.absMax=A.add(C(new Date(D[0],D[1],D[2])),"mi",(24*60)-1);B.store=B.createStore();B.updateList();B.callParent()},setMinValue:function(A){this.minValue=A;this.updateList()},setMaxValue:function(A){this.maxValue=A;this.updateList()},normalizeDate:function(B){var A=this.initDate;B.setFullYear(A[0],A[1],A[2]);return B},updateList:function(){var B=this,A=B.normalizeDate(B.minValue||B.absMin),E=B.normalizeDate(B.maxValue||B.absMax),D=B.getStore().getFilters(),C=B.rangeFilter;D.beginUpdate();if(C){D.remove(C)}C=B.rangeFilter=new Ext.util.Filter({filterFn:function(F){var G=F.get("date");return G>=A&&G<=E}});D.add(C);D.endUpdate()},createStore:function(){var C=this,A=Ext.Date,B=[],D=C.absMin,E=C.absMax;while(D<=E){B.push({disp:A.dateFormat(D,C.format),date:D});D=A.add(D,"mi",C.increment)}return new Ext.data.Store({model:C.modelType,autoDestroy:true,data:B})},focusNode:function(A){return false}},function(){this.prototype.modelType=Ext.define(null,{extend:"Ext.data.Model",fields:["disp","date"]})});