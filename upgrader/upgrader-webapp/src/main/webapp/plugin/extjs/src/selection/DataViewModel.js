Ext.define("Ext.selection.DataViewModel",{extend:"Ext.selection.Model",requires:["Ext.util.KeyNav"],deselectOnContainerClick:true,enableKeyNav:true,bindComponent:function(C){var A=this,B={refresh:A.refresh,scope:A};A.view=C;A.bindStore(C.getStore());B[C.triggerEvent]=A.onItemClick;B[C.triggerCtEvent]=A.onContainerClick;C.on(B);if(A.enableKeyNav){A.initKeyNav(C)}},onUpdate:function(A){var B=this.view;if(B&&this.isSelected(A)){B.onItemSelect(A)}},onItemClick:function(C,E,B,D,A){this.selectWithEvent(E,A)},onContainerClick:function(){if(this.deselectOnContainerClick){this.deselectAll()}},initKeyNav:function(B){var A=this;if(!B.rendered){B.on({render:Ext.Function.bind(A.initKeyNav,A,[B]),single:true});return}B.el.set({tabIndex:-1});A.keyNav=new Ext.util.KeyNav({target:B.el,ignoreInputFields:true,down:Ext.pass(A.onNavKey,[1],A),right:Ext.pass(A.onNavKey,[1],A),left:Ext.pass(A.onNavKey,[-1],A),up:Ext.pass(A.onNavKey,[-1],A),scope:A})},onNavKey:function(A){A=A||1;var B=this,E=B.view,F=B.getSelection()[0],C=B.view.store.getCount(),D;if(F){D=E.indexOf(E.getNode(F))+A}else{D=0}if(D<0){D=C-1}else{if(D>=C){D=0}}B.select(D)},onSelectChange:function(D,B,C,E){var F=this,A=F.view,G=B?"select":"deselect";if((C||F.fireEvent("before"+G,F,D))!==false&&E()!==false){if(A){if(B){A.onItemSelect(D)}else{A.onItemDeselect(D)}}if(!C){F.fireEvent(G,F,D)}}},onLastFocusChanged:function(A,D,B){var C=this.view;if(C&&!B&&D){C.focusNode(D);this.fireEvent("focuschange",this,A,D)}},destroy:function(){Ext.destroy(this.keyNav);this.callParent()}});