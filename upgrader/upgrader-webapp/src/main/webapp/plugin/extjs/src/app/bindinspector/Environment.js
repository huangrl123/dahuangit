Ext.define("Ext.app.bindinspector.Environment",{requires:["Ext.util.Collection"],getCmp:function(A){return this.components.get(A)},getVM:function(A){return this.viewModels.get(A)},getInheritedVM:function(C){var A=C.viewModel,B=C.parent;if(A){return A}if(B){return this.getInheritedVM(this.getCmp(B))}return null},captureSnapshot:function(){var A=Ext.ComponentManager.getAll(),C=A.length,E=[],B,D;this.models={};for(B=0;B<C;++B){D=A[B];if(D.afterRender&&this.isRootComponent(D)){E.push(this.buildComponent(D))}}return{isBindData:true,version:Ext.getVersion().version,models:this.models,components:E}},serializeModel:function(A){var B=this.models,C=A.entityName;if(!B[C]){B[C]=Ext.Array.map(A.getFields(),function(D){return{name:D.getName(),type:D.getType()}})}},isRootComponent:function(A){var B=A.getRefOwner();if(B||A.isBindInspector||A===Ext.MessageBox||A.is("quicktip")){return false}return true},buildComponent:function(E){var C=E.getRefItems?E.getRefItems():null,I=E.getViewModel(),A=E.getBind(),F=E.id,H,D,G,B;if(A){A=this.buildBind(A)}G={id:F,xtype:E.getXType(),publishes:E.getPublishes(),viewModel:I?this.buildViewModel(I,E):null,bindings:A||null,reference:E.reference||null,items:[]};if(C){for(D=0,H=C.length;D<H;++D){if(C[D].afterRender){B=this.buildComponent(C[D]);B.parent=F;G.items.push(B)}}}return G},buildBind:function(G){var D={},A,C,B,E,F;for(A in G){C=G[A];F=C.stub;B={id:C.id,value:this.serializeValue(C.getRawValue()),stub:F?{id:F.id,name:F.name}:null};if(C.isTemplateBinding){B.isTemplateBinding=true;B.tokens=[];Ext.Array.forEach(C.tokens,function(H){B.tokens.push(H.split("."))},this);B.descriptor=C.tpl.text}else{if(C.isMultiBinding){B.isMultiBinding=true}else{if(F){E=this.buildStubName(F);B.tokens=E.split(".");B.descriptor="{"+E+"}"}}}D[A]=B}return D},buildStubName:function(A){var C=A.parent,B="";if(C&&!C.isRootStub){B=this.buildStubName(C)+"."}return B+A.name},buildViewModel:function(A,C){var B=A.getParent();return{id:A.getId(),view:C.id,parent:B?B.getId():null,data:this.serializeValue(A.getData(),true),rootStub:this.buildStub(A.getRoot())}},buildStub:function(B,C){var F={},D=B.children,A=B.isLinkStub,E={},H,I,G,J;if(!B.isRootStub){F.name=B.name;F.parent=B.parent?B.parent.id:null;F.isLoading=B.isLoading();F.bindCount=(B.bindings&&B.bindings.length)||0;F.cumulativeBindCount=F.bindCount;F.value=this.serializeValue(B.getRawValue());if(A){J=B.target===B.owner;F.linkInfo={sameTarget:J,descriptor:B.linkDescriptor,value:this.serializeValue(B.binding.getValue())};C=true}}else{F.name="";F.isLoading=false;F.bindCount=F.cumulativeBindCount=0}if(D){for(H in D){I=true;G=this.buildStub(D[H],C);E[H]=G;F.cumulativeBindCount+=G.cumulativeBindCount}}if(I){F.children=E}return F},createModel:function(B,C){var A=Ext.app.bindinspector.noconflict[B];return new A(C)},unpackSnapshot:function(A){this.components=new Ext.util.Collection();this.viewModels=new Ext.util.Collection();Ext.Object.each(A.models,function(B,C){Ext.define("Ext.app.bindinspector.noconflict."+B,{extend:"Ext.app.bindinspector.noconflict.BaseModel",fields:C})});Ext.Array.forEach(A.components,function(B){this.unpackComponent(B,this.components,this.viewModels)},this);this.rootComponents=A.components},unpackComponent:function(J,K,G){var B=J.viewModel,M=J.items,D=J.bindings,L,H,I,C,A,F,E;K.add(J);if(D){for(F in D){E=D[F];E.value=this.deserializeValue(E.value)}}if(B){G.add(B);I=this.getVM(B.parent);if(I){C=Ext.Object.chain(I.data)}A=this.deserializeValue(B.data);if(C){A=Ext.apply(C,A)}B.data=A;this.deserializeStub(B.rootStub)}if(M){for(H=0,L=M.length;H<L;++H){this.unpackComponent(M[H],K,G)}}},serializeValue:function(A,C){var D={},F,E,H,B,G;if(A&&A.constructor===Object){F="object";D.value={};for(E in A){if(!(C&&!A.hasOwnProperty(E))){B=this.serializeValue(A[E],C);H={type:B.type,value:B.value};if(B.entityName){H.entityName=B.entityName}D.value[E]=H}}}else{if(A&&A.isModel){F="model";D.entityName=A.entityName;this.serializeModel(A.self);D.value=this.serializeValue(A.data)}else{if(A&&A.isStore){F="store";G=A.getModel();D.entityName=G.entityName;if(G.entityName){this.serializeModel(G)}}else{if(Ext.isDate(A)){F="date";D.value=Ext.Date.format(A,"c")}else{if(Ext.isArray(A)){F="array";D.value=[];Ext.Array.forEach(A,function(I){D.value.push(this.serializeValue(I))},this)}else{F=Ext.typeOf(A);D.value=A}}}}}D.type=F;return D},deserializeValue:function(D){var A=D.type,E=D.value,C,B;if(A==="null"){C=null}else{if(A==="undefined"){C=undefined}else{if(A==="string"||A==="boolean"||A==="number"){C=E}else{if(A==="date"){C=Ext.Date.parse(E,"c")}else{if(A==="object"){C={};for(B in E){C[B]=this.deserializeValue(E[B])}}else{if(A==="model"){C=this.createModel(D.entityName,this.deserializeValue(E))}else{if(A==="store"){C={isStore:true,entityName:D.entityName}}else{if(A==="array"){C=[];Ext.Array.forEach(E,function(F){C.push(this.deserializeValue(F))},this)}}}}}}}}return C},deserializeStub:function(B){var D=B.children,C=B.linkInfo,A;if(B.value){B.value=this.deserializeValue(B.value)}if(C){C.value=this.deserializeValue(C.value)}if(D){for(A in D){this.deserializeStub(D[A])}}}});