Ext.define("Ext.dd.DropZone",{extend:"Ext.dd.DropTarget",requires:["Ext.dd.Registry"],getTargetFromEvent:function(A){return Ext.dd.Registry.getTargetFromEvent(A)},onNodeEnter:function(A,D,C,B){},onNodeOver:function(A,D,C,B){return this.dropAllowed},onNodeOut:function(A,D,C,B){},onNodeDrop:function(A,D,C,B){return false},onContainerOver:function(C,A,B){return this.dropNotAllowed},onContainerDrop:function(C,A,B){return false},notifyEnter:function(C,A,B){return this.dropNotAllowed},notifyOver:function(D,A,B){var C=this.getTargetFromEvent(A);if(!C){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,D,A,B);this.lastOverNode=null}return this.onContainerOver(D,A,B)}if(this.lastOverNode!=C){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,D,A,B)}this.onNodeEnter(C,D,A,B);this.lastOverNode=C}return this.onNodeOver(C,D,A,B)},notifyOut:function(C,A,B){if(this.lastOverNode){this.onNodeOut(this.lastOverNode,C,A,B);this.lastOverNode=null}},notifyDrop:function(F,A,B){var D=this,C=D.getTargetFromEvent(A),E=C?D.onNodeDrop(C,F,A,B):D.onContainerDrop(F,A,B);if(D.lastOverNode){D.onNodeOut(D.lastOverNode,F,A,B);D.lastOverNode=null}return E},triggerCacheRefresh:function(){Ext.dd.DDM.refreshCache(this.groups)}});