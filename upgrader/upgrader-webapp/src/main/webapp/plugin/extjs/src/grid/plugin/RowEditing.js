Ext.define("Ext.grid.plugin.RowEditing",{extend:"Ext.grid.plugin.Editing",alias:"plugin.rowediting",requires:["Ext.grid.RowEditor"],lockableScope:"top",editStyle:"row",autoCancel:true,errorSummary:true,constructor:function(){var A=this;A.callParent(arguments);if(!A.clicksToMoveEditor){A.clicksToMoveEditor=A.clicksToEdit}A.autoCancel=!!A.autoCancel},destroy:function(){Ext.destroy(this.editor);this.callParent(arguments)},onBeforeReconfigure:function(){this.callParent(arguments);this.cancelEdit()},onReconfigure:function(D,B,C){var A=this.editor;this.callParent(arguments);if(C&&A&&A.rendered){A.needsSyncFieldWidths=true}},shouldStartEdit:function(A){return true},startEdit:function(C,E){var B=this,D=B.getEditor(),A;if(Ext.isEmpty(E)){E=B.grid.getTopLevelVisibleColumnManager().getHeaderAtIndex(0)}if(D.beforeEdit()!==false){A=B.callParent([C,E]);if(A){B.context=A;if(B.lockingPartner){B.lockingPartner.cancelEdit()}D.startEdit(A.record,A.column,A);B.editing=true;return true}}return false},cancelEdit:function(){var A=this;if(A.editing){A.getContextFieldValues();A.getEditor().cancelEdit();A.callParent(arguments);return}return true},completeEdit:function(){var A=this;if(A.editing&&A.validateEdit()){A.editing=false;A.fireEvent("edit",A,A.context)}},validateEdit:function(){this.getContextFieldValues();return this.callParent(arguments)&&this.getEditor().completeEdit()},getEditor:function(){var A=this;if(!A.editor){A.editor=A.initEditor()}return A.editor},getContextFieldValues:function(){var A=this.editor,D=this.context,H=D.record,C={},F={},I=A.query(">[isFormField]"),G=I.length,E,B,J;for(E=0;E<G;E++){J=I[E];B=J.dataIndex;C[B]=J.getValue();F[B]=H.get(B)}Ext.apply(D,{newValues:C,originalValues:F})},initEditor:function(){return new Ext.grid.RowEditor(this.initEditorConfig())},initEditorConfig:function(){var B=this,H=B.grid,A=B.view,I=H.headerCt,D=["saveBtnText","cancelBtnText","errorsText","dirtyText"],F,C=D.length,G={autoCancel:B.autoCancel,errorSummary:B.errorSummary,fields:I.getGridColumns(),hidden:true,view:A,editingPlugin:B},E;for(F=0;F<C;F++){E=D[F];if(Ext.isDefined(B[E])){G[E]=B[E]}}return G},initEditTriggers:function(){var B=this,C=B.view,A=B.clicksToMoveEditor===1?"click":"dblclick";B.callParent(arguments);if(B.clicksToMoveEditor!==B.clicksToEdit){B.mon(C,"cell"+A,B.moveEditorByClick,B)}C.on({render:function(){B.mon(B.grid.headerCt,{scope:B,columnresize:B.onColumnResize,columnhide:B.onColumnHide,columnshow:B.onColumnShow})},single:true})},startEditByClick:function(){var A=this;if(!A.editing||A.clicksToMoveEditor===A.clicksToEdit){A.callParent(arguments)}},moveEditorByClick:function(){var A=this;if(A.editing){A.superclass.onCellClick.apply(A,arguments)}},onColumnAdd:function(B,D){if(D.isHeader){var A=this,C;A.initFieldAccessors(D);C=A.editor;if(C){C.onColumnAdd(D)}}},beforeGridHeaderDestroy:function(B){var F=this.grid.getColumnManager().getColumns(),C=F.length,A,E,D;for(A=0;A<C;A++){E=F[A];if(E.hasEditor){if(E.hasEditor()&&(D=E.getEditor())){D.destroy()}this.removeFieldAccessors(E)}}},onColumnResize:function(C,E,D){if(E.isHeader){var A=this,B=A.getEditor();if(B){B.onColumnResize(E,D)}}},onColumnHide:function(B,D){var A=this,C=A.getEditor();if(C){C.onColumnHide(D)}},onColumnShow:function(B,D){var A=this,C=A.getEditor();if(C){C.onColumnShow(D)}},onColumnMove:function(D,F,C,B){var A=this,E=A.getEditor();A.initFieldAccessors(F);if(E){E.onColumnMove(F,C,B)}},setColumnField:function(D,B){var A=this,C=A.getEditor();if(C){C.destroyColumnEditor(D)}A.callParent(arguments);if(C){C.insertColumnEditor(D)}},createColumnField:function(D,A){var C=this.editor,B;if(C){B=C.getDefaultFieldCfg()}return this.callParent([D,A||B])}});