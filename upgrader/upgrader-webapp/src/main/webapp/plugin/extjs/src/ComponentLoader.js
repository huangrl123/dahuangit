Ext.define("Ext.ComponentLoader",{extend:"Ext.ElementLoader",statics:{Renderer:{Data:function(D,E,C){var A=true;try{D.getTarget().update(Ext.decode(E.responseText))}catch(B){A=false}return A},Component:function(E,G,C){var A=true,F=E.getTarget(),D=[];if(!F.isContainer){Ext.Error.raise({target:F,msg:"Components can only be loaded into a container"})}try{D=Ext.decode(G.responseText)}catch(B){A=false}if(A){F.suspendLayouts();if(C.removeAll){F.removeAll()}F.add(D);F.resumeLayouts(true)}return A}}},target:null,loadMask:false,renderer:"html",setTarget:function(B){var A=this;if(Ext.isString(B)){B=Ext.getCmp(B)}if(A.target&&A.target!=B){A.abort()}A.target=B},removeMask:function(){this.target.setLoading(false)},addMask:function(A){this.target.setLoading(A)},setOptions:function(A,B){A.removeAll=Ext.isDefined(B.removeAll)?B.removeAll:this.removeAll},getRenderer:function(A){if(Ext.isFunction(A)){return A}var B=this.statics().Renderer;switch(A){case"component":return B.Component;case"data":return B.Data;default:return Ext.ElementLoader.Renderer.Html}}});