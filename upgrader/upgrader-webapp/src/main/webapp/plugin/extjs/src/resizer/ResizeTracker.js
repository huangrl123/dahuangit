Ext.define("Ext.resizer.ResizeTracker",{extend:"Ext.dd.DragTracker",dynamic:true,preserveRatio:false,constrainTo:null,proxyCls:Ext.baseCSSPrefix+"resizable-proxy",constructor:function(B){var C=this,D,A,E;if(!B.el){if(B.target.isComponent){C.el=B.target.getEl()}else{C.el=B.target}}this.callParent(arguments);if(C.preserveRatio&&C.minWidth&&C.minHeight){D=C.minWidth/C.el.getWidth();A=C.minHeight/C.el.getHeight();if(A>D){C.minWidth=C.el.getWidth()*A}else{C.minHeight=C.el.getHeight()*D}}if(C.throttle){E=Ext.Function.createThrottled(function(){Ext.resizer.ResizeTracker.prototype.resize.apply(C,arguments)},C.throttle);C.resize=function(F,H,G){if(G){Ext.resizer.ResizeTracker.prototype.resize.apply(C,arguments)}else{E.apply(null,arguments)}}}},onBeforeStart:function(A){this.startBox=this.target.getBox()},getProxy:function(){var A=this;if(!A.dynamic&&!A.proxy){A.proxy=A.createProxy(A.target||A.el);A.hideProxy=true}if(A.proxy){A.proxy.show();return A.proxy}},createProxy:function(C){var A,B=this.proxyCls;if(C.isComponent){A=C.getProxy().addCls(B)}else{A=C.createProxy({tag:"div",role:"presentation",cls:B,id:C.id+"-rzproxy"},Ext.getBody())}A.removeCls(Ext.baseCSSPrefix+"proxy-el");return A},onStart:function(A){this.activeResizeHandle=Ext.get(this.getDragTarget().id);if(!this.dynamic){this.resize(this.startBox)}},onDrag:function(A){if(this.dynamic||this.proxy){this.updateDimensions(A)}},updateDimensions:function(C,N){var F=this,J=F.activeResizeHandle.region,K=F.getOffset(F.constrainTo?"dragTarget":null),E=F.startBox,S,H=0,D=0,I,G,A=0,B=0,P,R,M,Q,O,L;J=F.convertRegionName(J);switch(J){case"south":D=K[1];M=2;break;case"north":D=-K[1];B=-D;M=2;break;case"east":H=K[0];M=1;break;case"west":H=-K[0];A=-H;M=1;break;case"northeast":D=-K[1];B=-D;H=K[0];R=[E.x,E.y+E.height];M=3;break;case"southeast":D=K[1];H=K[0];R=[E.x,E.y];M=3;break;case"southwest":H=-K[0];A=-H;D=K[1];R=[E.x+E.width,E.y];M=3;break;case"northwest":D=-K[1];B=-D;H=-K[0];A=-H;R=[E.x+E.width,E.y+E.height];M=3;break}Q={width:E.width+H,height:E.height+D,x:E.x+A,y:E.y+B};I=Ext.Number.snap(Q.width,F.widthIncrement);G=Ext.Number.snap(Q.height,F.heightIncrement);if(I!=Q.width||G!=Q.height){switch(J){case"northeast":Q.y-=G-Q.height;break;case"north":Q.y-=G-Q.height;break;case"southwest":Q.x-=I-Q.width;break;case"west":Q.x-=I-Q.width;break;case"northwest":Q.x-=I-Q.width;Q.y-=G-Q.height}Q.width=I;Q.height=G}if(Q.width<F.minWidth||Q.width>F.maxWidth){Q.width=Ext.Number.constrain(Q.width,F.minWidth,F.maxWidth);if(A){Q.x=E.x+(E.width-Q.width)}}else{F.lastX=Q.x}if(Q.height<F.minHeight||Q.height>F.maxHeight){Q.height=Ext.Number.constrain(Q.height,F.minHeight,F.maxHeight);if(B){Q.y=E.y+(E.height-Q.height)}}else{F.lastY=Q.y}if(F.preserveRatio||C.shiftKey){S=F.startBox.width/F.startBox.height;O=Math.min(Math.max(F.minHeight,Q.width/S),F.maxHeight);L=Math.min(Math.max(F.minWidth,Q.height*S),F.maxWidth);if(M==1){Q.height=O}else{if(M==2){Q.width=L}else{P=Math.abs(R[0]-this.lastXY[0])/Math.abs(R[1]-this.lastXY[1]);if(P>S){Q.height=O}else{Q.width=L}if(J=="northeast"){Q.y=E.y-(Q.height-E.height)}else{if(J=="northwest"){Q.y=E.y-(Q.height-E.height);Q.x=E.x-(Q.width-E.width)}else{if(J=="southwest"){Q.x=E.x-(Q.width-E.width)}}}}}}F.setPosition=Q.x!==F.startBox.x||Q.y!==F.startBox.y;F.resize(Q,N)},resize:function(A,B){var C=this,D,E=C.setPosition;if(C.dynamic||(!C.dynamic&&B)){if(E){C.target.setBox(A)}else{C.target.setSize(A.width,A.height)}}if(!B){D=C.getProxy();if(D&&D!==C.target){if(E||C.hideProxy){D.setBox(A)}else{D.setSize(A.width,A.height)}}}},onEnd:function(A){this.updateDimensions(A,true);if(this.proxy&&this.hideProxy){this.proxy.hide()}},convertRegionName:function(A){return A}});