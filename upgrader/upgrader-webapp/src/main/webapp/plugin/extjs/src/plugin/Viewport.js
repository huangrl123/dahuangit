Ext.define("Ext.plugin.Viewport",{extend:"Ext.plugin.Responsive",alias:"plugin.viewport",setCmp:function(A){this.cmp=A;if(A&&!A.isViewport){this.apply(A);if(A.renderConfigs){A.flushRenderConfigs()}A.setupViewport()}},statics:{apply:function(A){Ext.applyIf(A.prototype||A,{ariaRole:"application",viewportCls:Ext.baseCSSPrefix+"viewport"});Ext.override(A,{isViewport:true,preserveElOnDestroy:true,initComponent:function(){this.callParent();this.setupViewport()},handleViewportResize:function(){var C=this,D=Ext.dom.Element,E=D.getViewportWidth(),B=D.getViewportHeight();if(E!=C.width||B!=C.height){C.setSize(E,B)}},setupViewport:function(){var D=this,B=document.body.parentNode,C=D.el=Ext.getBody();Ext.getScrollbarSize();D.width=D.height=undefined;Ext.fly(B).addCls(D.viewportCls);if(D.autoScroll){Ext.fly(B).setStyle(D.getOverflowStyle());delete D.autoScroll}C.setHeight=C.setWidth=Ext.emptyFn;C.dom.scroll="no";D.allowDomMove=false;D.renderTo=D.el;if(Ext.supports.Touch){D.initMeta()}},afterLayout:function(B){if(Ext.supports.Touch){document.body.scrollTop=0}this.callParent([B])},onRender:function(){var B=this;B.callParent(arguments);B.width=Ext.Element.getViewportWidth();B.height=Ext.Element.getViewportHeight();if(Ext.supports.TouchEvents){B.mon(Ext.getDoc(),{touchmove:function(C){C.preventDefault()},translate:false,delegated:false})}},initInheritedState:function(E,B){var C=this,D=Ext.rootInheritedState;if(E!==D){C.initInheritedState(C.inheritedState=D,C.inheritedStateInner=Ext.Object.chain(D))}else{C.callParent([E,B])}},beforeDestroy:function(){var B=this;B.removeUIFromElement();B.el.removeCls(B.baseCls);Ext.fly(document.body.parentNode).removeCls(B.viewportCls);B.callParent()},addMeta:function(C,D){var B=document.createElement("meta");B.setAttribute("name",C);B.setAttribute("content",D);Ext.getHead().appendChild(B)},initMeta:function(){var C=this,B=C.maxUserScale||1;C.addMeta("viewport","width=device-width, initial-scale=1, maximum-scale="+B+", user-scalable="+(B!==1?"yes":"no"));C.addMeta("apple-mobile-web-app-capable","yes")},privates:{applyTargetCls:function(B){this.el.addCls(B)}}})}},privates:{updateResponsiveState:function(){this.cmp.handleViewportResize();this.callParent()}}},function(A){A.prototype.apply=A.apply});