Ext.define("Ext.sparkline.TriState",{extend:"Ext.sparkline.BarBase",requires:["Ext.sparkline.RangeMap"],alias:"widget.sparklinetristate",config:{barWidth:4,barSpacing:1,posBarColor:"#6f6",negBarColor:"#f44",zeroBarColor:"#999",colorMap:{},tipTpl:new Ext.XTemplate("&#9679; {value:this.states}",{states:function(A){var B=Number(A);if(B===-1){return"Loss"}if(B===0){return"Draw"}if(B===1){return"Win"}return A}})},applyColorMap:function(A){var B=this;if(Ext.isArray(A)){B.colorMapByIndex=A;B.colorMapByValue=null}else{B.colorMapByIndex=null;B.colorMapByValue=A;if(B.colorMapByValue&&B.colorMapByValue.get==null){B.colorMapByValue=new Ext.sparkline.RangeMap(A)}}return A},applyValues:function(A){A=Ext.Array.map(Ext.Array.from(A),Number);this.disabled=!(A&&A.length);return A},onUpdate:function(){this.totalBarWidth=this.getBarWidth()+this.getBarSpacing()},getBarWidth:function(){var A=this.values;return this._barWidth||(this.getWidth()-(A.length-1)*this.getBarSpacing())/A.length},getRegion:function(A,B){return Math.floor(A/this.totalBarWidth)},getRegionFields:function(A){return{isNull:this.values[A]==null,value:this.values[A],color:this.calcColor(this.values[A],A),offset:A}},calcColor:function(D,G){var A=this,E=A.values,H=A.colorMapByIndex,F=A.colorMapByValue,C,B;if(F&&(B=F.get(D))){C=B}else{if(H&&H.length>G){C=H[G]}else{if(E[G]<0){C=A.getNegBarColor()}else{if(E[G]>0){C=A.getPosBarColor()}else{C=A.getZeroBarColor()}}}}return C},renderRegion:function(J,F){var A=this,G=A.values,B=A.canvas,I,C,H,D,K,E;I=B.pixelHeight;H=Math.round(I/2);D=J*A.totalBarWidth;if(G[J]<0){K=H;C=H-1}else{if(G[J]>0){K=0;C=H-1}else{K=H-1;C=2}}E=A.calcColor(G[J],J);if(E==null){return}if(F){E=A.calcHighlightColor(E)}B.drawRect(D,K,A.getBarWidth()-1,C-1,E,E).append()}});