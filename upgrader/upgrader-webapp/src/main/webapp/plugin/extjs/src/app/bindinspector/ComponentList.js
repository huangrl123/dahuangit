Ext.define("Ext.app.bindinspector.ComponentList",{alias:"widget.bindinspector-componentlist",extend:"Ext.tree.Panel",requires:["Ext.form.field.Text"],rootVisible:false,title:"Component Tree",hideHeaders:true,bindingsIconCls:Ext.baseCSSPrefix+"bindings-icon",vmIconCls:Ext.baseCSSPrefix+"vm-icon",missingDataCls:Ext.baseCSSPrefix+"bindinspector-missing-data",filterVisibleCls:Ext.baseCSSPrefix+"bindinspector-filter-visible",lastItemCls:Ext.baseCSSPrefix+"bindinspector-last-item",bindingsIcon:"☍",vmIcon:"☶",initComponent:function(){var A=this,B=[];A.viewConfig={toggleOnDblClick:false,getRowClass:function(E,F,G,C){var D=[];if(E.get("filtervisible")){D.push(A.filterVisibleCls)}if(E.get("sansData")){D.push(A.missingDataCls)}if(F===C.getCount()-1){D.push(A.lastItemCls)}return D.join(" ")}};Ext.Array.forEach(A.components,function(C){B.push(A.buildNode(C))},A);A.store={model:A.Model,root:{expanded:true,children:B}};A.columns=[{itemId:"srcVMIndicator",width:40,hidden:true,renderer:A.srcVMIndicator,scope:A},{xtype:"treecolumn",dataIndex:"text",flex:1}];A.dockedItems=[{xtype:"toolbar",itemId:"queryFieldTb",dock:"top",items:[{xtype:"textfield",reference:"queryField",itemId:"queryField",emptyText:"simple search by reference / ID or use a component query...",flex:1,triggers:{clear:{cls:Ext.baseCSSPrefix+"form-clear-trigger",handler:function(E){var C=E.up("treepanel"),D=C.store;E.reset();C.clearComponentFilter();E.focus()}}},listeners:{change:{fn:A.filterComponentTree,buffer:250,scope:A},afterrender:{fn:function(D){var C=D.up("toolbar").getEl();D.mon(C,"mouseenter",function(){var E=A.bindingsTip,F,G,H;E.stopAnimation();E.update("<b>Simple Search</b><br>Enter the string matching the reference or ID of the target component<hr><b>Component Query</b><br>Enter a component query string to find any items matching the query");E.setTarget(C);E.show();G=E.getX();H=E.getY();F=E.getAlignToXY(C,"l-r");E.animate({from:{opacity:0,x:F[0]+20,y:F[1]},to:{opacity:1,x:F[0]+10,y:F[1]}})})},scope:A}}}]},{xtype:"toolbar",cls:Ext.baseCSSPrefix+"vm-results-tb",itemId:"vmQueryResultsTb",hidden:true,dock:"top",defaultButtonUI:"default",items:["->",{text:"Clear VM Filter",handler:function(){console.log(this.up("#vmQueryResultsTb"));var C=this.up("#vmQueryResultsTb"),E=C.up("bindinspector-componentlist"),D=E.down("#queryFieldTb"),F=D.down("#queryField");C.hide();D.show();E.clearVMSearchIndicators();F.setValue(F.lastValue);E.filterComponentTree(null,F.lastValue)}}]}];A.callParent();A.getView().on("itemdblclick",A.onItemDblclick,A);A.on("select",A.onItemSelect,A);A.bindingsTip=Ext.create("Ext.tip.ToolTip",{renderTo:document.body,anchor:"left",cls:Ext.baseCSSPrefix+"componentlist-tip",bodyPadding:12});A.getView().on("itemmouseenter",A.showBindingsTip,A)},clearVMSearchIndicators:function(){var A=this.indicatedVM;Ext.suspendLayouts();if(A){Ext.Array.forEach(A,function(B){B.set("isSrcVM",false)})}this.down("#srcVMIndicator").hide();Ext.resumeLayouts(true);this.indicatedVM=null},srcVMIndicator:function(C,F,B){var A=B.get("isSrcVM"),I="",H,E,G,D;if(A){H=this.up("bindinspector-container").down("bindinspector-viewmodeldetail");E=H.getFirstTierRec(A);G=E.get("name");if(E!==A){I+="Root data node: &nbsp;<span class='"+Ext.baseCSSPrefix+"binding-tip-descriptor'>"+G+"</span><hr>"}D=E===A?E:A;I+=D.get("name")+":";I+="<br>&nbsp;&nbsp;&nbsp;&nbsp;";I+="<span class='"+Ext.baseCSSPrefix+"binding-tip-value'>"+Ext.app.bindinspector.Util.valueRenderer(D.get("value"))+"</span>";F.tdCls=Ext.baseCSSPrefix+"bindindicator-vm-src";F.tdAttr='data-qclass="'+Ext.baseCSSPrefix+'componentlist-tip" data-qtip="'+I+'"'}},onDestroy:function(){this.bindingsTip.destroy();this.callParent()},showBindingsTip:function(A,H,J,C,E){var G=this,F=G.bindingsTip,B=H.get("sansData"),D,I;F.stopAnimation();if(H.get("hasBindings")){D=G.ownerCt.env.getCmp(H.get("id")).bindings;I=[];Ext.Object.each(D,function(K,P,L){var O=K+': <span class="'+Ext.baseCSSPrefix+'binding-tip-descriptor">'+P.descriptor+"</span><br>",M=P.value,N;if(Ext.isString(M)){N=M}else{if(Ext.isObject(M)){if(M.isStore===true){N="Store {"+M.entityName+"}"}else{if(M.isModel===true){N="Model {"+M.entityName+"}"}}}}O+='<span class="'+Ext.baseCSSPrefix+'binding-tip-value">'+N+"</span>";I.push(O)});I=I.join("<hr>");if(B){I+="<hr>";Ext.Array.forEach(B,function(K){I+='<div class="'+Ext.baseCSSPrefix+'binding-missing-data">Missing data: '+K+"</div>"})}F.update(I);F.setTarget(J);F.show();F.alignTo(J,"l-r",[20,0]);F.animate({from:{opacity:0},to:{opacity:1,x:F.getX()-10}})}},filterComponentTree:function(H,G){var L=this,H=L.down("#queryField"),C=G||H.getValue(),J=L.store,B=/[\s>\[\]=()^'"~$@*:+#,]/g,I=Ext.isArray(C),M=I?C:[],A=[],E,K,F;if(Ext.isString(C)){E=B.test(Ext.String.trim(C))}if(C.length>0){L.filteredComponents=[];if(E){try{A=Ext.ComponentQuery.query(C)}catch(D){}K=A.length;for(F=0;F<K;F++){M.push(A[F].id)}}J.suspendEvents();J.filter({filterFn:function(P){var S=P.childNodes,N=S&&S.length,O=false,Q,R;if(E||I){O=Ext.Array.contains(M,P.get("id"))}else{O=P.get("text").indexOf(C)>-1}P.set("filtervisible",O);if(O){L.filteredComponents.push(P)}for(R=0;R<N;R++){if(S[R].get("visible")){O=true}}return O},id:"queryFilter"});J.resumeEvents();L.getView().refresh()}else{L.clearComponentFilter()}},clearComponentFilter:function(){var A=this,C=A.store,E=A.filteredComponents||[],D=E.length,B=0;for(;B<D;B++){E[B].set("filtervisible",false)}C.clearFilter()},buildNode:function(G){var F=this,J=F.getRefOwner(),L=G.items,O=G.viewModel,A=G.bindings,I=!!G.bindings,C=[],N=[],K={},Q,B,E,P,D,R,M,H;if(O){C.push('<span class="'+F.vmIconCls+'">'+F.vmIcon+"</span>");J.buildVMDataMap(O)}if(I){C.push('<span class="'+F.bindingsIconCls+'">'+F.bindingsIcon+"</span>");for(M in A){Q=A[M];if(Q.descriptor&&Ext.isEmpty(Q.value)){N.push(K[M]=Q.descriptor)}}H=G.bindData=Ext.app.bindinspector.Util.buildBindData(A)}if(N.length===0){N=undefined}R=G.reference?"<b>["+G.reference+"]</b> &bull; ":"";P={id:G.id,text:R+G.id+(C.length?(" "+C.join(" ")):""),hasViewModel:!!O,hasBindings:I,hasDeepBindings:I,reference:G.reference,sansData:N,bindData:H,children:[]};if(L){for(E=0,B=L.length;E<B;++E){D=F.buildNode(L[E]);P.hasDeepBindings=P.hasDeepBindings||D.hasDeepBindings;if(D.hasDeepBindings){P.children.push(D)}}}if(P.children.length){P.expanded=true;P.leaf=false}else{P.leaf=true}return P},onItemDblclick:function(B,A){this.fireEvent("componentdblclick",this,A)},onItemSelect:function(C,A){var B=this.getView().getNode(A);this.fireEvent("componentselect",this,A,B)}},function(){this.prototype.Model=Ext.define(null,{extend:"Ext.data.TreeModel",fields:["hasViewModel","hasBindings","reference","hasDeepBindings","reference","sansData","bindData","isSrcVM"]})});