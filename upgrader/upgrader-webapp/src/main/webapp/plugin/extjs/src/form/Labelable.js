Ext.define("Ext.form.Labelable",{extend:"Ext.Mixin",requires:["Ext.XTemplate","Ext.overrides.dom.Element"],isLabelable:true,mixinConfig:{id:"labelable",on:{beforeRender:"beforeLabelRender",onRender:"onLabelRender"}},config:{childEls:["labelEl","bodyEl","errorEl","errorWrapEl"]},labelableRenderTpl:["{beforeLabelTpl}",'<label id="{id}-labelEl" data-ref="labelEl" class="{labelCls} {labelCls}-{ui} {labelClsExtra} ','{unselectableCls}" style="{labelStyle}"<tpl if="inputId">',' for="{inputId}"</tpl> {labelAttrTpl}>','<span class="{labelInnerCls} {labelInnerCls}-{ui}" style="{labelInnerStyle}">',"{beforeLabelTextTpl}",'<tpl if="fieldLabel">{fieldLabel}','<tpl if="labelSeparator">','<span role="separator">{labelSeparator}</span>',"</tpl>","</tpl>","{afterLabelTextTpl}","</span>","</label>","{afterLabelTpl}",'<div id="{id}-bodyEl" data-ref="bodyEl" class="{baseBodyCls} {baseBodyCls}-{ui}<tpl if="fieldBodyCls">',' {fieldBodyCls} {fieldBodyCls}-{ui}</tpl> {growCls} {extraFieldBodyCls}"','<tpl if="bodyStyle"> style="{bodyStyle}"</tpl>>',"{beforeBodyEl}","{beforeSubTpl}","{[values.$comp.getSubTplMarkup(values)]}","{afterSubTpl}","{afterBodyEl}","</div>",'<tpl if="renderError">','<div id="{id}-errorWrapEl" data-ref="errorWrapEl" class="{errorWrapCls} {errorWrapCls}-{ui}',' {errorWrapExtraCls}" style="{errorWrapStyle}">','<div role="alert" aria-live="polite" id="{id}-errorEl" data-ref="errorEl" ','class="{errorMsgCls} {invalidMsgCls} {invalidMsgCls}-{ui}" ','data-anchorTarget="{id}-inputEl">',"</div>","</div>","</tpl>",{disableFormats:true}],activeErrorsTpl:undefined,htmlActiveErrorsTpl:['<tpl if="errors && errors.length">','<ul class="{listCls}">','<tpl if="Ext.enableAria">','<tpl if="fieldLabel"><div>{fieldLabel}</div></tpl>',"</tpl>",'<tpl for="errors"><li>{.}</li></tpl>',"</ul>","</tpl>"],plaintextActiveErrorsTpl:['<tpl if="errors && errors.length">','<tpl if="Ext.enableAria">','<tpl if="fieldLabel">{fieldLabel}\n</tpl>',"</tpl>",'<tpl for="errors"><tpl if="xindex &gt; 1">\n</tpl>{.}</tpl>',"</tpl>"],isFieldLabelable:true,formItemCls:Ext.baseCSSPrefix+"form-item",labelCls:Ext.baseCSSPrefix+"form-item-label",topLabelCls:Ext.baseCSSPrefix+"form-item-label-top",rightLabelCls:Ext.baseCSSPrefix+"form-item-label-right",labelInnerCls:Ext.baseCSSPrefix+"form-item-label-inner",topLabelSideErrorCls:Ext.baseCSSPrefix+"form-item-label-top-side-error",errorMsgCls:Ext.baseCSSPrefix+"form-error-msg",errorWrapCls:Ext.baseCSSPrefix+"form-error-wrap",errorWrapSideCls:Ext.baseCSSPrefix+"form-error-wrap-side",errorWrapUnderCls:Ext.baseCSSPrefix+"form-error-wrap-under",errorWrapUnderSideLabelCls:Ext.baseCSSPrefix+"form-error-wrap-under-side-label",baseBodyCls:Ext.baseCSSPrefix+"form-item-body",invalidIconCls:Ext.baseCSSPrefix+"form-invalid-icon",invalidUnderCls:Ext.baseCSSPrefix+"form-invalid-under",fieldBodyCls:"",invalidCls:Ext.baseCSSPrefix+"form-invalid",fieldLabel:undefined,labelAlign:"left",labelWidth:100,labelPad:5,labelSeparator:":",hideLabel:false,hideEmptyLabel:true,preventMark:false,autoFitErrors:true,msgTarget:"qtip",msgTargets:{qtip:1,title:1,under:1,side:1,none:1},noWrap:true,labelableInsertions:["beforeBodyEl","afterBodyEl","beforeLabelTpl","afterLabelTpl","beforeSubTpl","afterSubTpl","beforeLabelTextTpl","afterLabelTextTpl","labelAttrTpl"],statics:{initTip:function(){var A=this.tip,B;if(!A){B={id:"ext-form-error-tip",sticky:true,ui:"form-invalid"};if(Ext.supports.Touch){B.dismissDelay=0;B.anchor="top";B.showDelay=0;B.listeners={beforeshow:function(){this.minWidth=Ext.fly(this.anchorTarget).getWidth()}}}A=this.tip=Ext.create("Ext.tip.QuickTip",B);A.tagConfig=Ext.apply({},{attribute:"errorqtip"},A.tagConfig)}}},initLabelable:function(){var B=this,A=B.padding;if(A){B.padding=undefined;B.extraMargins=Ext.Element.parseBox(A)}if(!B.activeErrorsTpl){if(B.msgTarget=="title"){B.activeErrorsTpl=B.plaintextActiveErrorsTpl}else{B.activeErrorsTpl=B.htmlActiveErrorsTpl}}B.addCls([B.formItemCls,B.formItemCls+"-"+B.ui]);B.lastActiveError="";B.enableBubble("errorchange")},trimLabelSeparator:function(){var C=this,D=C.labelSeparator,A=C.fieldLabel||"",B=A.substr(A.length-1);return B===D?A.slice(0,-1):A},getFieldLabel:function(){return this.trimLabelSeparator()},setFieldLabel:function(A){A=A||"";var D=this,E=D.labelSeparator,C=D.labelEl,F=D.errorWrapEl,B=D.errorWrapUnderSideLabelCls;D.fieldLabel=A;if(D.rendered){if(Ext.isEmpty(A)&&D.hideEmptyLabel){C.setDisplayed("none");if(F){F.removeCls(B)}}else{if(E){A=D.trimLabelSeparator()+'<span role="separator">'+E+"</span>"}C.first().setHtml(A);C.setDisplayed("");if(F){F.addCls(B)}}D.updateLayout()}},getInsertionRenderData:function(E,D){var A=D.length,B,C;while(A--){B=D[A];C=this[B];if(C){if(typeof C!="string"){if(!C.isTemplate){C=Ext.XTemplate.getTpl(this,B)}C=C.apply(E)}}E[B]=C||""}return E},getLabelableRenderData:function(){var G=this,M=G.labelAlign,J=(M==="top"),I=(M==="right"),H=(G.msgTarget==="side"),K=(G.msgTarget==="under"),C=G.errorMsgCls,A=G.labelPad,L=G.labelWidth,N=G.labelClsExtra||"",F=H?G.errorWrapSideCls:G.errorWrapUnderCls,R="",B="",O=G.hasVisibleLabel(),P=G.autoFitErrors,E=G.defaultBodyWidth,D,Q;if(J){N+=" "+G.topLabelCls;if(A){B="padding-bottom:"+A+"px;"}if(H&&!P){N+=" "+G.topLabelSideErrorCls}}else{if(I){N+=" "+G.rightLabelCls}if(A){R+=G.getHorizontalPaddingStyle()+A+"px;"}R+="width:"+(L+(A?A:0))+"px;";B="width:"+L+"px"}if(O){if(!J&&K){F+=" "+G.errorWrapUnderSideLabelCls}}else{R+="display:none"}if(E){D="min-width:"+E+"px;max-width:"+E+"px;"}Q={id:G.id,inputId:G.getInputId(),labelCls:G.labelCls,labelClsExtra:N,labelStyle:R,labelInnerStyle:B,labelInnerCls:G.labelInnerCls,unselectableCls:Ext.Element.unselectableCls,bodyStyle:D,baseBodyCls:G.baseBodyCls,fieldBodyCls:G.fieldBodyCls,extraFieldBodyCls:G.extraFieldBodyCls,errorWrapCls:G.errorWrapCls,errorWrapExtraCls:F,renderError:H||K,invalidMsgCls:H?G.invalidIconCls:K?G.invalidUnderCls:"",errorMsgCls:C,growCls:G.grow?G.growCls:"",errorWrapStyle:(H&&!P)?"visibility:hidden":"display:none",fieldLabel:G.getFieldLabel(),labelSeparator:G.labelSeparator};G.getInsertionRenderData(Q,G.labelableInsertions);return Q},getHorizontalPaddingStyle:function(){return"padding-right:"},beforeLabelRender:function(){var A=this;A.setFieldDefaults(A.getInherited().fieldDefaults);if(A.ownerLayout){A.addCls(Ext.baseCSSPrefix+A.ownerLayout.type+"-form-item")}},onLabelRender:function(){var C=this,F={},E=Ext.Element,D=C.errorWrapEl,B,A;if(D){D.setVisibilityMode((C.msgTarget==="side"&&!C.autoFitErrors)?E.VISIBILITY:E.DISPLAY)}if(C.extraMargins){B=C.el.getMargin();for(A in B){if(B.hasOwnProperty(A)){F["margin-"+A]=(B[A]+C.extraMargins[A])+"px"}}C.el.setStyle(F)}},hasVisibleLabel:function(){if(this.hideLabel){return false}return !(this.hideEmptyLabel&&!this.getFieldLabel())},getSubTplMarkup:function(){return""},getInputId:function(){return""},getActiveError:function(){return this.activeError||""},hasActiveError:function(){return !!this.getActiveError()},setActiveError:function(A){this.setActiveErrors(A)},getActiveErrors:function(){return this.activeErrors||[]},setActiveErrors:function(I){var F=this,D=F.errorWrapEl,E=F.msgTarget,C=E==="side",G=E==="qtip",A,H,B;I=Ext.Array.from(I);H=F.getTpl("activeErrorsTpl");F.activeErrors=I;A=F.activeError=H.apply({fieldLabel:F.fieldLabel,errors:I,listCls:Ext.plainListCls});F.renderActiveError();if(F.rendered){if(C){F.errorEl.dom.setAttribute("data-errorqtip",A)}else{if(G){F.getActionEl().dom.setAttribute("data-errorqtip",A)}else{if(E==="title"){F.getActionEl().dom.setAttribute("title",A)}}}if(C||G){Ext.form.Labelable.initTip()}if(!F.msgTargets[E]){B=Ext.get(E);if(B){B.dom.innerHTML=A}}}if(D){D.setVisible(I.length>0);if(C&&F.autoFitErrors){F.labelEl.addCls(F.topLabelSideErrorCls)}F.updateLayout()}},unsetActiveError:function(){var B=this,C=B.errorWrapEl,A=B.msgTarget,D;delete B.activeError;delete B.activeErrors;B.renderActiveError();if(B.rendered){if(A==="qtip"){B.getActionEl().dom.removeAttribute("data-errorqtip")}else{if(A==="title"){B.getActionEl().dom.removeAttribute("title")}}if(!B.msgTargets[A]){D=Ext.get(A);if(D){D.dom.innerHTML=""}}if(C){C.hide();if(A==="side"&&B.autoFitErrors){B.labelEl.removeCls(B.topLabelSideErrorCls)}B.updateLayout()}}},renderActiveError:function(){var B=this,A=B.getActiveError(),C=!!A;if(A!==B.lastActiveError){B.fireEvent("errorchange",B,A);B.lastActiveError=A}if(B.rendered&&!B.isDestroyed&&!B.preventMark){B.toggleInvalidCls(C);if(B.errorEl){B.errorEl.dom.innerHTML=A}}},toggleInvalidCls:function(A){this.el[A?"addCls":"removeCls"](this.invalidCls)},setFieldDefaults:function(B){var A;for(A in B){if(!this.hasOwnProperty(A)){this[A]=B[A]}}}},function(){if(Ext.supports.Touch){this.prototype.msgTarget="side"}});