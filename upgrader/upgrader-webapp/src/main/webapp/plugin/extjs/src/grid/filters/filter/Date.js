Ext.define("Ext.grid.filters.filter.Date",{extend:"Ext.grid.filters.filter.TriFilter",alias:"grid.filter.date",uses:["Ext.picker.Date","Ext.menu.Menu"],type:"date",config:{fields:{lt:{text:"Before"},gt:{text:"After"},eq:{text:"On"}},pickerDefaults:{xtype:"datepicker",border:0}},itemDefaults:{xtype:"menucheckitem",selectOnFocus:true,width:125,menu:{layout:"auto",plain:true}},dateFormat:"m/d/Y",convertValue:function(B,A){if(A&&!Ext.isDate(B)){B=Ext.isDate(B)}else{if(!A&&Ext.isDate(B)){B=(+B)}}return B},createMenu:function(B){var A=this,H={scope:A,checkchange:A.onCheckChange},K,D,C,E,I,F,L,J,G;this.callParent(arguments);D=A.getItemDefaults();K=A.getFields();C=Ext.apply({minDate:A.minDate,maxDate:A.maxDate,format:A.dateFormat,listeners:{scope:A,select:A.onMenuSelect}},A.getPickerDefaults());A.fields={};for(E=0,I=A.menuItems.length;E<I;E++){F=A.menuItems[E];if(F!=="-"){J={menu:{items:[Ext.apply({itemId:F},C)]}};if(D){Ext.merge(J,D)}if(K){Ext.merge(J,K[F])}L=A.menu.add(J);G=A.fields[F]=L.down("datepicker");G.filter=A.filter[F];G.filterKey=F;L.on(H)}}},getPicker:function(A){return this.fields[A]},onCheckChange:function(D,A){var C=D.down("datepicker").filter,B;if(!A&&C.getValue()){B={};B[C.getOperator()]=null;this.setValue(B)}},onFilterRemove:function(B){var A={};A[B]=null;this.setValue(A);this.fields[B].up("menuitem").setChecked(false,true)},onMenuSelect:function(B,H){var F=this.fields,E=F[B.itemId],D=F.gt,G=F.lt,A=F.eq,C={};E.up("menuitem").setChecked(true,true);if(E===A){G.up("menuitem").setChecked(false,true);D.up("menuitem").setChecked(false,true)}else{A.up("menuitem").setChecked(false,true);if(E===D&&(+G.value<+H)){G.up("menuitem").setChecked(false,true)}else{if(E===G&&(+D.value>+H)){D.up("menuitem").setChecked(false,true)}}}C[E.filterKey]=H;this.setValue(C);B.up("menu").hide()}});