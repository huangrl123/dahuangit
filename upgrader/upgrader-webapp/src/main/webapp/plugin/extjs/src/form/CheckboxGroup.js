Ext.define("Ext.form.CheckboxGroup",{extend:"Ext.form.FieldContainer",mixins:{field:"Ext.form.field.Field"},alias:"widget.checkboxgroup",requires:["Ext.layout.container.CheckboxGroup","Ext.form.field.Checkbox","Ext.form.field.Base"],columns:"auto",vertical:false,allowBlank:true,blankText:"You must select at least one item in this group",defaultType:"checkboxfield",groupCls:Ext.baseCSSPrefix+"form-check-group",extraFieldBodyCls:Ext.baseCSSPrefix+"form-checkboxgroup-body",layout:"checkboxgroup",componentCls:Ext.baseCSSPrefix+"form-checkboxgroup",ariaRole:"group",initComponent:function(){var A=this;A.callParent();A.initField()},initValue:function(){var B=this,A=B.value;B.originalValue=B.lastValue=A||B.getValue();if(A){B.setValue(A)}},onAdd:function(E){var C=this,B,D,A;if(E.isCheckbox){C.mon(E,"change",C.checkChange,C)}else{if(E.isContainer){B=E.items.items;for(A=0,D=B.length;A<D;A++){C.onAdd(B[A])}}}C.callParent(arguments)},onRemove:function(C){var A=this,E,D,B;if(C.isCheckbox){A.mun(C,"change",A.checkChange,A)}else{if(C.isContainer){E=C.items.items;for(B=0,D=E.length;B<D;B++){A.onRemove(E[B])}}}A.callParent(arguments)},isEqual:function(A,B){var C=Ext.Object.toQueryString;return C(A)===C(B)},getErrors:function(){var A=[];if(!this.allowBlank&&Ext.isEmpty(this.getChecked())){A.push(this.blankText)}return A},getBoxes:function(A){return this.query("[isCheckbox]"+(A||""))},eachBox:function(A,B){Ext.Array.forEach(this.getBoxes(),A,B||this)},getChecked:function(){return this.getBoxes("[checked]")},isDirty:function(){var B=this.getBoxes(),C,A=B.length;for(C=0;C<A;C++){if(B[C].isDirty()){return true}}},setReadOnly:function(A){var C=this.getBoxes(),D,B=C.length;for(D=0;D<B;D++){C[D].setReadOnly(A)}this.readOnly=A},reset:function(){var C=this,A=C.hasActiveError(),B=C.preventMark;C.preventMark=true;C.batchChanges(function(){var E=C.getBoxes(),F,D=E.length;for(F=0;F<D;F++){E[F].reset()}});C.preventMark=B;C.unsetActiveError();if(A){C.updateLayout()}},resetOriginalValue:function(){var B=this,D=B.getBoxes(),C,A=D.length;for(C=0;C<A;C++){D[C].resetOriginalValue()}B.originalValue=B.getValue();B.checkDirty()},setValue:function(E){var A=this,B=A.getBoxes(),H,F=B.length,G,C,D;A.batchChanges(function(){for(H=0;H<F;H++){G=B[H];C=G.getName();D=false;if(E&&E.hasOwnProperty(C)){if(Ext.isArray(E[C])){D=Ext.Array.contains(E[C],G.inputValue)}else{D=E[C]}}G.setValue(D)}});return A},getValue:function(){var F={},B=this.getBoxes(),H,E=B.length,D,C,A,G;for(H=0;H<E;H++){D=B[H];C=D.getName();A=D.inputValue;if(D.getValue()){if(F.hasOwnProperty(C)){G=F[C];if(!Ext.isArray(G)){G=F[C]=[G]}G.push(A)}else{F[C]=A}}}return F},getSubmitData:function(){return null},getModelData:function(){return null},validate:function(){var D=this,B,C,A;if(D.disabled){C=true}else{B=D.getErrors();C=Ext.isEmpty(B);A=D.wasValid;if(C){D.unsetActiveError()}else{D.setActiveError(B)}}if(C!==A){D.wasValid=C;D.fireEvent("validitychange",D,C);D.updateLayout()}return C}},function(){this.borrow(Ext.form.field.Base,["markInvalid","clearInvalid","setError"])});