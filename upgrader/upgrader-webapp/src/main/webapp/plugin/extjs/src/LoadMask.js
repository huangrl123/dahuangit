Ext.define("Ext.LoadMask",{extend:"Ext.Component",alias:"widget.loadmask",mixins:["Ext.util.StoreHolder"],uses:["Ext.data.StoreManager"],isLoadMask:true,msg:"Loading...",msgCls:Ext.baseCSSPrefix+"mask-loading",maskCls:Ext.baseCSSPrefix+"mask",cls:Ext.baseCSSPrefix+"mask-msg",useMsg:true,useTargetEl:false,ariaRole:"presentation",childEls:["msgEl","msgTextEl"],renderTpl:['<div id="{id}-msgEl" data-ref="msgEl" role="{role}"','<tpl if="ariaAttr"> {ariaAttr}</tpl>',' class="{[values.$comp.msgCls]} ',Ext.baseCSSPrefix,'mask-msg-inner {childElCls}">','<div id="{id}-msgTextEl" data-ref="msgTextEl" class="',Ext.baseCSSPrefix,"mask-msg-text",'{childElCls}">{msg}</div>',"</div>"],constructor:function(A){var B=this,C;if(arguments.length===2){if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn("Ext.LoadMask: LoadMask now uses a standard 1 arg constructor: use the target config")}C=B.target=A;A=arguments[1]}else{C=A.target}B.callParent([A]);if(C.isComponent){B.ownerCt=C;B.hidden=true;B.renderTo=B.getMaskTarget();B.external=B.renderTo===Ext.getBody();B.bindComponent(C)}else{if(Ext.isDefined(Ext.global.console)){Ext.global.console.warn("Ext.LoadMask: LoadMask for elements has been deprecated, use Ext.dom.Element.mask & Ext.dom.Element.unmask")}C=Ext.get(C);B.isElement=true;B.renderTo=B.target}B.render(B.renderTo);if(B.store){B.bindStore(B.store,true)}},getRenderTree:function(){return[{cls:this.maskCls,style:"display:none"},this.callParent()]},onRender:function(){this.callParent(arguments);this.maskEl=this.el.prev()},initRenderData:function(){var A=this.callParent(arguments);A.msg=this.msg||"";return A},bindComponent:function(C){var A=this,B={scope:this,resize:A.sizeMask};if(A.external){B.added=A.onComponentAdded;B.removed=A.onComponentRemoved;if(C.floating){B.move=A.sizeMask;A.activeOwner=C}else{if(C.ownerCt){A.onComponentAdded(C.ownerCt)}}}A.mon(C,B);if(A.external){A.mon(Ext.GlobalEvents,{show:A.onContainerShow,hide:A.onContainerHide,expand:A.onContainerExpand,collapse:A.onContainerCollapse,scope:A})}},onComponentAdded:function(B){var A=this;delete A.activeOwner;A.floatParent=B;if(!B.floating){B=B.up("[floating]")}if(B){A.activeOwner=B;A.mon(B,"move",A.sizeMask,A);A.mon(B,"tofront",A.onOwnerToFront,A)}else{A.preventBringToFront=true}B=A.floatParent.ownerCt;if(A.rendered&&A.isVisible()&&B){A.floatOwner=B;A.mon(B,"afterlayout",A.sizeMask,A,{single:true})}},onComponentRemoved:function(D){var C=this,A=C.activeOwner,B=C.floatOwner;if(A){C.mun(A,"move",C.sizeMask,C);C.mun(A,"tofront",C.onOwnerToFront,C)}if(B){C.mun(B,"afterlayout",C.sizeMask,C)}delete C.activeOwner;delete C.floatOwner},afterRender:function(){this.callParent(arguments);this.el.skipGarbageCollection=true;this.maskEl.skipGarbageCollection=true},onOwnerToFront:function(B,A){this.maskEl.setStyle("zIndex",A+1);this.el.setStyle("zIndex",A+2)},onContainerShow:function(A){this.onComponentShow()},onContainerHide:function(A){this.onComponentHide()},onContainerExpand:function(A){this.onComponentShow()},onContainerCollapse:function(A){this.onComponentHide()},onComponentHide:function(){var A=this;if(A.rendered&&A.isVisible()){A.hide();A.showNext=true}},onComponentShow:function(){if(this.showNext){this.show()}delete this.showNext},sizeMask:function(){var B=this,C=B.target,A=B.external?B.getOwner().el:B.getMaskTarget();if(B.rendered&&B.isVisible()){if(B.external){if(!B.isElement&&C.floating){B.onOwnerToFront(C,C.el.getZIndex())}B.maskEl.setSize(A.getSize()).alignTo(A,"tl-tl")}B.el.center(B.maskEl)}},bindStore:function(A,B){var C=this;C.mixins.storeholder.bindStore.apply(C,arguments);A=C.store;if(A&&A.isLoading()){C.onBeforeLoad()}},getStoreListeners:function(A){var D=this.onLoad,C=this.onBeforeLoad,B={cachemiss:C,cachefilled:D};if(!A.proxy.isSynchronous){B.beforeload=C;B.load=D}return B},onDisable:function(){this.callParent(arguments);if(this.loading){this.onLoad()}},getOwner:function(){return this.ownerCt||this.floatParent},getMaskTarget:function(){var A=this.getOwner();if(this.isElement){return this.target}return this.useTargetEl?A.getTargetEl():(A.getMaskTarget()||Ext.getBody())},onBeforeLoad:function(){var A=this,C=A.getOwner(),B;if(!A.disabled){A.loading=true;if(C.componentLayoutCounter){A.maybeShow()}else{B=C.afterComponentLayout;C.afterComponentLayout=function(){C.afterComponentLayout=B;B.apply(C,arguments);A.maybeShow()}}}},maybeShow:function(){var A=this,B=A.getOwner();if(!B.isVisible(true)){A.showNext=true}else{if(A.loading&&B.rendered){A.show()}}},hide:function(){if(this.isElement){this.ownerCt.unmask();this.fireEvent("hide",this);return}delete this.showNext;this.maskEl.setDisplayed(false);return this.callParent(arguments)},show:function(){if(this.isElement){this.ownerCt.mask(this.useMsg?this.msg:"",this.msgCls);this.fireEvent("show",this);return}this.maskEl.setDisplayed(true);return this.callParent(arguments)},afterShow:function(){var A=this;A.loading=true;A.callParent(arguments);if(A.hasOwnProperty("maskCls")){A.maskEl.dom.className=A.maskCls}if(A.useMsg){A.msgTextEl.setHtml(A.msg)}else{A.el.hide()}A.sizeMask()},onLoad:function(){this.loading=false;this.hide()},onDestroy:function(){var A=this;if(A.isElement){A.ownerCt.unmask()}Ext.destroy(A.maskEl);A.callParent()}});