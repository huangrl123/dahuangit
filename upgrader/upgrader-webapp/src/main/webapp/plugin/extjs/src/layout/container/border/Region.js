Ext.define("Ext.layout.container.border.Region",{override:"Ext.Component",initBorderRegion:function(){var A=this;if(!A._borderRegionInited){A._borderRegionInited=true;A.addStateEvents(["changeregion","changeweight"]);Ext.override(A,{getState:function(){var B=A.callParent();B=A.addPropertyToState(B,"region");B=A.addPropertyToState(B,"weight");return B}})}},getOwningBorderContainer:function(){var A=this.getOwningBorderLayout();return A&&A.owner},getOwningBorderLayout:function(){var A=this.ownerLayout;return(A&&A.isBorderLayout)?A:null},setRegion:function(M){var I=this,G,B=I.region;if(typeof M!=="string"){Ext.Error.raise("Use setBox to set the size or position of a component.")}if(M!==B){G=I.getOwningBorderLayout();if(G){var D=G.regionFlags[M],A=I.placeholder,F=I.splitter,H=G.owner,E=G.regionMeta,L=I.collapsed||I.floated,J,K,C;if(I.fireEventArgs("beforechangeregion",[I,M])===false){return B}Ext.suspendLayouts();I.region=M;Ext.apply(I,D);if(I.updateCollapseTool){I.updateCollapseTool()}if(F){Ext.apply(F,D);F.updateOrientation();K=H.items;C=K.indexOf(I);if(C>=0){J=E[M].splitterDelta;if(K.getAt(C+J)!==F){K.remove(F);C=K.indexOf(I);if(J>0){++C}K.insert(C,F)}}}if(A){if(L){I.expand(false)}H.remove(A);I.placeholder=null;if(L){I.collapse(null,false)}}H.updateLayout();Ext.resumeLayouts(true);I.fireEventArgs("changeregion",[I,B])}else{I.region=M}}return B},setWeight:function(A){var C=this,E=C.getOwningBorderContainer(),D=C.placeholder,B=C.weight;if(A!==B){if(C.fireEventArgs("beforechangeweight",[C,A])!==false){C.weight=A;if(D){D.weight=A}if(E){E.updateLayout()}C.fireEventArgs("changeweight",[C,B])}}return B}},function(B){var A=B.prototype;A.setBorderRegion=A.setRegion;A.setRegionWeight=A.setWeight});