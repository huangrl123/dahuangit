Ext.define("Ext.util.History",{singleton:true,alternateClassName:"Ext.History",mixins:{observable:"Ext.util.Observable"},useTopWindow:false,constructor:function(){var B=this,C,A;B.hiddenField=null;B.ready=false;B.currentToken=null;B.mixins.observable.constructor.call(B);B.onHashChange=function(){A=B.getHash();if(A!==C){C=A;B.handleStateChange(C)}}},getHash:function(){return this.win.location.hash.substr(1)},setHash:function(B){try{this.win.location.hash=B;this.currentToken=B}catch(A){}},handleStateChange:function(A){this.currentToken=A;this.fireEvent("change",A)},startUp:function(){var A=this;A.currentToken=A.getHash();if(Ext.supports.Hashchange){Ext.Element.on(A.win,"hashchange",A.onHashChange)}else{Ext.TaskManager.start({fireIdleEvent:false,run:A.onHashChange,interval:50})}A.ready=true;A.fireEvent("ready",A)},init:function(C,B){var A=this;if(A.ready){Ext.callback(C,B,[A]);return}if(!Ext.isReady){Ext.onReady(function(){A.init(C,B)});return}A.win=A.useTopWindow?window.top:window;if(C){A.on("ready",C,B,{single:true})}A.startUp()},add:function(B,A){var C=this,D=false;if(A===false||C.getToken()!==B){C.setHash(B);D=true}return D},back:function(){var A=this.useTopWindow?window.top:window;A.history.go(-1)},forward:function(){var A=this.useTopWindow?window.top:window;A.history.go(1)},getToken:function(){return this.ready?this.currentToken:this.getHash()}});