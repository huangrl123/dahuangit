Ext.define("Ext.form.action.Submit",{extend:"Ext.form.action.Action",alternateClassName:"Ext.form.Action.Submit",alias:"formaction.submit",type:"submit",run:function(){var B=this,A=B.form;if(B.clientValidation===false||A.isValid()){B.doSubmit()}else{B.failureType=Ext.form.action.Action.CLIENT_INVALID;A.afterAction(B,false)}},doSubmit:function(){var C=this,E=Ext.apply(C.createCallback(),{url:C.getUrl(),method:C.getMethod(),headers:C.headers}),B=C.form,A=C.jsonSubmit||B.jsonSubmit,D=A?"jsonData":"params",F;if(B.hasUpload()){F=C.buildForm();E.form=F.formEl;E.isUpload=true}else{E[D]=C.getParams(A)}Ext.Ajax.request(E);if(F){C.cleanup(F)}},cleanup:function(B){var E=B.formEl,D=B.uploadEls,C=B.uploadFields,F=C.length,A,G;for(A=0;A<F;++A){G=C[A];if(!G.clearOnSubmit){G.restoreInput(D[A])}}if(E){Ext.removeNode(E)}},getParams:function(B){var C=false,A=this.callParent(),D=this.form.getValues(C,C,this.submitEmptyText!==C,B,true);return Ext.apply({},D,A)},buildForm:function(){var D=this,M=[],N,H,O=D.form,I=D.getParams(),G=[],F=[],J=O.getFields().items,C,A=J.length,E,L,P,B,K,Q;for(C=0;C<A;++C){E=J[C];if(E.isFileUpload()){G.push(E)}}for(L in I){if(I.hasOwnProperty(L)){P=I[L];if(Ext.isArray(P)){K=P.length;for(B=0;B<K;B++){M.push(D.getFieldConfig(L,P[B]))}}else{M.push(D.getFieldConfig(L,P))}}}N={tag:"form",role:"presentation",action:D.getUrl(),method:D.getMethod(),target:D.target||"_self",style:"display:none",cn:M};if(G.length){N.encoding=N.enctype="multipart/form-data"}H=Ext.DomHelper.append(Ext.getBody(),N);A=G.length;for(C=0;C<A;++C){Q=G[C].extractFileInput();H.appendChild(Q);F.push(Q)}return{formEl:H,uploadFields:G,uploadEls:F}},getFieldConfig:function(A,B){return{tag:"input",type:"hidden",name:A,value:Ext.String.htmlEncode(B)}},onSuccess:function(D){var B=this.form,A=true,C=this.processResponse(D);if(C!==true&&!C.success){if(C.errors){B.markInvalid(C.errors)}this.failureType=Ext.form.action.Action.SERVER_INVALID;A=false}B.afterAction(this,A)},handleResponse:function(J){var B=this.form,H=B.errorReader,D,I,F,G,E,C;if(H){D=H.read(J);E=D.records;I=[];if(E){for(F=0,G=E.length;F<G;F++){I[F]=E[F].data}}if(I.length<1){I=null}C={success:D.success,errors:I}}else{try{C=Ext.decode(J.responseText)}catch(A){C={success:false,errors:[]}}}return C}});