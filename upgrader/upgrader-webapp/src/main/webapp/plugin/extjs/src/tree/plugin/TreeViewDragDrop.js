Ext.define("Ext.tree.plugin.TreeViewDragDrop",{extend:"Ext.plugin.Abstract",alias:"plugin.treeviewdragdrop",uses:["Ext.tree.ViewDragZone","Ext.tree.ViewDropZone"],dragText:"{0} selected node{1}",allowParentInserts:false,allowContainerDrops:false,appendOnly:false,ddGroup:"TreeDD",containerScroll:false,expandDelay:1000,enableDrop:true,enableDrag:true,nodeHighlightColor:"c3daf9",nodeHighlightOnDrop:Ext.enableFx,displayField:"text",init:function(A){A.on("render",this.onViewRender,this,{single:true})},destroy:function(){Ext.destroy(this.dragZone,this.dropZone)},onViewRender:function(B){var A=this,C;if(A.enableDrag){if(A.containerScroll){C=B.getEl()}A.dragZone=new Ext.tree.ViewDragZone(Ext.apply({view:B,ddGroup:A.dragGroup||A.ddGroup,dragText:A.dragText,displayField:A.displayField,repairHighlightColor:A.nodeHighlightColor,repairHighlight:A.nodeHighlightOnRepair,scrollEl:C},A.dragZone))}if(A.enableDrop){A.dropZone=new Ext.tree.ViewDropZone(Ext.apply({view:B,ddGroup:A.dropGroup||A.ddGroup,allowContainerDrops:A.allowContainerDrops,appendOnly:A.appendOnly,allowParentInserts:A.allowParentInserts,expandDelay:A.expandDelay,dropHighlightColor:A.nodeHighlightColor,dropHighlight:A.nodeHighlightOnDrop,sortOnDrop:A.sortOnDrop,containerScroll:A.containerScroll},A.dropZone))}}},function(){var A=this.prototype;A.nodeHighlightOnDrop=A.nodeHighlightOnRepair=Ext.enableFx});