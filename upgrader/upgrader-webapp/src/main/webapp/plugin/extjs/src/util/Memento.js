Ext.define("Ext.util.Memento",(function(){function D(I,H,G,F){I[F?F+G:G]=H[G]}function A(H,G,F){delete H[F]}function C(K,J,H,G){var I=G?G+H:H,F=K[I];if(F||K.hasOwnProperty(I)){E(J,H,F)}}function E(H,F,G){if(Ext.isDefined(G)){H[F]=G}else{delete H[F]}}function B(G,L,K,J,H){if(L){if(Ext.isArray(J)){var I,F=J.length;for(I=0;I<F;I++){G(L,K,J[I],H)}}else{G(L,K,J,H)}}}return{data:null,target:null,constructor:function(G,F){this.data={};if(G){this.target=G;if(F){this.capture(F)}}},capture:function(H,I,F){var G=this;B(D,G.data||(G.data={}),I||G.target,H,F)},remove:function(F){B(A,this.data,null,F)},restore:function(H,I,G,F){B(C,this.data,G||this.target,H,F);if(I!==false){this.remove(H)}},restoreAll:function(I,H){var F=this,J=H||this.target,K=F.data,G;I=I!==false;for(G in K){if(K.hasOwnProperty(G)){E(J,G,K[G]);if(I){delete K[G]}}}}}}()));