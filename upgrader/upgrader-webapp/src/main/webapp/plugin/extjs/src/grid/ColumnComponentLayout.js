Ext.define("Ext.grid.ColumnComponentLayout",{extend:"Ext.layout.component.Auto",alias:"layout.columncomponent",type:"columncomponent",setWidthInDom:true,beginLayout:function(A){this.callParent(arguments);A.titleContext=A.getEl("titleEl");A.triggerContext=A.getEl("triggerEl")},beginLayoutCycle:function(A){var B=this.owner;this.callParent(arguments);if(A.widthModel.shrinkWrap){B.el.setWidth("")}B.titleEl.setStyle({paddingTop:"",paddingBottom:""})},publishInnerHeight:function(B,H){var I=this,C=I.owner,G,D,F,J,A,E;if(C.getOwnerHeaderCt().hiddenHeaders){B.setProp("innerHeight",0);return}G=H-B.getBorderInfo().height;D=G;if(C.headerWrap&&!B.hasDomProp("width")){I.done=false;return}if(B.hasRawContent){F=C.textEl.getHeight();if(F){D-=F;if(D>0){A=Math.floor(D/2);E=D-A;B.titleContext.setProp("padding-top",A);B.titleContext.setProp("padding-bottom",E)}}}else{B.setProp("innerHeight",G-C.titleEl.getHeight(),false)}},measureContentHeight:function(A){return A.el.dom.offsetHeight},publishInnerWidth:function(A,B){if(!A.hasRawContent){A.setProp("innerWidth",B-A.getBorderInfo().width,false)}},calculateOwnerHeightFromContentHeight:function(C,B){var A=this.callParent(arguments),D=this.owner;if(!C.hasRawContent){if(!D.headerWrap||C.hasDomProp("width")){return B+D.titleEl.getHeight()+C.getBorderInfo().height}return null}return A},calculateOwnerWidthFromContentWidth:function(D,F){var C=this.owner,B=D.getPaddingInfo().width,A=this.getTriggerOffset(C,D),E;if(C.isGroupHeader){E=F}else{E=Math.max(F,C.textEl.getWidth()+D.titleContext.getPaddingInfo().width)}return E+B+A},getTriggerOffset:function(C,A){var B=0;if(A.widthModel.shrinkWrap&&!C.menuDisabled){if(C.query(">:not([hidden])").length===0){B=C.self.triggerElWidth}}return B}});