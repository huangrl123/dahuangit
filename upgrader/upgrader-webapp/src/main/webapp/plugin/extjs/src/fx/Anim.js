Ext.define("Ext.fx.Anim",{mixins:{observable:"Ext.util.Observable"},requires:["Ext.fx.Manager","Ext.fx.Animator","Ext.fx.Easing","Ext.fx.CubicBezier","Ext.fx.PropertyHandler"],isAnimation:true,duration:250,delay:0,delayStart:0,dynamic:false,easing:"ease",damper:1,bezierRE:/^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,reverse:false,running:false,paused:false,iterations:1,autoEnd:false,alternate:false,currentIteration:0,startTime:0,frameCount:0,constructor:function(A){var B=this,C;A=A||{};if(A.keyframes){return new Ext.fx.Animator(A)}Ext.apply(B,A);if(B.from===undefined){B.from={}}B.propHandlers={};B.config=A;B.target=Ext.fx.Manager.createTarget(B.target);B.easingFn=Ext.fx.Easing[B.easing];B.target.dynamic=B.dynamic;if(!B.easingFn){B.easingFn=String(B.easing).match(B.bezierRE);if(B.easingFn&&B.easingFn.length==5){C=B.easingFn;B.easingFn=Ext.fx.CubicBezier.cubicBezier(+C[1],+C[2],+C[3],+C[4])}}B.id=Ext.id(null,"ext-anim-");B.mixins.observable.constructor.call(B);Ext.fx.Manager.addAnim(B);if(A.autoEnd){B.running=true;B.jumpToEnd()}},setAttr:function(B,A){return Ext.fx.Manager.items.get(this.id).setAttr(this.target,B,A)},initAttrs:function(){var G=this,E=G.from,I=G.to,H=G.initialFrom||{},A={},B,C,F,D;for(D in I){if(I.hasOwnProperty(D)){B=G.target.getAttr(D,E[D]);C=I[D];if(!Ext.fx.PropertyHandler[D]){if(Ext.isObject(C)){F=G.propHandlers[D]=Ext.fx.PropertyHandler.object}else{F=G.propHandlers[D]=Ext.fx.PropertyHandler.defaultHandler}}else{F=G.propHandlers[D]=Ext.fx.PropertyHandler[D]}A[D]=F.get(B,C,G.damper,H[D],D)}}G.currentAttrs=A},start:function(D){var C=this,E=C.delay,B=C.delayStart,A;if(E){if(!B){C.delayStart=D;return}else{A=D-B;if(A<E){return}else{D=new Date(B.getTime()+E)}}}if(C.fireEvent("beforeanimate",C)!==false){C.startTime=D;if(!C.paused&&!C.currentAttrs){C.initAttrs()}C.running=true;C.frameCount=0}},jumpToEnd:function(){var A=this;if(!A.endWasCalled){if(!A.currentAttrs){A.initAttrs()}Ext.fx.Manager.jumpToEnd(A);A.end()}},runAnim:function(B){var I=this,A=I.currentAttrs,D=I.duration,J=I.easingFn,G=I.propHandlers,K={},H,F,C,E;if(B>=D){B=D;E=true}if(I.reverse){B=D-B}for(C in A){if(A.hasOwnProperty(C)){F=A[C];H=E?1:J(B/D);K[C]=G[C].set(F,H)}}I.frameCount++;return K},lastFrame:function(){var B=this,A=B.iterations,C=B.currentIteration;C++;if(C<A){if(B.alternate){B.reverse=!B.reverse}B.startTime=new Date();B.currentIteration=C;B.paused=false}else{B.currentIteration=0;B.end();B.fireEvent("lastframe",B,B.startTime)}},endWasCalled:0,end:function(){var A=this;if(A.endWasCalled++){return}A.startTime=0;A.paused=false;A.running=false;Ext.fx.Manager.removeAnim(A);A.fireEvent("afteranimate",A,A.startTime);Ext.callback(A.callback,A.scope,[A,A.startTime]);if(A.remove){A.target.destroy()}},isReady:function(){return this.paused===false&&this.running===false&&this.iterations>0},isRunning:function(){return this.paused===false&&this.running===true&&this.isAnimator!==true}});Ext.enableFx=true;