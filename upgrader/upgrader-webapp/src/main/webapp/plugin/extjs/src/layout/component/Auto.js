Ext.define("Ext.layout.component.Auto",{alias:"layout.autocomponent",extend:"Ext.layout.component.Component",type:"autocomponent",setHeightInDom:false,setWidthInDom:false,waitForOuterHeightInDom:false,waitForOuterWidthInDom:false,beginLayoutCycle:function(F,C){var E=this,B=E.lastWidthModel,D=E.lastHeightModel,A=E.owner.el;E.callParent(arguments);if(B&&B.fixed&&F.widthModel.shrinkWrap){A.setWidth(null)}if(D&&D.fixed&&F.heightModel.shrinkWrap){A.setHeight(null)}},calculate:function(F){var D=this,B=D.measureAutoDimensions(F),C=F.heightModel,A=F.widthModel,G,E;if(B.gotWidth){if(A.shrinkWrap){D.publishOwnerWidth(F,B.contentWidth)}else{if(D.publishInnerWidth){D.publishInnerWidth(F,B.width)}}}else{if(!A.auto&&D.publishInnerWidth){G=D.waitForOuterWidthInDom?F.getDomProp("width"):F.getProp("width");if(G===undefined){D.done=false}else{D.publishInnerWidth(F,G)}}}if(B.gotHeight){if(C.shrinkWrap){D.publishOwnerHeight(F,B.contentHeight)}else{if(D.publishInnerHeight){D.publishInnerHeight(F,B.height)}}}else{if(!C.auto&&D.publishInnerHeight){E=D.waitForOuterHeightInDom?F.getDomProp("height"):F.getProp("height");if(E===undefined){D.done=false}else{D.publishInnerHeight(F,E)}}}if(!B.gotAll){D.done=false}},calculateOwnerHeightFromContentHeight:function(B,A){return A+B.getFrameInfo().height},calculateOwnerWidthFromContentWidth:function(A,B){return B+A.getFrameInfo().width},publishOwnerHeight:function(A,F){var H=this,B=H.owner,C=H.calculateOwnerHeightFromContentHeight(A,F),D,E,G;if(isNaN(C)){H.done=false}else{D=Ext.Number.constrain(C,B.minHeight,B.maxHeight);if(D==C){E=H.setHeightInDom}else{G=H.sizeModels[(D<C)?"constrainedMax":"constrainedMin"];C=D;if(A.heightModel.calculatedFromShrinkWrap){A.heightModel=G}else{A.invalidate({heightModel:G})}}A.setHeight(C,E)}},publishOwnerWidth:function(B,F){var A=this,C=A.owner,D=A.calculateOwnerWidthFromContentWidth(B,F),G,E,H;if(isNaN(D)){A.done=false}else{G=Ext.Number.constrain(D,C.minWidth,C.maxWidth);if(G==D){E=A.setWidthInDom}else{H=A.sizeModels[(G<D)?"constrainedMax":"constrainedMin"];D=G;if(B.widthModel.calculatedFromShrinkWrap){B.widthModel=H}else{B.invalidate({widthModel:H})}}B.setWidth(D,E)}}});