Ext.define("Ext.grid.property.Store",{extend:"Ext.data.Store",alternateClassName:"Ext.grid.PropertyStore",remoteSort:true,requires:["Ext.grid.property.Reader","Ext.data.proxy.Memory","Ext.grid.property.Property"],constructor:function(C,A){var B=this;B.grid=C;B.source=A;B.callParent([{data:A,model:Ext.grid.property.Property,proxy:B.getProxy()}])},getProxy:function(){var A=this.proxy;if(!A){A=this.proxy=new Ext.data.proxy.Memory({model:Ext.grid.property.Property,reader:this.getReader()})}return A},getReader:function(){var A=this.reader;if(!A){A=this.reader=new Ext.grid.property.Reader({model:Ext.grid.property.Property})}return A},setSource:function(B){var A=this;A.source=B;A.suspendEvents();A.removeAll();A.getProxy().setData(B);A.load();A.resumeEvents();A.fireEvent("datachanged",A);A.fireEvent("refresh",A)},getProperty:function(A){return Ext.isNumber(A)?this.getAt(A):this.getById(A)},setValue:function(D,E,C){var B=this,A=B.getRec(D);if(A){A.set("value",E);B.source[D]=E}else{if(C){B.source[D]=E;A=new Ext.grid.property.Property({name:D,value:E},D);B.add(A)}}},remove:function(B){var A=this.getRec(B);if(A){this.callParent([A]);delete this.source[B]}},getRec:function(A){return this.getById(A)},getSource:function(){return this.source},onDestroy:function(){Ext.destroy(this.reader,this.proxy);this.callParent()}});