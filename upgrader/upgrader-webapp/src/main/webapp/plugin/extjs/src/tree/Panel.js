Ext.define("Ext.tree.Panel",{extend:"Ext.panel.Table",alias:"widget.treepanel",alternateClassName:["Ext.tree.TreePanel","Ext.TreePanel"],requires:["Ext.tree.View","Ext.selection.TreeModel","Ext.tree.Column","Ext.data.TreeStore"],viewType:"treeview",selType:"treemodel",treeCls:Ext.baseCSSPrefix+"tree-panel",rowLines:false,lines:true,useArrows:false,singleExpand:false,ddConfig:{enableDrag:true,enableDrop:true},rootVisible:true,displayField:"text",root:null,normalCfgCopy:["displayField","root","singleExpand","useArrows","lines","rootVisible","scroll"],lockedCfgCopy:["displayField","root","singleExpand","useArrows","lines","rootVisible"],isTree:true,arrowCls:Ext.baseCSSPrefix+"tree-arrows",linesCls:Ext.baseCSSPrefix+"tree-lines",noLinesCls:Ext.baseCSSPrefix+"tree-no-lines",autoWidthCls:Ext.baseCSSPrefix+"autowidth-table",constructor:function(A){A=A||{};if(A.animate===undefined){A.animate=Ext.isBoolean(this.animate)?this.animate:Ext.enableFx}this.enableAnimations=A.animate;delete A.animate;this.callParent([A])},initComponent:function(){var C=this,B=[C.treeCls],A=C.store,D;if(C.useArrows){B.push(C.arrowCls);C.lines=false}if(C.lines){B.push(C.linesCls)}else{if(!C.useArrows){B.push(C.noLinesCls)}}if(Ext.isString(A)){A=C.store=Ext.StoreMgr.lookup(A)}else{if(!A||!A.isStore){A=Ext.apply({type:"tree",root:C.root,fields:C.fields,model:C.model,proxy:"memory",folderSort:C.folderSort},A);A=C.store=Ext.StoreMgr.lookup(A)}else{if(C.root){A=C.store=Ext.data.StoreManager.lookup(A);A.setRoot(C.root);if(C.folderSort!==undefined){A.folderSort=C.folderSort;A.sort()}}}}A.setRootVisible(C.rootVisible);if(!A.getRoot()){A.setRoot({})}C.viewConfig=Ext.apply({rootVisible:C.rootVisible,animate:C.enableAnimations,singleExpand:C.singleExpand,node:A.getRoot(),hideHeaders:C.hideHeaders},C.viewConfig);if(!C.columns){if(C.initialConfig.hideHeaders===undefined){C.hideHeaders=true}C.addCls(C.autoWidthCls);C.columns=[{xtype:"treecolumn",text:"Name",flex:1,dataIndex:C.displayField}]}if(C.cls){B.push(C.cls)}C.cls=B.join(" ");C.callParent();C.selModel.treeStore=C.store;D=C.getView();C.relayEvents(D,["checkchange","afteritemexpand","afteritemcollapse"])},bindStore:function(A,C){var D=this,B=A.getRoot(),E=D.getView();D.store=A;A.singleExpand=D.singleExpand;D.storeListeners=D.mon(A,{destroyable:true,load:D.onStoreLoad,rootchange:D.onRootChange,clear:D.onClear,scope:D});if(E.store!==A){E.bindStore(A,false)}D.storeRelayers=D.relayEvents(A,["beforeload","load"]);D.rootRelayers=D.mon(B,{destroyable:true,append:D.createRelayer("itemappend"),remove:D.createRelayer("itemremove"),move:D.createRelayer("itemmove",[0,4]),insert:D.createRelayer("iteminsert"),beforeappend:D.createRelayer("beforeitemappend"),beforeremove:D.createRelayer("beforeitemremove"),beforemove:D.createRelayer("beforeitemmove"),beforeinsert:D.createRelayer("beforeiteminsert"),expand:D.createRelayer("itemexpand",[0,1]),collapse:D.createRelayer("itemcollapse",[0,1]),beforeexpand:D.createRelayer("beforeitemexpand",[0,1]),beforecollapse:D.createRelayer("beforeitemcollapse",[0,1])});if((A.autoLoad!==false&&!D.rootVisible)||B.isExpanded()){B.data.expanded=false;B.expand()}A.ownerTree=D;if(!C){D.view.setRootNode(B,true)}},unbindStore:function(){var B=this,A=B.store;if(A){Ext.destroy(B.storeListeners,B.storeRelayers,B.rootRelayers);delete A.ownerTree;A.singleExpand=null}},onClear:function(){this.view.onClear()},setRootNode:function(){return this.store.setRoot.apply(this.store,arguments)},getRootNode:function(){return this.store.getRoot()},onRootChange:function(A){this.view.setRootNode(A)},getChecked:function(){return this.getView().getChecked()},isItemChecked:function(A){return A.get("checked")},expandNode:function(C,B,A,D){return this.getView().expand(C,B,A,D||this)},collapseNode:function(C,B,A,D){return this.getView().collapse(C,B,A,D||this)},expandAll:function(A,E){var D=this,B=D.getRootNode(),C=D.enableAnimations;if(B){if(!C){Ext.suspendLayouts()}B.expand(true,A,E||D);if(!C){Ext.resumeLayouts(true)}}},collapseAll:function(A,E){var D=this,B=D.getRootNode(),C=D.enableAnimations,F=D.getView();if(B){if(!C){Ext.suspendLayouts()}E=E||D;if(F.rootVisible){B.collapse(true,A,E)}else{B.collapseChildren(true,A,E)}if(!C){Ext.resumeLayouts(true)}}},expandPath:function(H,G,E,A,F){var I=this,C=I.getRootNode(),B=1,J,D;G=G||I.getRootNode().idProperty;E=E||"/";if(Ext.isEmpty(H)){Ext.callback(A,F||I,[false,null]);return}J=H.split(E);if(C.get(G)!=J[1]){Ext.callback(A,F||I,[false,C]);return}D=function(){if(++B===J.length){Ext.callback(A,F||I,[true,C]);return}var K=C.findChild(G,J[B]);if(!K){Ext.callback(A,F||I,[false,C]);return}C=K;C.expand(false,D)};C.expand(false,D)},selectPath:function(G,F,C,A,B){var H=this,D,I,E;F=F||H.getRootNode().idProperty;C=C||"/";I=G.split(C);E=I.pop();if(I.length>1){H.expandPath(I.join(C),F,C,function(J,K){var L=K;if(J&&K){K=K.findChild(F,E);if(K){H.getSelectionModel().select(K);Ext.callback(A,B||H,[true,K]);return}}Ext.callback(A,B||H,[false,L])},H)}else{D=H.getRootNode();if(D.getId()===E){H.getSelectionModel().select(D);Ext.callback(A,B||H,[true,D])}else{Ext.callback(A,B||H,[false,null])}}}});