Ext.define("Ext.menu.CheckItem",{extend:"Ext.menu.Item",alias:"widget.menucheckitem",checkedCls:Ext.baseCSSPrefix+"menu-item-checked",uncheckedCls:Ext.baseCSSPrefix+"menu-item-unchecked",groupCls:Ext.baseCSSPrefix+"menu-group-icon",hideOnClick:false,checkChangeDisabled:false,ariaRole:"menuitemcheckbox",childEls:["checkEl"],showCheckbox:true,isMenuCheckItem:true,checkboxCls:Ext.baseCSSPrefix+"menu-item-checkbox",initComponent:function(){var A=this;A.checked=!!A.checked;A.callParent(arguments);Ext.menu.Manager.registerCheckable(A);if(A.group){if(A.initialConfig.hideOnClick!==false){A.hideOnClick=true}}},beforeRender:function(){var A=this;A.callParent();Ext.apply(A.renderData,{checkboxCls:A.checkboxCls,showCheckbox:A.showCheckbox})},afterRender:function(){var A=this;A.callParent();A.checked=!A.checked;A.setChecked(!A.checked,true);if(A.checkChangeDisabled){A.disableCheckChange()}},disableCheckChange:function(){var A=this,B=A.checkEl;if(B){B.addCls(A.disabledCls)}if(Ext.isIE8&&A.rendered){A.el.repaint()}A.checkChangeDisabled=true},enableCheckChange:function(){var A=this,B=A.checkEl;if(B){B.removeCls(A.disabledCls)}A.checkChangeDisabled=false},onClick:function(A){var B=this;if(!B.disabled&&!B.checkChangeDisabled&&!(B.checked&&B.group)){B.setChecked(!B.checked)}this.callParent([A])},onDestroy:function(){Ext.menu.Manager.unregisterCheckable(this);this.callParent(arguments)},setChecked:function(E,C){var D=this,B=D.checkedCls,F=D.uncheckedCls,A=D.el;if(D.checked!==E&&(C||D.fireEvent("beforecheckchange",D,E)!==false)){if(A){if(E){A.addCls(B);A.removeCls(F)}else{A.addCls(F);A.removeCls(B)}}D.checked=E;Ext.menu.Manager.onCheckChange(D,E);if(!C){Ext.callback(D.checkHandler,D.scope||D,[D,E]);D.fireEvent("checkchange",D,E)}}}});