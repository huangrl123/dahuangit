Ext.define("Ext.grid.plugin.RowExpander",{extend:"Ext.plugin.Abstract",lockableScope:"normal",requires:["Ext.grid.feature.RowBody"],alias:"plugin.rowexpander",columnWidth:24,rowBodyTpl:null,lockedTpl:null,expandOnEnter:true,expandOnDblClick:true,selectRowOnExpand:false,headerWidth:24,rowBodyTrSelector:"."+Ext.baseCSSPrefix+"grid-rowbody-tr",rowBodyHiddenCls:Ext.baseCSSPrefix+"grid-row-body-hidden",rowCollapsedCls:Ext.baseCSSPrefix+"grid-row-collapsed",addCollapsedCls:{fn:function(B,C,D){var A=this.rowExpander;if(!A.recordsExpanded[C.record.internalId]){C.itemClasses.push(A.rowCollapsedCls)}this.nextTpl.applyOut(C,B,D)},syncRowHeights:function(B,A){this.rowExpander.syncRowHeights(B,A)},priority:20000},setCmp:function(C){var B=this,A;B.callParent(arguments);B.recordsExpanded={};if(!B.rowBodyTpl){Ext.Error.raise("The 'rowBodyTpl' config is required and is not defined.")}B.rowBodyTpl=Ext.XTemplate.getTpl(B,"rowBodyTpl");A=B.getFeatureConfig(C);if(C.features){C.features=Ext.Array.push(A,C.features)}else{C.features=A}},getFeatureConfig:function(D){var C=this,A=[],B={ftype:"rowbody",rowExpander:C,recordsExpanded:C.recordsExpanded,rowBodyHiddenCls:C.rowBodyHiddenCls,rowCollapsedCls:C.rowCollapsedCls,setupRowData:C.getRowBodyFeatureData,setup:C.setup};A.push(Ext.apply({lockableScope:"normal",getRowBodyContents:C.getRowBodyContentsFn(C.rowBodyTpl)},B));if(D.enableLocking){A.push(Ext.apply({lockableScope:"locked",getRowBodyContents:C.lockedTpl?C.getRowBodyContentsFn(C.lockedTpl):function(){return""}},B))}return A},getRowBodyContentsFn:function(B){var A=this;return function(C){B.owner=A;return B.applyTemplate(C.record.getData())}},init:function(E){if(E.lockable){E=E.normalGrid}var C=this,B=E.ownerLockable,D,A;C.callParent(arguments);C.grid=E;D=C.view=E.getView();C.bindView(D);D.addRowTpl(C.addCollapsedCls).rowExpander=C;if(B){C.addExpander(B.lockedGrid.headerCt.items.getCount()?B.lockedGrid:E);A=B.lockedGrid.getView();C.bindView(A);A.addRowTpl(C.addCollapsedCls).rowExpander=C;B.syncRowHeight=true;B.mon(B,{processcolumns:C.onLockableProcessColumns,lockcolumn:C.onColumnLock,unlockcolumn:C.onColumnUnlock,scope:C});C.viewListeners=D.on({itemadd:Ext.Function.createAnimationFrame(B.syncRowHeights,B)})}else{C.addExpander(E);E.on("beforereconfigure",C.beforeReconfigure,C)}},beforeReconfigure:function(F,A,B,D,E){var C=this;if(C.viewListeners){C.viewListeners.destroy()}if(B){C.expanderColumn=new Ext.grid.Column(C.getHeaderConfig());B.unshift(C.expanderColumn)}},onLockableProcessColumns:function(C,A,B){this.addExpander(A.length?C.lockedGrid:C.normalGrid)},addExpander:function(A){var B=this,C=B.getHeaderConfig();if(A.isLocked&&A.ownerLockable.shrinkWrapLocked){A.width+=C.width}B.expanderColumn=A.headerCt.insert(0,C);A.getSelectionModel().injectCheckbox=1},getRowBodyFeatureData:function(C,D,B){var A=this;A.self.prototype.setupRowData.apply(A,arguments);B.rowBody=A.getRowBodyContents(B);B.rowBodyCls=A.recordsExpanded[C.internalId]?"":A.rowBodyHiddenCls},setup:function(C,B){var A=this,D=A.grid.ownerLockable;A.self.prototype.setup.apply(A,arguments);if(D&&Ext.Array.indexOf(A.grid.columnManager.getColumns(),A.rowExpander.expanderColumn)!==-1){B.rowBodyColspan-=1}},bindView:function(A){if(this.expandOnEnter){A.on("itemkeydown",this.onKeyDown,this)}if(this.expandOnDblClick){A.on("itemdblclick",this.onDblClick,this)}},onKeyDown:function(A,H,G,I,B){if(B.getKey()===B.ENTER){var D=A.store,E=A.getSelectionModel().getSelection(),C=E.length,F=0;for(;F<C;F++){I=D.indexOf(E[F]);this.toggleRow(I,E[F])}}},onDblClick:function(C,D,B,E,A){this.toggleRow(E,D)},toggleRow:function(N,M){var K=this,A=K.view,E=A.bufferedRenderer,H=A.scrollManager,G=A,O=A.getNode(N),L=Ext.fly(O),C,I=L.down(K.rowBodyTrSelector,true),F=L.hasCls(K.rowCollapsedCls),B=F?"removeCls":"addCls",P=F?2:1,J=K.grid.ownerLockable,D;L[B](K.rowCollapsedCls);Ext.fly(I)[B](K.rowBodyHiddenCls);K.recordsExpanded[M.internalId]=F;if(K.grid.ownerLockable){G=J.getView();if(J.lockedGrid.isVisible()){A=J.view.lockedGrid.view;C=Ext.fly(A.getNode(N));if(C){C[B](K.rowCollapsedCls);I=C.down(K.rowBodyTrSelector,true);Ext.fly(I)[B](K.rowBodyHiddenCls)}}}if(K.expanderColumn){D=Ext.fly(A.getRow(N)).down(K.expanderColumn.getCellSelector(),true);if(D){D.rowSpan=P}}G.fireEvent(F?"expandbody":"collapsebody",O,M,I);if(A.getSizeModel().height.shrinkWrap||J){A.refreshSize(true)}if(H){if(E){E.stretchView(A,E.getScrollHeight(true))}else{H.refresh(true)}}},syncRowHeights:function(D,B){var A=this,C=Ext.fly(D).down(A.rowBodyTrSelector),F=Ext.fly(B).down(A.rowBodyTrSelector),G,E;if(F.isVisible()){if((G=C.getHeight())!==(E=F.getHeight())){if(G>E){F.setHeight(G)}else{C.setHeight(E)}}}else{C.dom.style.height=F.dom.style.height=""}},onColumnUnlock:function(D,C){var B=this,A;D=B.grid.ownerLockable;A=D.lockedGrid.visibleColumnManager.getColumns();if(A.length===1){if(A[0]===B.expanderColumn){D.unlock(B.expanderColumn)}else{D.lock(B.expanderColumn,0)}}},onColumnLock:function(D,C){var B=this,A;D=B.grid.ownerLockable;A=D.lockedGrid.visibleColumnManager.getColumns();if(A.length===1){D.lockedGrid.headerCt.insert(0,B.expanderColumn)}},getHeaderConfig:function(){var A=this,B=A.grid.ownerLockable;return{width:A.headerWidth,lockable:false,autoLock:true,sortable:false,resizable:false,draggable:false,hideable:false,menuDisabled:true,tdCls:Ext.baseCSSPrefix+"grid-cell-special",innerCls:Ext.baseCSSPrefix+"grid-cell-inner-row-expander",renderer:function(){return'<div class="'+Ext.baseCSSPrefix+'grid-row-expander" role="presentation"></div>'},processEvent:function(C,G,H,F,I,D,E){if(D.getTarget("."+Ext.baseCSSPrefix+"grid-row-expander")){if(C==="click"){A.toggleRow(F,E);return A.selectRowOnExpand}}},isLocked:function(){return B.lockedGrid.isVisible()||this.locked},editRenderer:function(){return"&#160;"}}}});