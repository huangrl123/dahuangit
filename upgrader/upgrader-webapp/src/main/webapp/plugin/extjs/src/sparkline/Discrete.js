Ext.define("Ext.sparkline.Discrete",{extend:"Ext.sparkline.BarBase",alias:"widget.sparklinediscrete",config:{lineHeight:"auto",thresholdColor:null,thresholdValue:0,chartRangeMax:null,chartRangeMin:null,chartRangeClip:false,tipTpl:new Ext.XTemplate("{prefix}{value}{suffix}")},applyValues:function(A){A=Ext.Array.map(Ext.Array.from(A),Number);this.disabled=!(A&&A.length);return A},onUpdate:function(){var C=this,D=C.values,B=C.getChartRangeMin(),A=C.getChartRangeMax(),E=C.getChartRangeClip();C.callParent(arguments);C.regionShapes={};C.min=Math.min.apply(Math,D);C.max=Math.max.apply(Math,D);C.range=C.max-C.min;C.width=C.getWidth();C.interval=Math.floor(C.width/D.length);C.itemWidth=C.width/D.length;if(B!=null&&(E||B<C.min)){C.min=B}if(A!=null&&(E||A>C.max)){C.max=A}if(C.canvas){if(C.getLineHeight()==="auto"){C.setLineHeight(Math.round(C.getHeight()*0.3))}}},getRegion:function(A,B){return Math.floor(A/this.itemWidth)},getRegionFields:function(A){return{isNull:this.values[A]===undefined,value:this.values[A],offset:A}},renderRegion:function(P,L){var D=this,K=D.values,F=D.min,J=D.max,B=D.range,G=D.interval,C=D.canvas,N=D.getHeight(),I=D.getLineHeight(),A=N-I,O,M,E,H,Q=D.getThresholdColor();M=Ext.Number.constrain(K[P],F,J);H=P*G;O=Math.round(A-A*((M-F)/B));E=(Q&&M<D.getThresholdValue())?Q:D.getLineColor();if(L){E=D.calcHighlightColor(E)}C.drawLine(H,O,H,O+I,E).append()}});