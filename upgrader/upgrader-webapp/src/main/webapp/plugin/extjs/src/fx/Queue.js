Ext.define("Ext.fx.Queue",{requires:["Ext.util.HashMap"],constructor:function(){this.targets=new Ext.util.HashMap();this.fxQueue={}},getFxDefaults:function(A){var B=this.targets.get(A);if(B){return B.fxDefaults}return{}},setFxDefaults:function(A,B){var C=this.targets.get(A);if(C){C.fxDefaults=Ext.apply(C.fxDefaults||{},B)}},stopAnimation:function(A){var B=this,D=B.getFxQueue(A),C=D.length;while(C){D[C-1].end();C--}},getActiveAnimation:function(A){var B=this.getFxQueue(A);return(B&&!!B.length)?B[0]:false},hasFxBlock:function(A){var B=this.getFxQueue(A);return B&&B[0]&&B[0].block},getFxQueue:function(A){if(!A){return false}var B=this,D=B.fxQueue[A],C=B.targets.get(A);if(!C){return false}if(!D){B.fxQueue[A]=[];if(C.type!="element"){C.target.on("destroy",function(){B.fxQueue[A]=[]})}}return B.fxQueue[A]},queueFx:function(A){var B=this,C=A.target,E,D;if(!C){return}E=B.getFxQueue(C.getId());D=E.length;if(D){if(A.concurrent){A.paused=false}else{E[D-1].on("afteranimate",function(){A.paused=false})}}else{A.paused=false}A.on("afteranimate",function(){Ext.Array.remove(E,A);if(E.length===0){B.targets.remove(A.target)}if(A.remove){if(C.type=="element"){var F=Ext.get(C.id);if(F){F.destroy()}}}},B,{single:true});E.push(A)}});