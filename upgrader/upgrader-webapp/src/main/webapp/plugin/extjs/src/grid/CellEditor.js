Ext.define("Ext.grid.CellEditor",{extend:"Ext.Editor",y:0,constructor:function(A){A=Ext.apply({},A);if(A.field){A.field.monitorTab=false}this.callParent([A])},setGrid:function(E){var B=this,D=B.grid,C,A;if(E!=D){A={beforerefresh:B.beforeViewRefresh,refresh:B.onViewRefresh,scope:B};if(D){D.getView().un(A)}C=E.getView();B.renderTo=C.getTargetEl().dom;B.grid=B.ownerCt=E;C.on(A)}},adjustPosition:function(){return{x:0,y:0}},beforeViewRefresh:function(){var B=this,A=B.el&&B.el.dom;if(A){if(B.editing&&!(B.field.column&&B.field.column.sorting)){B.wasAllowBlur=B.allowBlur;B.allowBlur=false}if(A.parentNode){A.parentNode.removeChild(A)}}},onViewRefresh:function(){var C=this,A=C.el&&C.el.dom,B;if(A){B=C.field.column&&C.field.column.sorting;if(C.editing&&!B){C.allowBlur=C.wasAllowBlur;C.renderTo.appendChild(A);C.field.focus()}else{if(!B){Ext.getDetachedBody().dom.appendChild(A)}}if(C.editing&&B){C.completeEdit()}}},onShow:function(){var B=this,A=B.boundEl.first();if(B.el.dom.parentNode!==B.renderTo){B.renderTo.appendChild(B.el.dom)}if(A){if(B.isForTree){A=A.child(B.treeNodeSelector)}A.hide()}B.callParent(arguments)},onEditComplete:function(A){if(A){this.restoreCell()}this.callParent(arguments)},onHide:function(){this.restoreCell();this.callParent(arguments)},restoreCell:function(){var B=this,A=B.boundEl.first();if(A){if(B.isForTree){A=A.child(B.treeNodeSelector)}A.show()}},afterRender:function(){var A=this,B=A.field;A.callParent(arguments);if(B.isCheckbox){B.mon(B.inputEl,{mousedown:A.onCheckBoxMouseDown,click:A.onCheckBoxClick,scope:A})}Ext.on("mousedown",this.onDocMouseDown,this)},onCheckBoxMouseDown:function(){this.completeEdit=Ext.emptyFn},onDocMouseDown:function(A){var B=this.field;if(B&&B.hasFocus&&!B.owns(A.target)){B.blur()}},onCheckBoxClick:function(){delete this.completeEdit;this.field.focus(false,10)},realign:function(I){var G=this,B=G.boundEl,J=B.first(),E=J.dom.firstChild,F=B.getWidth(),D=Ext.Array.clone(G.offsets),K=G.grid,H,A="",C=!E||(E.nodeType===3&&!(Ext.String.trim(A=E.data).length));if(G.isForTree){H=G.getTreeNodeOffset(J);F-=Math.abs(H);D[0]+=H}if(K.columnLines){F-=B.getBorderWidth("rl")}if(I===true){G.field.setWidth(F)}if(C){J.dom.innerHTML="X"}G.alignTo(J,G.alignment,D);if(C){J.dom.firstChild.data=A}},getTreeNodeOffset:function(A){return A.child(this.treeNodeSelector).getOffsetsTo(A)[0]},onEditorTab:function(A){var B=this.field;if(B.onEditorTab){B.onEditorTab(A)}},onFieldBlur:function(){this.callParent(arguments);this.selectSameEditor=false},alignment:"l-l",hideEl:false,cls:Ext.baseCSSPrefix+"small-editor "+Ext.baseCSSPrefix+"grid-editor "+Ext.baseCSSPrefix+"grid-cell-editor",treeNodeSelector:"."+Ext.baseCSSPrefix+"tree-node-text",shim:false,shadow:false});