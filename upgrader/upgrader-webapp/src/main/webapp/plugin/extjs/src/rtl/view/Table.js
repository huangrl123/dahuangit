Ext.define("Ext.rtl.view.Table",{override:"Ext.view.Table",rtlCellTpl:['<td class="'+Ext.baseCSSPrefix+'rtl {tdCls}" {tdAttr} {[Ext.aria ? "id=\\"" + Ext.id() + "\\"" : ""]} style="width:{column.cellWidth}px;<tpl if="tdStyle">{tdStyle}</tpl>" {ariaCellAttr}>','<div {unselectableAttr} class="'+Ext.baseCSSPrefix+"rtl "+Ext.baseCSSPrefix+'grid-cell-inner {innerCls}" ','style="text-align:{[this.getAlign(values.align)]};<tpl if="style">{style}</tpl>" {ariaCellInnerAttr}>{value}</div>',"</td>",{priority:0,rtlAlign:{right:"left",left:"right",center:"center"},getAlign:function(A){return this.rtlAlign[A]}}],beforeRender:function(){var A=this;A.callParent();if(A.getInherited().rtl){A.addCellTpl(A.getTpl("rtlCellTpl"))}},getCellPaddingAfter:function(A){return Ext.fly(A).getPadding(this.getInherited().rtl?"l":"r")},scrollElIntoView:function(A,D,C){var B=this.scrollManager;if(B){B.scrollIntoView(A,D,C)}else{Ext.fly(A)[this.getInherited().rtl?"rtlScrollIntoView":"scrollIntoView"](this.el,D,C)}}});