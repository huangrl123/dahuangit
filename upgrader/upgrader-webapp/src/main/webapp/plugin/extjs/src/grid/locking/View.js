Ext.define("Ext.grid.locking.View",{alternateClassName:"Ext.grid.LockingView",requires:["Ext.view.AbstractView"],mixins:["Ext.util.Observable","Ext.util.StoreHolder"],isLockingView:true,loadMask:true,eventRelayRe:/^(beforeitem|beforecontainer|item|container|cell|refresh)/,constructor:function(C){var D=this,A,B;D.panel=C.panel;C.locked.viewConfig.bindStore=C.normal.viewConfig.bindStore=Ext.emptyFn;C.locked.viewConfig.beforeLayout=C.normal.viewConfig.beforeLayout=D.beforeLayout;D.lockedGrid=D.panel.lockedGrid=Ext.ComponentManager.create(C.locked);D.lockedView=A=D.lockedGrid.getView();if(D.lockedGrid.isTree){D.lockedView.animate=false;C.normal.store=A.store;C.normal.viewConfig.stripeRows=D.lockedView.stripeRows;C.normal.rowLines=D.lockedGrid.rowLines}D.normalGrid=D.panel.normalGrid=Ext.ComponentManager.create(C.normal);A.lockingPartner=B=D.normalView=D.normalGrid.getView();B.lockingPartner=A;D.loadMask=(C.loadMask!==undefined)?C.loadMask:D.loadMask;D.mixins.observable.constructor.call(D);D.relayEvents(A,Ext.view.Table.events);D.relayEvents(B,Ext.view.Table.events);B.on({scope:D,itemmouseleave:D.onItemMouseLeave,itemmouseenter:D.onItemMouseEnter});A.on({scope:D,itemmouseleave:D.onItemMouseLeave,itemmouseenter:D.onItemMouseEnter});D.panel.on({render:D.onPanelRender,scope:D});D.loadingText=B.loadingText;D.loadingCls=B.loadingCls;D.loadingUseMsg=B.loadingUseMsg;D.bindStore(B.dataSource,true,"dataSource")},beforeLayout:function(){var C=this.ownerCt.ownerLockable.view,A=C.lockedGrid.view,B=C.normalGrid.view;if(!C.relayingOperation){if(C.lockedGrid.isVisible()){if(A.refreshNeeded){A.doFirstRefresh(A.dataSource)}}if(B.refreshNeeded){B.doFirstRefresh(B.dataSource)}}},onPanelRender:function(){var A=this,C=A.loadMask,B={target:A.panel,msg:A.loadingText,msgCls:A.loadingCls,useMsg:A.loadingUseMsg,store:A.panel.store};A.el=A.panel.body;A.fireEvent("render",A);if(C){if(Ext.isObject(C)){B=Ext.apply(B,C)}A.loadMask=new Ext.LoadMask(B)}},getRefOwner:function(){return this.panel},getGridColumns:function(){var A=this.lockedGrid.headerCt.getVisibleGridColumns();return A.concat(this.normalGrid.headerCt.getVisibleGridColumns())},getEl:function(A){return this.getViewForColumn(A).getEl()},getViewForColumn:function(C){var A=this.lockedView,B;A.headerCt.cascade(function(D){if(D===C){B=true;return false}});return B?A:this.normalView},onItemMouseEnter:function(C,D){var A=this,E=A.lockedView,F=A.normalView,B;if(C.trackOver){if(C!==E){F=E}B=F.getNode(D);F.highlightItem(B)}},onItemMouseLeave:function(B,C){var A=this,D=A.lockedView,E=A.normalView;if(B.trackOver){if(B!==D){E=D}E.clearHighlight()}},relayFn:function(A,C){C=C||[];var B=this.lockedView;this.relayingOperation=true;B[A].apply(B,C);B=this.normalView;B[A].apply(B,C);this.relayingOperation=false},getSelectionModel:function(){return this.panel.getSelectionModel()},getStore:function(){return this.panel.store},bindStore:function(A,B,D){var C=this;C.mixins.storeholder.bindStore.apply(C,arguments);if(!B&&D!=="dataSource"){C.getSelectionModel().bindStore(A)}if(C.normalView.componentLayoutCounter){Ext.suspendLayouts();C.normalView.doFirstRefresh(A);C.lockedView.doFirstRefresh(A);Ext.resumeLayouts(true)}},getStoreListeners:function(){var A=this;return{refresh:A.onDataRefresh,replace:A.onReplace,add:A.onAdd,remove:A.onRemove,update:A.onUpdate,clear:A.refresh}},onDataRefresh:function(B,A,C){this.relayFn("onDataRefresh",arguments)},onReplace:function(B,A,C){this.relayFn("onReplace",arguments)},onAdd:function(B,A,C){this.relayFn("onAdd",arguments)},onRemove:function(B,A,C){this.relayFn("onRemove",arguments)},onUpdate:function(B,A,C){this.relayFn("onUpdate",arguments)},refresh:function(B,A,C){this.relayFn("refresh",arguments)},getNode:function(A){return this.normalView.getNode(A)},getRow:function(A){return this.normalView.getRow(A)},getCell:function(B,D){var C=this.getViewForColumn(D),A=C.getRow(B);return Ext.fly(A).down(D.getCellSelector())},indexOf:function(B){var A=this.lockedView.indexOf(B);if(!A){A=this.normalView.indexOf(B)}return A},focus:function(){var A=this.getSelectionModel().getCurrentPosition(),B=A?A.view:this.normalView;B.focus()},focusRow:function(A){this.normalView.focusRow(A)},focusCell:function(A){A.view.focusCell(A)},isVisible:function(A){return this.panel.isVisible(A)},getCellByPosition:function(C,D){var B=C.column,A=this.lockedGrid.getColumnManager().getColumns().length;if(B>=A){C=Ext.apply({},C);C.column-=A;return this.normalView.getCellByPosition(C,D)}else{return this.lockedView.getCellByPosition(C,D)}},getRecord:function(B){var A=this.lockedView.getRecord(B);if(!A){A=this.normalView.getRecord(B)}return A},scrollBy:function(){var A=this.normalView;A.scrollBy.apply(A,arguments)},addElListener:function(B,A,C){this.relayFn("addElListener",arguments)},refreshNode:function(){this.relayFn("refreshNode",arguments)},addRowCls:function(){this.relayFn("addRowCls",arguments)},removeRowCls:function(){this.relayFn("removeRowCls",arguments)},destroy:function(){var A=this,B=A.loadMask;this.isDestroyed=true;A.clearListeners();if(B&&B.bindStore){B.bindStore(null)}}},function(){this.borrow(Ext.Component,["up"]);this.borrow(Ext.view.AbstractView,["doFirstRefresh","applyFirstRefresh"])});