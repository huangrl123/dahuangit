Ext.define("Ext.form.field.Display",{extend:"Ext.form.field.Base",alias:"widget.displayfield",requires:["Ext.util.Format","Ext.XTemplate"],alternateClassName:["Ext.form.DisplayField","Ext.form.Display"],ariaRole:"textbox",fieldSubTpl:['<div id="{id}" role="{role}" {inputAttrTpl}','<tpl if="fieldStyle"> style="{fieldStyle}"</tpl>',' class="{fieldCls} {fieldCls}-{ui}">{value}</div>',{compiled:true,disableFormats:true}],readOnly:true,fieldCls:Ext.baseCSSPrefix+"form-display-field",fieldBodyCls:Ext.baseCSSPrefix+"form-display-field-body",htmlEncode:false,noWrap:false,validateOnChange:false,initEvents:Ext.emptyFn,submitValue:false,valueToRaw:function(A){if(!A&&A!==0){return""}else{return A}},isDirty:function(){return false},isValid:Ext.returnTrue,validate:Ext.returnTrue,getRawValue:function(){return this.rawValue},setRawValue:function(B){var A=this;B=Ext.valueFrom(B,"");A.rawValue=B;if(A.rendered){A.inputEl.dom.innerHTML=A.getDisplayValue();A.updateLayout()}return B},getDisplayValue:function(){var B=this,C=this.getRawValue(),A;if(B.renderer){A=B.renderer.call(B.scope||B,C,B)}else{A=B.htmlEncode?Ext.util.Format.htmlEncode(C):C}return A},getSubTplData:function(){var A=this.callParent(arguments);A.value=this.getDisplayValue();return A}});