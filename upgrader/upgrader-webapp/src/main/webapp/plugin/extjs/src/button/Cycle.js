Ext.define("Ext.button.Cycle",{alias:"widget.cycle",extend:"Ext.button.Split",alternateClassName:"Ext.CycleButton",getButtonText:function(B){var A=this,C="";if(B&&A.showText===true){if(A.prependText){C+=A.prependText}C+=B.text;return C}return A.text},setActiveItem:function(C,B){var A=this;if(!Ext.isObject(C)){C=A.menu.getComponent(C)}if(C){if(!A.rendered){A.text=A.getButtonText(C);A.iconCls=C.iconCls;A.glyph=C.glyph}else{A.setText(A.getButtonText(C));A.setIconCls(C.iconCls);A.setGlyph(C.glyph)}A.activeItem=C;if(!C.checked){C.setChecked(true,false)}if(A.forceIcon){A.setIconCls(A.forceIcon)}if(A.forceGlyph){A.setGlyph(A.forceGlyph)}if(!B){A.fireEvent("change",A,C)}}},getActiveItem:function(){return this.activeItem},initComponent:function(){var D=this,E=0,B,A,F,C;if(D.changeHandler){D.on("change",D.changeHandler,D.scope||D);delete D.changeHandler}B=(D.menu.items||[]).concat(D.items||[]);D.menu=Ext.applyIf({cls:Ext.baseCSSPrefix+"cycle-menu",items:[]},D.menu);F=B.length;for(A=0;A<F;A++){C=B[A];C=Ext.applyIf({group:D.id,itemIndex:A,checkHandler:D.checkHandler,scope:D,checked:C.checked||false},C);D.menu.items.push(C);if(C.checked){E=A}}D.itemCount=D.menu.items.length;D.callParent(arguments);D.on("click",D.toggleSelected,D);D.setActiveItem(E,D)},checkHandler:function(B,A){if(A){this.setActiveItem(B)}},toggleSelected:function(){var A=this,B=A.menu,C;C=A.activeItem.next(":not([disabled])")||B.items.getAt(0);C.setChecked(true)}});